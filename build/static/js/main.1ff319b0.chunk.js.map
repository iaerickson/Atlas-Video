{"version":3,"sources":["utils/LogUploader/log.worker.ts","containers/custom-browser-router.tsx","containers/theme-container.tsx","components/custom-button.tsx","utils/custom-storage.ts","stores/global.ts","i18n/zh.ts","i18n/en.ts","i18n.ts","components/role-radio.tsx","components/icon.tsx","components/form-input.tsx","components/form-select.tsx","components/lang-select.tsx","utils/platform.ts","containers/platform-container.tsx","utils/agora-rtc-client.ts","utils/agora-rtm-client.ts","utils/helper.ts","utils/agora-electron-client.ts","services/intl-error-helper.ts","utils/fetch.ts","stores/history.ts","services/edu-api.ts","stores/room.ts","components/github-icon/index.tsx","utils/api/index.ts","utils/LogUploader/db.ts","utils/LogUploader/index.ts","pages/home.tsx","components/volume/speaker.tsx","components/volume/voice.tsx","pages/error-page/state.tsx","stores/whiteboard.ts","containers/root-container.tsx","components/video-player.tsx","components/setting-card.tsx","hooks/use-setting-control.tsx","pages/device-test.tsx","utils/types.ts","components/nav.tsx","components/dialog/index.tsx","components/native-shared-window.tsx","pages/classroom/index.tsx","components/loading.tsx","components/toast.tsx","components/progress/progress.tsx","pages/replay/model.ts","utils/api/whiteboard-api.ts","utils/api/rtm-restful.ts","components/whiteboard/agora/rtm-player.tsx","components/chat/message.tsx","utils/agora-web-player/logger.ts","pages/replay/replay.tsx","utils/agora-web-player/agora-player.ts","utils/agora-web-player/timeline-scheduler.ts","pages/replay/agora-replay.tsx","hooks/use-streams.ts","components/video-marquee.tsx","components/whiteboard.tsx","components/whiteboard/control.tsx","components/whiteboard/tools.tsx","utils/upload-manager.ts","components/whiteboard/upload/upload-btn.tsx","components/whiteboard/resources-menu/index.tsx","components/whiteboard/scale-controller.tsx","components/whiteboard/upload/upload-notice.tsx","components/mediaboard.tsx","components/chat/panel.tsx","hooks/use-chat-control.ts","components/student-list.tsx","hooks/use-chat-text.ts","components/roomboard.tsx","pages/classroom/small-class.tsx","components/chat/board.tsx","pages/classroom/one-to-one.tsx","pages/classroom/big-class.tsx","pages/404.tsx","pages/replay/index.tsx","pages/config/index.tsx","pages/index.tsx","serviceWorker.js","index.tsx"],"names":["module","exports","Worker","RouterContext","React","createContext","CustomBrowserRouter","children","routeProps","Provider","value","THEME","createMuiTheme","typography","overrides","MuiRadio","root","padding","MuiSvgIcon","width","height","MuiFormControl","margin","MuiInput","underline","borderBottom","ThemeProvider","theme","props","Button","variant","className","color","onClick","name","GlobalStorage","storage","languageKey","this","window","sessionStorage","key","JSON","parse","getItem","_","val","setItem","stringify","removeItem","lang","save","language","read","navigator","channelMessages","isEmpty","count","messages","chatMessages","filter","it","message_type","reduce","collect","payload","json","content","concat","account","ms","src","length","roomTypes","text","path","globalStore","subject","state","defaultState","loading","toast","type","message","dialog","confirmText","cancelText","uploadNotice","title","notice","reason","nativeWindowInfo","visible","items","lock","active","newMessageCount","getLanguage","Subject","next","updateState","initialize","subscribe","unsubscribe","rootState","commit","location","reload","len","BUILD_VERSION","process","REACT_APP_BUILD_VERSION","zhCN","en","t","options","match","get","replace","console","error","useStyles","makeStyles","radioGroup","display","clear","justifyContent","required","fontSize","lineHeight","position","top","classes","RadioGroup","row","role","onChange","FormControlLabel","control","Radio","label","labelPlacement","requiredText","Typography","data","icon","disable","iconClass","dataName","data-name","formInput","InputLabel","Label","Input","evt","target","memo","Select","map","item","MenuItem","log","PlatformContext","usePlatform","useContext","PlatformContainer","platform","useLocation","ipc","useEffect","pathname","send","handleClick","NavBtn","HomeBtn","handleSetting","SettingBtn","AgoraRTC","Logger","enableLogUpload","setLogLevel","DEBUG","RoomMessage","ChatCmdType","CoVideoType","streamEvents","clientEvents","APP_ID","AgoraRTCClient","REACT_APP_AGORA_APP_TOKEN","streamID","_init","_joined","_published","_internalTimer","_client","createClient","mode","codec","_bus","EventEmitter","_localStream","_streamEvents","_clientEvents","_addEventListener","appId","prepareInit","Promise","resolve","reject","init","enableRtt","initClient","subscribeClientEvents","setInterval","getTransportStats","stats","RTT","emit","unsubscribeClientEvents","evtName","push","on","args","off","removeEventListener","newToken","warn","renewToken","removeAllListeners","cb","publish","err","setTimeout","unpublish","destroyLocalStream","stream","streamType","setRemoteVideoStreamType","enableDualStream","createStream","mirror","subscribeLocalStreamEvents","audioOutput","deviceId","setAudioOutput","then","catch","unsubscribeLocalStreamEvents","isPlaying","stop","close","uid","channel","token","join","leave","speakerId","volume","setAudioVolume","video","audio","clearInterval","destroy","getDevices","devices","_devices","forEach","kind","AgoraWebClient","deps","rtc","shareClient","localUid","bus","shared","joined","published","tmpStream","roomStore","client","cameraList","microphoneList","cameraId","microphoneId","params","screen","createLocalStream","dual","setRTCJoined","unpublishLocalStream","destroyClient","screenAudio","undefined","errors","leaveChannel","logFilter","AgoraRTM","LOG_FILTER_DEBUG","AgoraRTMClient","_currentChannel","_currentChannelName","_channels","_channelAttrsKey","_logged","Object","keys","appID","rtmClient","createInstance","login","newState","peerId","logout","_channel","createChannel","memberId","attributes","destroyChannel","deleteChannelAttributesByKey","cmd","enableHistoricalMessaging","body","sendMessage","resolveMessage","sendMessageToPeer","result","hasPeerReceived","msgData","recordId","notifyMessage","replay","attrs","channelAttributes","addOrUpdateChannelAttributes","enableNotificationToChannelMembers","deleteChannelAttributesByKeys","getChannelAttributes","ids","getChannelMemberCount","accounts","results","teacherCount","totalCount","studentTotalCount","queryPeersOnlineStatus","teacher","find","studentsTotalCount","channelName","teacherObj","jsonParse","student","ossConfig","ossClient","OSS","acceptCoVideo","rejectCoVideo","cancelCoVideo","applyCoVideo","muteVideo","muteAudio","unmuteAudio","unmuteVideo","resolveFileInfo","file","fileName","encodeURI","fileType","substring","lastIndexOf","level","NetworkQualityEvaluation","Math","max","downlinkNetworkQuality","uplinkNetworkQuality","StreamType","AgoraRtcEngine","rtcEngine","setChannelProfile","enableVideo","enableAudio","enableWebSdkInteroperability","setVideoProfile","once","events","logPath","videoSourceLogPath","videoSourceAddonLogPath","setLogFile","doGzip","getIntlError","errorCode","res","locale","_getIntlError","Fetch","input","a","onResponse","response","ok","Error","statusText","onError","rescueError","fetch","AgoraFetch","retryCount","code","isErrorCode","showToast","msg","historyStore","history","PREFIX","AgoraFetchJson","url","method","full_url","opts","headers","resp","responseData","api_error","AgoraEduApi","roomId","_userToken","fileExt","_roomId","bucketName","callbackBody","callbackContentType","accessKeyId","accessKeySecret","securityToken","ossKey","ext","fetchStsToken","ossParams","stsToken","bucket","secure","endpoint","put","callback","contentType","uploadToOss","userToken","rtcToken","rtmToken","screenToken","room","user","userId","userAttrs","boardData","boardId","boardToken","getWhiteboardBy","users","coVideoUsers","getRoomInfoBy","rawUsers","rawCourse","me","usersMap","acc","set","userName","chat","enableChat","grantBoard","screenId","Map","courseState","muteChat","muteAllChat","isRecording","lockBoard","teacherId","memberCount","onlineUsers","roomName","roomType","recordingTime","Boolean","entry","teacherState","userList","course","rid","userUuid","uuid","coVideoUids","teacherRecord","recordStatus","startTime","endTime","status","userIds","eduApi","fetchI18n","_state","freeze","rtmLock","recordLock","roomToken","coVideo","applyUser","rtm","Set","localStream","localSharedStream","remoteStreams","mediaDevice","speakerVolume","camera","speaker","microphone","List","windowId","rtcClient","fetchRoomBy","add","delete","remoteStream","sendChannelMessage","teacherSendReject","studentSendApply","teacherSendAccept","teacherSendStop","applyUserId","updateApplyUser","showNotice","updateLocalMe","broad","updateUserBy","Login","roomUuid","newMe","prop","hasOwnProperty","newCourse","getCourseState","updateCourse","getRoomState","updateRoomState","usersJson","toJSON","id","meParams","compositeMe","newMeAttrs","userAttrsParams","updateRoomUser","userParams","prevUser","newUserAttrs","userKeys","stateValue","stateKey","unlockBoard","startCourse","endCourse","unmuteAllChat","courseParams","resolveCourseAttrsToOperate","compositeCourse","exitRoom","exit","webClient","refreshToken","startScreenShare","stopWebScreenShare","finally","stopScreenShare","removeLocalSharedStream","setNativeWindowInfo","getScreenShareWindows","startWebScreenShare","nativeClient","lockRecording","startRecording","unlockRecording","stopRecording","roomInfo","meState","GithubIcon","href","rel","genUUID","localStorage","uuidv4","db","Dexie","version","stores","logs","flat","UAParser","getResult","arr","elem","Log","thread","LogWorker","debugLog","e","indexOf","context","arguments","postMessage","apply","proxy","uploadZipLogFile","uploadLog","toArray","logsStr","reverse","Array","isArray","File","Date","now","uploadLogFile","exists","open","originConsole","formControl","minWidth","maxWidth","yourName","document","useHistory","useState","setLock","ref","useRef","current","session","setSessionInfo","setRequired","Tooltip","placement","doUpload","resultCode","showDialog","setLanguage","FormControl","showLoading","LoginToRoom","stopLoading","marginTop","sliderClass","marginLeft","ContinuousSlider","setValue","Slider","event","newValue","aria-labelledby","sliderRailClass","sliderMarkClass","CustomSlider","VoiceSlider","errorStore","BehaviorSubject","getValue","plugins","createPlugins","videoPlugin","audioPlugin","setPluginContext","identity","whiteboard","scenes","currentScenePath","currentHeight","currentWidth","dirs","zoomRadio","scale","recording","totalPage","currentPage","WhiteWebSdk","deviceType","DeviceType","Surface","loggerOptions","disableReportLog","reportLevelMask","printLevelMask","operator","scenePath","sceneMap","roomState","sceneState","ppt","index","entrieScenes","entireScenes","dirPath","sceneInfo","getNameByScenePath","rootPath","_dirPath","exec","RegExp","$1","pathName","_dirs","findIndex","userPayload","disableDeviceInputs","disableOperations","isWritable","roomParams","disableBezier","joinRoom","onPhaseChanged","phase","RoomPhase","Connected","updateLoading","onRoomStateChanged","zoomScale","updateScale","globalState","onDisconnectWithError","onKickedWithReason","onKeyDown","onKeyUp","onHandToolActive","onPPTLoadProgress","progress","disconnect","cleanRoom","lockBoardStatus","useObserver","store","setState","netlessStore","RootContext","useStore","useGlobalState","useRoomState","RootProvider","whiteboardState","errorState","historyState","setHistory","resolvePeerMessage","handlePeerMessage","setMessageCount","chatMessage","ts","updateChannelMessage","roomMemberChanged","total","updateRoomMember","roomInfoChanged","updateRoomInfo","coVideoUsersChanged","updateCoVideoUsers","replayMessage","link","screenShare","updateScreenShare","preview","domId","local","handleClose","autoplay","loadVideo","loadAudio","lockPlay","resume","setResume","needResume","useMemo","play","fit","isPaused","setDevices","speakerList","setCamera","setMicrophone","setSpeaker","setSpeakerVolume","setVolume","mounted","addEventListener","getAudioRecordingDevices","microphoneIds","getAudioPlaybackDevices","speakerIds","getVideoDevices","cameraIds","microphones","devicename","deviceid","speakers","cameras","setStream","createPreviewStream","interval","getAudioLevel","onVolumeChange","speakerNumber","totalVolume","Number","toFixed","setClientRole","enableAudioVolumeIndication","startAudioRecordingDeviceTest","stopAudioPlaybackDeviceTest","PreviewPlayer","useCallback","MicrophoneVolume","mediaInfo","updateDevice","useSettingControl","handleFinish","ClassState","AgoraStream","networkQualityIcon","Nav","delay","network","cpu","time","showSetting","classState","onCardConfirm","style","moment","format","NavContainer","updateTime","timer","setTimer","card","setCard","rtt","updateRtt","quality","updateQuality","cpuUsage","updateCpuUsage","cpuTotalUsage","txquality","rxquality","STARTED","calcDuration","CLOSED","removeDialog","unlock","RoomDialog","onConfirm","onClose","desc","Dialog","disableBackdropClick","aria-describedby","DialogContent","DialogContentText","teacherRejectApply","removeNotice","goBack","teacherAcceptApply","WindowItem","ownerName","image","backgroundImage","WindowList","selectWindow","confirm","cancel","onDoubleClick","NativeSharedWindowContainer","setWindowId","electronStream","addLocalSharedStream","releaseScreenShare","RoomPage","fetchCurrentRoom","classroom","isSmallClass","removeUploadNotice","exitAll","canPublish","publishLock","rtcJoined","all","streamSpec","publishLocalStream","_stream","getId","addLocalStream","addRTCUser","addRemoteStream","removeRemoteStream","removePeerUser","attr","info","joinChannel","eventName","removeLocalStream","spacing","container","left","alignItems","background","opacity","zIndex","Loading","CircularProgress","LoadContainer","ConsecutiveSnackbars","duration","queueRef","setMessages","timerRef","shift","idx","Progress","beginTimestamp","mediaURL","currentTime","boardPlayPhase","PlayerPhase","Pause","isFirstScreenReady","isPlayerSeeking","isChatOpen","isVisible","replayFail","courseRecordData","player","videoPlayer","timelineScheduler","replayStore","scheduleTime","getCourseRecordBy","seekToScheduleTime","Playing","Ended","scheduler","WhiteboardAPI","replayRoom","retrying","protocol","host","RTMRestful","customerId","appSecret","source","destination","offset","limit","plainCredentials","btoa","Authorization","basicAuthorization","start_time","end_time","order","responseA","jsonA","respB","jsonB","fetchChannelMessageCount","fetchChannelMessages","RtmPlayerState","Message","nickname","sender","to","LogLevel","RTMReplayer","currentSeekTime","senderId","pending","useAsync","rtmRecord","utc","getAllChannelMessages","load","serializeMessage","rtmMessages","replayMessages","scrollTop","scrollHeight","MessageList","ReplayContext","ReplayContainer","replayState","useParams","searchParams","URLSearchParams","search","useInterval","whiteboardUUID","mediaUrl","NetlessAgoraReplay","handlePlayerClick","WaitingFirstFrame","pause","onWindowResize","refreshViewSize","handleSpaceKey","handleOperationClick","abs","onCatchErrorWhenRender","onCatchErrorWhenAppendFrame","updateWhiteboardPhase","onLoadFirstFrame","onSliceChanged","onPlayerStateChanged","onStoppedWithError","setReplayFail","onScheduleTimeChanged","setCurrentTime","setPlayer","bindHtmlElement","getElementById","totalTime","PlayerCover","Buffering","onMouseDown","onMouseUp","updateProgress","min","objectFit","PhaseState","rawLog","PlayerLogger","prefix","AgoraPlayer","cover","phaseState","$el","mediaType","createElement","Videojs","preload","controls","loop","html5","hls","overrideNative","split","pop","$dom","appendChild","paused","seconds","ended","dispose","readyState","TimelineScheduler","fps","rafId","_lastTimeoutId","_stopTimer","_visibilityHandler","currentDuration","hidden","_time","frame","durationBase","raf","nextTick","timestamp","v","elapsedTime","ceil","currentFrame","floor","isTimer","TimelineReplay","startTimestamp","endTimestamp","updatePlayState","addVideoPlayer","timeline","seekTo","addTimeline","whiteboardPlayStatus","addWhiteboardPlayer","initPlayer","playerElementRef","whiteboardElementRef","initVideo","start","playState","useStream","teacherInfo","teacherUid","remoteTeacherStream","students","studentIds","studentStreams","myAttr","_tmpStream","studentId","studentAttr","sharedStream","currentHost","coVideoUid","userAttr","peerUid","peerUserAttr","onPlayerClick","targetUser","targetUid","mute","unmute","showScrollbar","$marquee","querySelector","clientWidth","marqueeLength","querySelectorAll","videoMarqueeMark","marqueeEl","scrollLeft","childNodes","offsetWidth","scrollBar","setScrollBar","useLayoutEffect","Whiteboard","domRef","moveCamera","centerX","centerY","ControlItem","Control","sharing","isHost","handleRecording","recordingErr","marginRight","ToolItem","Tools","handleToolClick","currentTool","PPTType","PPTProgressPhase","UploadManager","ossUploadCallback","getFile","generateObjectUrl","addFile","rawFile","onProgress","multipartUpload","p","Uploading","pptConverter","folder","pptURL","PptKind","Static","convert","onProgressUpdated","Converting","documentFile","pptType","static","MD5","putScenes","setScenePath","dynamic","imageInnerSize","windowSize","innerWidth","innerHeight","widthHeightProportion","imageFiles","x","y","newAcceptedFilePromises","fetchWhiteImageFileWith","newAcceptedFiles","uploadImageFilesArray","Image","reader","FileReader","readAsDataURL","onload","getImageSize","imageFile","coordinateX","coordinateY","tasks","convertToPointInWorld","insertImage","task","handleUploadTask","setMemberState","currentApplianceName","fileUrl","completeImageUpload","UploadBtn","onFailure","onSuccess","didUpload","ImageInput","DynamicInput","StaticInput","AudioVideoInput","uploadDynamic","currentTarget","files","uploadManager","convertFile","Dynamic","uploadStatic","uploadImage","uploadFileArray","$whiteboard","clientHeight","uploadImageFiles","uploadAudioVideo","isHttps","toLowerCase","insertPlugin","originX","originY","pluginVideoUrl","pluginAudioUrl","htmlFor","accept","ResourceItem","setName","useDebounce","blob","Blob","globalStateLength","sceneMapLength","size","setGlobalState","isMainScene","activeClass","removeScenes","newSceneMap","omit","coverType","defaultValue","ResourcesMenu","activeScenePath","ScaleController","tempRuleIndex","syncRuleIndexTimer","clearTimeout","syncDuration","readRuleIndexByScale","delaySyncRuleIndex","zoomChange","deltaIndex","dividingRule","targetScale","moveRuleIndex","onClickBoardLock","i","prePoint","point","nextPoint","begin","MIN_SAFE_INTEGER","end","MAX_SAFE_INTEGER","Component","UploadNotice","UploadNoticeView","rtmState","pageTool","setPageTool","studentIsHost","addNewPage","newIndex","currentPath","setSceneIndex","changePage","force","_idx","pptNextStep","pptPreviousStep","showControl","toolItems","drawable","tool","setTool","selector","updateSelector","uploadPhase","updateUploadPhase","convertPhase","updateConvertPhase","UploadPanel","percent","showUploadNotice","setViewMode","ViewMode","Broadcaster","Freedom","handToolActive","disableCameraTransform","UploadProgressView","strokeColor","memberState","r","g","b","showTools","onChangeComplete","rgb","regexPattern","truncateBlank","ChatPanel","handleChange","muteControl","disableChat","handleMute","useChatControl","disabled","placeholder","disableUnderline","onKeyPress","CustomIcon","StudentList","list","useChatText","my","slice","Roomboard","setVisible","setActive","SmallClass","currentActive","ChatBoard","roomCount","OneToOne","BigClass","closeLock","studentStopCoVideo","quitClient","teacherCancelStudent","BasicLayout","PageNotFound","ReplayPageWrapper","Copyright","align","Link","getFullYear","paper","flexDirection","avatar","backgroundColor","palette","secondary","main","form","submit","ConfigPage","Container","component","CssBaseline","Avatar","noValidate","TextField","fullWidth","autoFocus","Grid","xs","Box","mt","exact","hostname","userAgentInfo","REACT_APP_AGORA_GTM_ID","TagManager","gtmId","ReactDOM","render","serviceWorker","ready","registration","unregister","device","el","Eruda"],"mappings":"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","file":"static/js/main.1ff319b0.chunk.js","sourcesContent":["module.exports = function() {\n  return new Worker(__webpack_public_path__ + \"03d031f7569fdce94d7a.worker.js\");\n};","import React from 'react';\nimport {HashRouter, Route, Router} from 'react-router-dom';\n\nexport const RouterContext = React.createContext({} as Router);\n\nfunction CustomBrowserRouter ({children}: any) {\n  return (\n    <HashRouter>\n      <Route>\n        {(routeProps: any) => (\n          <RouterContext.Provider value={routeProps}>\n            {children}\n          </RouterContext.Provider>\n        )}\n      </Route>\n    </HashRouter>\n  )\n}\n\nexport default CustomBrowserRouter;","import React from 'react';\nimport { ThemeProvider } from '@material-ui/styles';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\nconst THEME = createMuiTheme({\n  typography: {\n   \"fontFamily\": '-apple-system, BlinkMacSystemFont, \\\\\"Segoe UI\\\\\", \\\\\"Roboto\\\\\", \\\\\"Oxygen\\\\\", \\\\\"Ubuntu\\\\\", \\\\\"Cantarell\\\\\", \\\\\"Fira Sans\\\\\", \\\\\"Droid Sans\\\\\", \\\\\"Helvetica Neue\\\\\", sans-serif',\n   \"fontSize\": 14,\n   \"fontWeightLight\": 300,\n   \"fontWeightRegular\": 400,\n   \"fontWeightMedium\": 500,\n  },\n\n  overrides: {\n    MuiRadio: {\n      root: {\n        padding: '4px'\n      }\n    },\n    MuiSvgIcon: {\n      root: {\n        width: '1rem',\n        height: '1rem',\n      }\n    },\n    MuiFormControl: {\n      root: {\n        margin: '0.3rem 0',\n      }\n    },\n    MuiInput: {\n      underline: {\n        '&:before': {\n          borderBottom: '1px solid #EAEAEA',\n        },\n        '&:hover:not($disabled):not($focused):not($error):before': {\n          borderBottom: `2px solid #EAEAEA`,\n        },\n        '&$focused': {\n          '&:after': {\n            borderBottom: '2px solid #44a2fc',\n          }\n        },\n      }\n    }\n  }\n});\n\nexport default function ({children}: any) {\n  return (\n    <ThemeProvider theme={THEME}>\n      {children}\n    </ThemeProvider>\n  )\n}","import React from 'react';\nimport { Button } from '@material-ui/core';\nexport default function (props: any) {\n  return (\n    <Button variant=\"contained\" className={props.className ? props.className : 'custom-button'} color=\"primary\" onClick={props.onClick}>\n      {props.name}\n    </Button>\n  )\n}","import { isEmpty } from \"lodash\";\n\nexport class CustomStorage {\n\n  private storage: Storage;\n\n  languageKey: string = 'demo_language'\n\n  constructor() {\n    this.storage = window.sessionStorage;\n  }\n\n  read(key: string): any {\n    try {\n      let json = JSON.parse(this.storage.getItem(key) as string);\n      return json\n    } catch(_) {\n      return this.storage.getItem(key);\n    }\n  }\n\n  save(key: string, val: any) {\n    this.storage.setItem(key, JSON.stringify(val));\n  }\n\n  clear(key: string) {\n    this.storage.removeItem(key);\n  }\n\n  setLanguage(lang: string) {\n    this.save(this.languageKey, lang)\n  }\n\n  getLanguage() {\n    const language = this.read(this.languageKey) ? this.read(this.languageKey) : navigator.language;\n    return {language};\n  }\n\n  getRtmMessage (): {count: any, messages: any[]} {\n    const channelMessages = GlobalStorage.read('channelMessages');\n    if (isEmpty(channelMessages)) return {\n      count: 0,\n      messages: []\n    }\n    const messages = channelMessages.filter((it: any) => it.message_type === \"group_message\");\n    const chatMessages = messages.reduce((collect: any[], value: any) => {\n      const payload = value.payload;\n      const json = JSON.parse(payload);\n      if (json.content) {\n        return collect.concat({\n          account: json.account,\n          content: json.content,\n          ms: value.ms,\n          src: value.src\n        });\n      }\n      return collect;\n    }, []);\n    return {\n      messages: chatMessages,\n      count: chatMessages.length\n    }\n  }\n}\n\nconst GlobalStorage = new CustomStorage();\n// @ts-ignore\nwindow.GlobalStorage = GlobalStorage;\nexport default GlobalStorage;","import {Subject} from 'rxjs';\nimport GlobalStorage from '../utils/custom-storage';\n\nexport const roomTypes = [\n  {value: 0, text: 'home.1v1', path: 'one-to-one'},\n  {value: 1, text: 'home.mini_class', path: 'small-class'},\n  {value: 2, text: 'home.large_class', path: 'big-class'},\n]\n\nexport type GlobalState = {\n  loading: boolean\n  lock: boolean\n  toast: {\n    type: string\n    message: string\n  }\n  dialog: {\n    type: string\n    message: string\n    confirmText?: string\n    cancelText?: string\n  }\n  uploadNotice: {\n    type: string\n    title: string\n  },\n  notice: {\n    text: string\n    reason: string\n  },\n  nativeWindowInfo: {\n    visible: boolean\n    items: any[]\n  },\n  active: string,\n  language: string,\n  newMessageCount: number,\n}\n\nexport class Root {\n  private subject: Subject<GlobalState> | null;\n  public state: GlobalState;\n  public readonly defaultState: GlobalState = {\n    loading: false,\n    toast: {\n      type: '',\n      message: '',\n    },\n    dialog: {\n      type: '',\n      message: '',\n      confirmText: 'confirm',\n      cancelText: 'cancel'\n    },\n    uploadNotice: {\n      type: '',\n      title: '',\n    },\n    notice: {\n      reason: '',\n      text: '',\n    },\n    nativeWindowInfo: {\n      visible: false,\n      items: []\n    },\n    lock: false,\n    active: 'chatroom',\n    language: navigator.language,\n    newMessageCount: 0,\n    ...GlobalStorage.getLanguage(),\n  }\n\n  constructor() {\n    this.subject = null;\n    this.state = this.defaultState;\n  }\n\n  initialize() {\n    this.subject = new Subject<GlobalState>();\n    this.state = {\n      ...this.defaultState,\n    }\n    this.subject.next(this.state);\n  }\n\n  subscribe(updateState: any) {\n    this.initialize();\n    this.subject && this.subject.subscribe(updateState);\n  }\n\n  unsubscribe() {\n    this.subject && this.subject.unsubscribe();\n    this.subject = null;\n  }\n\n  commit (state: GlobalState) {\n    this.subject && this.subject.next(state);\n  }\n\n  updateState(rootState: GlobalState) {\n    this.state = {\n      ...this.state,\n      ...rootState,\n    }\n    this.commit(this.state);\n  }\n\n  showNotice({\n    reason,\n    text,\n  }:{\n    reason: string,\n    text: string\n  }) {\n    this.state = {\n      ...this.state,\n      notice: {\n        text,\n        reason\n      }\n    }\n    this.commit(this.state);\n  }\n\n  removeNotice() {\n    this.state = {\n      ...this.state,\n      notice: {\n        text: '',\n        reason: ''\n      }\n    }\n    this.commit(this.state);\n  }\n\n  setNativeWindowInfo({visible, items}: {visible: boolean, items: any[]}) {\n    this.state = {\n      ...this.state,\n      nativeWindowInfo: {\n        visible,\n        items\n      }\n    }\n    this.commit(this.state);\n  }\n\n  showUploadNotice({type, title}: {type: string, title: string}) {\n    this.state = {\n      ...this.state,\n      uploadNotice: {\n        type,\n        title\n      }\n    }\n    this.commit(this.state);\n  }\n\n  removeUploadNotice() {\n    this.state = {\n      ...this.state,\n      uploadNotice: {\n        type: '',\n        title: ''\n      }\n    }\n    this.commit(this.state);\n  }\n\n  showToast({type, message}: {type: string, message: string}) {\n    this.state = {\n      ...this.state,\n      toast: {\n        type, message\n      },\n    }\n    this.commit(this.state);\n  }\n\n  showDialog({type, message}: {type: string, message: string}) {\n    this.state = {\n      ...this.state,\n      dialog: {\n        type,\n        message\n      },\n    }\n    this.commit(this.state);\n  }\n\n  removeDialog() {\n    this.state = {\n      ...this.state,\n      dialog: {\n        type: '',\n        message: ''\n      },\n    }\n    this.commit(this.state);\n  }\n\n  showLoading () {\n    this.state = {\n      ...this.state,\n      loading: true\n    }\n    this.commit(this.state);\n  }\n\n  stopLoading () {\n    this.state = {\n      ...this.state,\n      loading: false\n    }\n    this.commit(this.state);\n  }\n\n  getLanguage(): string {\n    return GlobalStorage.read('demo_language')\n  }\n\n  setLanguage(language: string) {\n    this.state = {\n      ...this.state,\n      language,\n    }\n    this.commit(this.state);\n    GlobalStorage.save('demo_language', this.state.language);\n    window.location.reload();\n  }\n\n  setActive(active: string) {\n    if (active !== 'chatroom') {\n      this.state = {\n        ...this.state,\n        active,\n      }\n    } else {\n      this.state = {\n        ...this.state,\n        active,\n        newMessageCount: 0,\n      }\n    }\n    this.commit(this.state);\n  }\n\n  setMessageCount(len: number) {\n    this.state = {\n      ...this.state,\n      newMessageCount: len\n    }\n    this.commit(this.state);\n  }\n\n  lock() {\n    this.state = {\n      ...this.state,\n      lock: true\n    }\n    this.commit(this.state)\n  }\n\n  unlock() {\n    this.state = {\n      ...this.state,\n      lock: false\n    }\n    this.commit(this.state)\n  }\n}\n\nexport const globalStore = new Root();\n\n// @ts-ignore\nwindow.globalStore = globalStore;","const BUILD_VERSION = process.env.REACT_APP_BUILD_VERSION as string;\nconst build_version = BUILD_VERSION ? BUILD_VERSION : '0.0.1';\n\nconst zhCN: any = {\n  \"electron\": {\n    \"start_screen_share_failed\": \"native screen sharing failed\"\n  },\n  \"icon\": {\n    \"setting\": \"设置\",\n    \"upload-log\": \"上传日志\",\n    \"exit-room\": \"退出教室\",\n    \"lang-select\": \"语言切换\",\n  },\n  'doc_center': '文档中心',\n  'upload_picture': '上传图片',\n  'convert_webpage': '转换动态PPT',\n  'convert_to_picture': 'PPT转图片',\n  'upload_audio_video': '上传音视频',\n  'return': {\n    'home': '返回主页',\n  },\n  'control_items': {\n    \"first_page\": \"第一页\",\n    \"prev_page\": \"上一页\",\n    \"next_page\": \"下一页\",\n    \"last_page\": \"最后一页\",\n    \"stop_recording\": \"停止云端录制\",\n    \"recording\": \"开始云端录制\",\n    \"quit_screen_sharing\": \"停止屏幕分享\",\n    \"screen_sharing\": \"开始屏幕分享\",\n    \"delete_current\": \"删除当前\",\n    \"delete_all\": \"删除全部\",\n  },\n  'zoom_control': {\n    'folder': '文档中心',\n    'lock_board': '设置白板跟随',\n    'unlock_board': '取消白板跟随'\n  },\n  'tool': {\n    'selector': '鼠标选择器',\n    'pencil': '画笔',\n    'rectangle': '矩形',\n    'ellipse': '椭圆',\n    'eraser': '橡皮擦',\n    'text': '文字',\n    'color_picker': '调色板',\n    'add': '新增一页',\n    'upload': '上传',\n    'hand_tool': '手抓工具'\n  },\n  'error': {\n    'not_found': '页面找不到',\n    'components': {\n      'paramsEmpty': '参数：{reason}不能为空',\n    }\n  },\n  'whiteboard': {\n    'loading': '加载中...',\n    'global_state_limit': '请不要给白板设置过大的globalState size',\n    'locked_board': '老师正在控制白板，请勿书写',\n    'unlocked_board': '白板已解除锁定。',\n  },\n  'toast': {\n    'upload_log_failure': '上传日志失败，错误类型：{reason}, 详情参考开发者工具',\n    'show_log_id': `请提供你的日志ID: {no}`,\n    'api_login_failured': '房间加入失败, 原因: {reason}',\n    'confirm': '确定',\n    'cancel': '取消',\n    'quit_room': '确定退出课程吗？',\n    'kick': '其他端登录，被踢出房间',\n    'login_failure': '登录房间失败',\n    'whiteboard_lock': '设置白板跟随',\n    'whiteboard_unlock': '取消白板跟随',\n    'canceled_screen_share': '已取消屏幕共享',\n    'screen_sharing_failed': '屏幕分享失败, 原因：{reason}',\n    'recording_failed': '开启云录制失败, 原因：{reason}',\n    'start_recording': '开始云录制',\n    'stop_recording': '结束云录制',\n    'recording_too_short': '录制太短，至少15秒',\n    'rtm_login_failed': '房间登录失败, 请检查网络设置',\n    'rtm_login_failed_reason': '房间登录失败, 原因： {reason}',\n    'replay_failed': '回放失败，请刷新页面重试',\n    'teacher_exists': '该房间老师已存在，请等待30秒或重新创建教室',\n    'student_over_limit': '超出学生最大人数，请等待30秒或重新创建教室',\n    'teacher_and_student_over_limit': '超出学生和老师的最大人数',\n    'teacher_accept_whiteboard': '老师已授权了你白板的权限',\n    'teacher_cancel_whiteboard': '老师已收回了你白板的权限',\n    'teacher_accept_co_video': '老师已允许连麦',\n    'teacher_reject_co_video': '老师已拒绝连麦',\n    'teacher_cancel_co_video': '老师已取消连麦',\n    'student_cancel_co_video': '学生已取消连麦',\n    'student_send_co_video_apply': '\"{reason}\" 学生发起了连麦申请',\n    'student_peer_leave': '\"{reason}\" 离开了',\n    'stop_co_video': '教师停止了\"{reason}\"的连麦',\n    'reject_co_video': '您取消了学生的连麦申请',\n    'close_co_video': '您关闭了学生的连麦',\n    'close_youself_co_video': '你关闭了自己的连麦',\n    'accept_co_video': '您同意了连麦',\n  },\n  'notice': {\n    'student_interactive_apply': `\"{reason}\"想和你连麦`\n  },\n  'chat': {\n    'placeholder': '说点什么',\n    'banned': '禁言中',\n    'send': '发送'\n  },\n  'device': {\n    'camera': '摄像头',\n    'microphone': '麦克风',\n    'speaker': '扬声器',\n    'finish': '完成',\n  },\n  'nav': {\n    'delay': '延迟: ',\n    'network': '网络: ',\n    'cpu': 'CPU: ',\n    'class_end': '课程结束',\n    'class_start': '课程开始'\n  },\n  'home': {\n    'entry-home': '进入教室',\n    'teacher': '老师',\n    'student': '学生',\n    'cover_class': 'cover-cn',\n    'room_name': '房间名',\n    'nickname': '昵称',\n    'room_type': '房间类型',\n    'room_join': '加入房间',\n    'short_title': {\n      'title': '声网云课堂',\n      'subtitle': '由声网提供',\n    },\n    'name_too_long': '名字过长，不得超过20个字符',\n    '1v1': '一对一',\n    'mini_class': '小班课',\n    'large_class': '大班课',\n    'missing_room_name': '缺少房间名',\n    'missing_your_name': '缺少昵称',\n    'missing_password': '缺少房间密码',\n    'missing_role': '\b缺少角色',\n    'account': '姓名',\n    'password': '密码',\n  },\n  'room': {\n    'chat_room': '消息列表',\n    'student_list': '学生列表',\n    'uploading': '上传中...',\n    'converting': '转换中...',\n    'upload_success': '上传成功',\n    'upload_failure': '上传失败，请检查网络',\n    'convert_success': '转换成功',\n    'convert_failure': '转换失败，请检查网络',\n  },\n  'replay': {\n    'loading': '加载中...',\n    'recording': '在录制中',\n    'finished': '录制完成',\n    'finished_recording_to_be_download': '服务端准备下载中',\n    'finished_download_to_be_convert': '服务端准备转换中',\n    'finished_convert_to_be_upload': '服务端准备保存中',\n  },\n  'course_recording': '录制回放',\n  'build_version': `构建版本: ${build_version}`,\n}\n\nexport default zhCN;","const BUILD_VERSION = process.env.REACT_APP_BUILD_VERSION as string;\nconst build_version = BUILD_VERSION ? BUILD_VERSION : '0.0.1';\n\nconst en = {\n  \"electron\": {\n    \"start_screen_share_failed\": \"native screen sharing failed\"\n  },\n  \"icon\": {\n    \"setting\": \"Setting\",\n    \"upload-log\": \"Upload Log\",\n    \"exit-room\": \"Exit Room\",\n    \"lang-select\": \"Switch Language\",\n  },\n  'doc_center': 'Course Document Center',\n  'upload_picture': 'Upload Picture',\n  'convert_webpage': 'Dynamic PPT',\n  'convert_to_picture': 'Static PPT',\n  'upload_audio_video': 'Upload Audio/Video',\n  'return': {\n    'home': 'Back To Home',\n  },\n  'control_items': {\n    \"first_page\": \"First Page\",\n    \"prev_page\": \"Prev Page\",\n    \"next_page\": \"Next Page\",\n    \"last_page\": \"Last Page\",\n    \"stop_recording\": \"Stop Cloud Recording\",\n    \"recording\": \"Start Cloud Recording\",\n    \"quit_screen_sharing\": \"Stop Screen Sharing\",\n    \"screen_sharing\": \"Start Screen Sharing\",\n    \"delete_current\": \"Remove Current\",\n    \"delete_all\": \"Remove All\",\n  },\n  'zoom_control': {\n    'folder': 'Document Center',\n    'lock_board': 'Set Whiteboard Follow',\n    'unlock_board': 'Reset Whiteboard Follow'\n  },\n  'tool': {\n    'selector': 'mouse selector',\n    'pencil': 'penceil',\n    'rectangle': 'rectangle',\n    'ellipse': 'ellipse',\n    'eraser': 'eraser',\n    'text': 'text',\n    'color_picker': 'color picker',\n    'add': 'add new page',\n    'upload': 'upload ',\n    'hand_tool': 'hand selector'\n  },\n  'error': {\n    'not_found': 'Page Not Found',\n    'components': {\n      'paramsEmpty': 'params：{reason} can`t be empty',\n    }\n  },\n  'whiteboard': {\n    'loading': 'Loading...',\n    'global_state_limit': 'globalState size limit size probably overflow',\n    'locked_board': 'The teacher is moving the whiteboard. Please do not draw on it.',\n    'unlocked_board': 'The whiteboard already unlocked',\n  },\n  'toast': {\n    'upload_log_failure': 'Upload Log Failure，ErrorName: {reason}，see more details in devtool',\n    'show_log_id': `Report your log ID: {reason}`,\n    'api_login_failured': 'Join Failured, Reason: {reason}',\n    'confirm': 'Confirm',\n    'cancel': 'Cancel',\n    'quit_room': 'Are you sure to exit the classroom?',\n    'kick': 'kicked',\n    'login_failure': 'login failure',\n    'whiteboard_lock': 'Whiteboard follow',\n    'whiteboard_unlock': 'Whiteboard nofollow',\n    'canceled_screen_share': 'Canceled screen sharing',\n    'screen_sharing_failed': 'Screen sharing failed, reason: {reason}',\n    'recording_failed': 'Start cloud recording failed, reason: {reason}',\n    'start_recording': 'Start cloud recording success',\n    'stop_recording': 'Stop cloud recording success',\n    'recording_too_short': 'Recording too short, at least 15 seconds',\n    'rtm_login_failed': 'login failure, please check your network',\n    'rtm_login_failed_reason': 'login failure, reason: {reason}',\n    'replay_failed': 'Replay Failed please refresh browser',\n    'teacher_exists': 'Teacher already exists, Please waiting for 30s or reopen new class',\n    'student_over_limit': 'Student have reached upper limit, , Please waiting for 30s or rejoin new class',\n    'teacher_and_student_over_limit': 'The number of students and teacher have reached upper limit',\n    'teacher_accept_whiteboard': 'Teacher already grant your whiteboard',\n    'teacher_cancel_whiteboard': 'Teacher already cancel your whiteboard',\n    'teacher_accept_co_video': 'Teacher already accept co-video',\n    'teacher_reject_co_video': 'Teacher already rejected co-video',\n    'teacher_cancel_co_video': 'Teacher already canceled co-video',\n    'student_cancel_co_video': 'Student canceled co-video',\n    'student_peer_leave': '\"{reason}\" Left',\n    'student_send_co_video_apply': '\"{reason}\" send the co-video request',\n    'stop_co_video': 'Stop \"{reason}\" co-video',\n    'reject_co_video': 'Reject co-video',\n    'close_co_video': 'Close co-video',\n    'close_youself_co_video': 'Stop co-video',\n    'accept_co_video': 'Accept co-video',\n  },\n  'notice': {\n    'student_interactive_apply': `\"{reason}\" wants to interact with you`\n  },\n  'chat': {\n    'placeholder': 'Input Message',\n    'banned': 'Banned',\n    'send': 'send'\n  },\n  'device': {\n    'camera': 'Camera',\n    'microphone': 'Microphone',\n    'speaker': 'Speaker',\n    'finish': 'Finish',\n  },\n  'nav': {\n    'delay': 'Delay: ',\n    'network': 'Network: ',\n    'cpu': 'CPU: ',\n    'class_end': 'Class end',\n    'class_start': 'Class start'\n  },\n  'home': {\n    'entry-home': 'Join Classroom',\n    'teacher': 'teacher',\n    'student': 'student',\n    'cover_class': 'cover-en',\n    'room_name': 'Room Name',\n    'nickname': 'Your Name',\n    'room_type': 'Room Type',\n    'room_join': 'Join',\n    'short_title': {\n      'title': 'Agora Cloud Class',\n      'subtitle': 'Powered by agora.io, a leading online learning engagement platform',\n    },\n    'name_too_long': 'name too long, should <= 20 characters',\n    '1v1': 'One to One Classroom',\n    'mini_class': 'Small Classroom',\n    'large_class': 'Lecture Hall',\n    'missing_room_name': 'missing room name',\n    'missing_your_name': 'missing your name',\n    'missing_password': 'missing password',\n    'missing_role': 'missing role',\n    'account': 'Name',\n    'password': 'Password',\n  },\n  'room': {\n    'chat_room': 'Chat Room',\n    'student_list': 'Student List',\n    'uploading': 'Uploading...',\n    'converting': 'Converting...',\n    'upload_success': 'upload success',\n    'upload_failure': 'upload failure, check the network',\n    'convert_success': 'convert success',\n    'convert_failure': 'convert failure, check the network',\n  },\n  'replay': {\n    'loading': 'loading...',\n    'recording': 'In Recording',\n    'finished': 'Finished',\n    'finished_recording_to_be_download': 'Server prepare downloading',\n    'finished_download_to_be_convert': 'Server prepare converting',\n    'finished_convert_to_be_upload': 'Server prepare saving',\n  },\n  'course_recording': 'course recording',\n  'build_version': `build version: ${build_version}`,\n}\n\nexport default en;","import { globalStore } from './stores/global';\nimport {get, isEmpty} from 'lodash';\nimport zhCN from './i18n/zh';\nimport en from './i18n/en';\n\nexport const BUILD_VERSION = process.env.REACT_APP_BUILD_VERSION as string;\n\nexport const t = (name: string, options?: any): string => {\n  const lang = globalStore.state.language.match(/zh/) ? zhCN : en;\n  let content = get(lang, name, null);\n  if (!content) {\n    console.error(`${lang}: ${name} has no match`);\n    return `${lang}.${name}`;\n  }\n\n  if (!isEmpty(options)) {\n    if (options.reason && content.match(/\\{.+\\}/)) {\n      content = content.replace(/\\{.+\\}/, options.reason);\n    }\n  }\n\n  return content;\n}","import React from 'react';\nimport { Theme, RadioGroup, Radio, FormControlLabel, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport './role-radio.scss';\nimport { t } from '../i18n';\n\nconst useStyles = makeStyles ((theme: Theme) => ({\n  radioGroup: {\n    display: 'block',\n    clear: 'both',\n    justifyContent: 'space-between'\n  },\n  required: {\n    fontSize: '12px',\n    color: '#ff0000',\n    lineHeight: '17px',\n    position: 'absolute',\n    top: '23px',\n  }\n}));\n\nexport default function (props: any) {\n  const classes = useStyles();\n  return (\n    <RadioGroup className={classes.radioGroup} row value={props.role} onChange={props.onChange}>\n      <FormControlLabel\n        className={\"custom-radio align-left\"}\n        value=\"teacher\"\n        control={<Radio className={\"custom-radio\"} color=\"primary\" />}\n        label={t(\"home.teacher\")}\n        labelPlacement=\"end\"\n      />\n      <FormControlLabel\n        className={\"custom-radio align-right\"}\n        value=\"student\"\n        control={<Radio className={\"custom-radio\"} color=\"primary\" />}\n        label={t(\"home.student\")}\n        labelPlacement=\"end\"\n      />\n      {props.requiredText ? <Typography className={classes.required}>{props.requiredText}</Typography> : null}\n    </RadioGroup>\n  )\n}","import React from 'react';\nexport default function ({data, icon, disable, className, onClick, active}: any) {\n  let iconClass = disable ? '' : (icon ? 'icon-btn' : 'icon');\n  iconClass = active ? iconClass + \" active\" : iconClass;\n\n  const dataName = data ? data : ''\n  return (\n    <div className={`${iconClass} ${className}`} onClick={onClick} data-name={dataName}></div>\n  )\n}","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport { Theme, Typography, InputLabel, Input } from '@material-ui/core';\n\nconst useStyles = makeStyles ((theme: Theme) => ({\n  formInput: {\n    '&:after': {\n      borderBottom: '1px solid #44a2fc'\n    }\n  },\n  required: {\n    fontSize: '12px',\n    color: '#ff0000',\n    lineHeight: '17px',\n    position: 'absolute',\n    top: '48px'\n  }\n}));\n\n// const ALPHABETICAL = /^[a-zA-Z0-9]*/\n\nexport default function (props: any) {\n  const classes = useStyles();\n\n  const onChange = (evt: any) => {\n    const val = evt.target.value\n    // const val = evt.target.value.match(ALPHABETICAL)[0];\n    props.onChange(val ? val : '');\n  }\n  return (\n    <>\n      <InputLabel>{props.Label}</InputLabel>\n      <Input className={classes.formInput} value={props.value}\n        onChange={onChange}>\n      </Input>\n      {props.requiredText ? <Typography className={classes.required}>{props.requiredText}</Typography> : null}\n    </>\n  );\n}","import React from 'react';\nimport { Select, InputLabel, MenuItem } from '@material-ui/core';\n// import { t } from '../i18n';\n\nexport interface FormSelectItems {\n  text: string\n}\n\nexport interface FormSelect {\n  items: FormSelectItems[]\n  Label: string\n  value: any\n  onChange: (evt: any) => any\n}\n\nconst FormSelect: React.FC<FormSelect> = ({\n  Label,\n  value,\n  onChange,\n  items\n}) => {\n  return (\n    <>\n      <InputLabel>{Label}</InputLabel>\n      <Select\n        value={value}\n        onChange={onChange}\n      >\n        {items.map((item: any, key: number) => \n          <MenuItem key={key} value={key}>{item.text}</MenuItem>\n        )}\n      </Select>\n    </>\n  );\n}\n\nexport default React.memo(FormSelect);","import React from 'react';\nimport { Select, MenuItem } from '@material-ui/core';\n\nconst LangSelect: React.FC<any> = ({\n  value,\n  onChange,\n  items,\n}) => {\n  return (\n    <Select\n      value={value}\n      onChange={onChange}\n    >\n      {items.map((item: any, key: number) => \n        <MenuItem key={key} value={key}>{item.text}</MenuItem>\n      )}\n    </Select>\n  );\n}\n\nexport default React.memo(LangSelect);","console.log(`CURRENT RUNTIME: ${process.env.REACT_APP_RUNTIME_PLATFORM}`);\n\nexport const isElectron = process.env.REACT_APP_RUNTIME_PLATFORM === 'electron'\n\nexport const platform = process.env.REACT_APP_RUNTIME_PLATFORM as string;","import React, { useEffect } from 'react';\nimport Icon from '../components/icon';\nimport _ from 'lodash';\nimport { useLocation } from 'react-router';\n\nexport interface IPlatformContext {\n  platform: string\n  NavBtn: React.FC<any>\n  HomeBtn: React.FC<any>\n  SettingBtn: React.FC<any>\n}\n\nexport interface IWindow {\n  ownerName: string\n  name: string\n  windowId: any\n  image: string\n}\n\nconst PlatformContext: React.Context<IPlatformContext> = React.createContext({} as IPlatformContext);\n\nexport const usePlatform = () => React.useContext(PlatformContext);\n\nexport const PlatformContainer: React.FC<React.ComponentProps<any>> = ({ children }: React.ComponentProps<any>) => {\n\n  const platform = _.get(process.env, 'REACT_APP_RUNTIME_PLATFORM', 'web')\n\n\n  const location = useLocation();\n\n  // @ts-ignore\n  const ipc = window.ipc;\n\n  useEffect(() => {\n    if (!ipc) return;\n    if (location.pathname.match(/classroom|replay/)) {\n      ipc.send('resize-window', {width: 990, height: 706});\n    } else {\n      ipc.send('resize-window', {width: 700, height: 500});\n    }\n  }, [location, ipc]);\n\n  const handleClick = (type: string) => {\n\n    if (!ipc) return;\n    \n    switch (type) {\n      case 'minimum': {\n        ipc.send('minimum');\n        return;\n      }\n      case 'maximum': {\n        ipc.send('maximum');\n        return;\n      }\n      case 'close': {\n        ipc.send('close');\n        return;\n      }\n    }\n  }\n\n  const NavBtn: React.FC<any> = () => {\n    if (platform === 'electron') {\n      return (\n        <div className=\"menu-group\">\n          <Icon className=\"icon-minimum\" icon onClick={() => {\n            handleClick(\"minimum\")\n          }} />\n          <Icon className=\"icon-maximum\" icon onClick={() => {\n            handleClick(\"maximum\")\n          }} />\n          <Icon className=\"icon-close\" icon onClick={() => {\n            handleClick(\"close\")\n          }} />\n        </div>\n      )\n    }\n    return null\n  }\n\n  const HomeBtn: React.FC<any> = ({handleSetting}: any) => {\n    if (platform === 'electron') {\n      return (<>\n        <Icon className=\"icon-setting\" onClick={handleSetting} />\n        <div className=\"icon-container\">\n          <Icon className=\"icon-minimum\" onClick={() => {\n            handleClick(\"minimum\")\n          }}/>\n          <Icon className=\"icon-close\" onClick={() => {\n            handleClick('close')\n          }}/>\n        </div>\n      </>)\n    }\n    return null\n  }\n\n  const SettingBtn: React.FC<any> = () => {\n    if (platform === 'electron') {\n      return (\n        <>\n          <Icon className=\"icon-minimum\" onClick={() => {\n            handleClick(\"minimum\")\n          }}/>\n          <Icon className=\"icon-close\" onClick={() => {\n            handleClick('close')\n          }}/>\n        </>\n      )\n    }\n    return null;\n  }\n\n  const value = {\n    platform,\n    NavBtn,\n    HomeBtn,\n    SettingBtn\n  }\n\n  return (\n    <PlatformContext.Provider value={value}>\n      {children}\n    </PlatformContext.Provider>\n  )\n}","import EventEmitter from 'events';\nimport AgoraRTC from 'agora-rtc-sdk';\nimport { roomStore, RoomStore } from '../stores/room';\nimport { isEmpty } from 'lodash';\n\nAgoraRTC.Logger.enableLogUpload();\nAgoraRTC.Logger.setLogLevel(AgoraRTC.Logger.DEBUG);\nexport interface AgoraStreamSpec {\n  streamID: number\n  video: boolean\n  audio: boolean\n  mirror?: boolean\n  screen?: boolean\n  microphoneId?: string\n  cameraId?: string\n  screenAudio?: boolean\n  audioOutput?: {\n    volume: number\n    deviceId: string\n  }\n}\n\nconst streamEvents: string[] = [\n  \"accessAllowed\", \n  \"accessDenied\",\n  \"stopScreenSharing\",\n  \"videoTrackEnded\",\n  \"audioTrackEnded\",\n  \"player-status-changed\"\n];\n\nconst clientEvents: string[] = [\n  'stream-published',\n  'stream-added',\n  'stream-removed',\n  'stream-subscribed',\n  'peer-online',\n  'peer-leave',\n  'error',\n  'network-type-changed',\n  'network-quality',\n  'exception',\n  'onTokenPrivilegeWillExpire',\n  'onTokenPrivilegeDidExpire',\n]\n\nexport const APP_ID = process.env.REACT_APP_AGORA_APP_ID as string;\nexport const APP_TOKEN = process.env.REACT_APP_AGORA_APP_TOKEN as string;\nexport const ENABLE_LOG = process.env.REACT_APP_AGORA_LOG as string === \"true\";\n\nexport class AgoraRTCClient {\n\n  private streamID: any;\n  public _init: boolean = false;\n  public _joined: boolean = false;\n  public _published: boolean = false;\n  private _internalTimer: NodeJS.Timeout | any;\n  public _client: any = AgoraRTC.createClient({mode: 'live', codec: 'vp8'});\n  public _bus: EventEmitter = new EventEmitter();\n  public _localStream: any = null;\n  public _streamEvents: string[];\n  public _clientEvents: string[];\n  public _addEventListener: boolean = false;\n\n  constructor () {\n    this.streamID = null;\n    this._streamEvents = [];\n    this._clientEvents = [];\n  }\n\n  // init rtc client when _init flag is false;\n  async initClient(appId: string) {\n    if (this._init) return;\n    let prepareInit = new Promise((resolve, reject) => {\n      this._init === false && this._client.init(appId, () => {\n        this._init = true;\n        resolve()\n      }, reject);\n    })\n    await prepareInit;\n  }\n\n  // create rtc client;\n  async createClient(appId: string, enableRtt?: boolean) {\n    await this.initClient(appId);\n    this.subscribeClientEvents();\n    if (enableRtt) {\n      this._internalTimer = setInterval(() => {\n        this._client.getTransportStats((stats: any) => {\n          const RTT = stats.RTT ? stats.RTT : 0;\n          this._bus.emit('watch-rtt', RTT);\n        });\n      }, 100);\n    }\n  }\n\n  destroyClient(): void {\n    this.unsubscribeClientEvents();\n  }\n\n  subscribeClientEvents() {\n    if (this._addEventListener) return\n    this._addEventListener = true\n    for (let evtName of clientEvents) {\n      this._clientEvents.push(evtName);\n      this._client.on(evtName, (args: any) => {\n        this._bus.emit(evtName, args);\n      });\n    }\n  }\n\n  unsubscribeClientEvents() {\n    if (this._addEventListener) {\n      for (let evtName of this._clientEvents) {\n        this._client.off(evtName, () => {});\n        this._clientEvents = this._clientEvents.filter((it: any) => it === evtName);\n      }\n      this._addEventListener = false\n    }\n  }\n\n  subscribeLocalStreamEvents() {\n    for (let evtName of streamEvents) {\n      this._streamEvents.push(evtName);\n      this._localStream.on(evtName, (args: any) => {\n        this._bus.emit(evtName, args);\n      });\n    }\n  }\n\n  unsubscribeLocalStreamEvents() {\n    if (this._localStream) {\n      for (let evtName of this._streamEvents) {\n        this._localStream.removeEventListener(evtName, (args: any[]) => {});\n        this._streamEvents = this._streamEvents.filter((it: any) => it === evtName);\n      }\n    }\n  }\n\n  renewToken(newToken: string) {\n    if (!this._client) return console.warn('renewToken is not permitted, checkout your instance');\n    this._client.renewToken(newToken);\n  }\n\n  removeAllListeners() {\n    console.log('[agora-rtc] prepare remove all event listeners')\n    this.unsubscribeClientEvents();\n    this._bus.removeAllListeners();\n    console.log(\"[agora-rtc] remove all event listeners\");\n  }\n\n  // subscribe\n  on(evtName: string, cb: (args: any) => void) {\n    this._bus.on(evtName, cb);\n  }\n\n  // unsubscribe\n  off(evtName: string, cb: (args: any) => void) {\n    this._bus.off(evtName, cb);\n  }\n\n  async publish() {\n    return new Promise((resolve, reject) => {\n      if (this._published) {\n        return resolve();\n      }\n      this._client.publish(this._localStream, (err: any) => {\n        reject(err);\n      })\n      setTimeout(() => {\n        resolve();\n        this._published = true;\n      }, 300);\n    })\n  }\n\n  async unpublish() {\n    return new Promise((resolve, reject) => {\n      if (!this._published || !this._localStream) {\n        return resolve();\n      }\n      this._client.unpublish(this._localStream, (err: any) => {\n        reject(err);\n      })\n      setTimeout(() => {\n        resolve();\n        this.destroyLocalStream();\n        this._published = false;\n      }, 300);\n    })\n  }\n\n  setRemoteVideoStreamType(stream: any, streamType: number) {\n    this._client.setRemoteVideoStreamType(stream, streamType);\n  }\n\n  async enableDualStream() {\n    return new Promise((resolve, reject) => {\n      this._client.enableDualStream(resolve, reject);\n    });\n  }\n\n  createLocalStream(data: AgoraStreamSpec): Promise<any> {\n    this._localStream = AgoraRTC.createStream({...data, mirror: false});\n    return new Promise((resolve, reject) => {\n      this._localStream.init(() => {\n        this.streamID = data.streamID;\n        this.subscribeLocalStreamEvents();\n        if (data.audioOutput && data.audioOutput.deviceId) {\n          this.setAudioOutput(data.audioOutput.deviceId).then(() => {\n            console.log(\"setAudioOutput success\", data.audioOutput)\n          }).catch((err: any) => {\n            console.warn(\"setAudioOutput failed\", err, JSON.stringify(err))\n          })\n        }\n        resolve();\n      }, (err: any) => {\n        reject(err);\n      })\n    });\n  }\n\n  destroyLocalStream () {\n    this.unsubscribeLocalStreamEvents();\n    if(this._localStream) {\n      if (this._localStream.isPlaying()) {\n        this._localStream.stop();\n      }\n      this._localStream.close();\n    }\n    this._localStream = null;\n    this.streamID = 0;\n  }\n\n  async join (uid: number, channel: string, token?: string) {\n    return new Promise((resolve, reject) => {\n      this._client.join(token, channel, +uid, resolve, reject);\n    })\n  }\n\n  async leave () {\n    if (this._client) {\n      return new Promise((resolve, reject) => {\n        this._client.leave(resolve, reject);\n      })\n    }\n  }\n\n  setAudioOutput(speakerId: string) {\n    return new Promise((resolve, reject) => {\n      if (this._client) {\n        this._client.setAudioOutput(speakerId, resolve, reject);\n        return\n      }\n      resolve()\n    })\n  }\n\n  setAudioVolume(volume: number) {\n    this._client.setAudioVolume(volume);\n  }\n\n  subscribe(stream: any) {\n    this._client.subscribe(stream, {video: true, audio: true}, (err: any) => {\n      console.log('[rtc-client] subscribe failed: ', JSON.stringify(err));\n    });\n  }\n\n  destroy (): void {\n    this._internalTimer && clearInterval(this._internalTimer);\n    this._internalTimer = null;\n    this.destroyLocalStream();\n    this.removeAllListeners();\n  }\n\n  async exit () {\n    try {\n      await this.leave();       \n    } catch (err) {\n      throw err;\n    } finally {\n      this.destroy();\n    }\n  }\n\n  getDevices (): Promise<Device[]> {\n    return new Promise((resolve, reject) => {\n      AgoraRTC.getDevices((devices: any) => {\n        const _devices: any[] = [];\n        devices.forEach((item: any) => {\n          _devices.push({deviceId: item.deviceId, kind: item.kind, label: item.label});\n        })\n        resolve(_devices);\n      }, (err: any) => {\n        reject(err);\n      });\n    })\n  }\n}\n\nexport default class AgoraWebClient {\n\n  public readonly rtc: AgoraRTCClient;\n  public shareClient: AgoraRTCClient | any;\n  public localUid: number;\n  public channel: string;\n  public readonly bus: EventEmitter;\n  public shared: boolean;\n  public joined: boolean;\n  public published: boolean;\n  public tmpStream: any;\n\n  private roomStore: RoomStore;\n\n  constructor(deps: {roomStore: RoomStore}) {\n    this.localUid = 0;\n    this.channel = '';\n    this.rtc = new AgoraRTCClient();\n    this.bus = new EventEmitter();\n    this.shared = false;\n    this.shareClient = null;\n    this.tmpStream = null;\n    this.joined = false;\n    this.published = false;\n    \n    this.roomStore = deps.roomStore;\n  }\n\n  async getDevices () {\n    const client = new AgoraRTCClient()\n    try {\n      const devices = await client.getDevices()\n\n      const cameraList = devices.filter((it: any) => it.kind === 'videoinput')\n      const microphoneList = devices.filter((it: any) => it.kind === 'audioinput')\n\n      if (!cameraList.length) {\n        throw 'cameraList is empty'\n      }\n\n      if (!microphoneList.length) {\n        throw 'microphoneList is empty'\n      }\n\n      const cameraId = cameraList[0].deviceId\n      const microphoneId = microphoneList[0].deviceId\n      await client.initClient(APP_ID)\n      const params = {\n        streamID: 0,\n        audio: true,\n        video: true,\n        screen: false,\n        microphoneId,\n        cameraId,\n      }\n      await client.createLocalStream(params)\n      return devices\n    } catch(err) {\n      throw err\n    } finally {\n      client.destroyLocalStream()\n    }\n  }\n\n\n  async joinChannel({\n    uid, channel, dual, token, appId\n  }: {\n    uid: number,\n    channel: string,\n    dual: boolean,\n    token: string,\n    appId: string\n  }) {\n    this.localUid = +uid;\n    this.channel = channel;\n    console.log(\"channel\", channel, \"dual\", dual, this.localUid, appId)\n    await this.rtc.createClient(appId, true);\n    await this.rtc.join(this.localUid, channel, token);\n    dual && await this.rtc.enableDualStream();\n    this.joined = true;\n    roomStore.setRTCJoined(true);\n    console.log(\"join web agora sdk rtc success\")\n  }\n\n  async leaveChannel() {\n    this.localUid = 0;\n    this.channel = '';\n    try {\n      await this.unpublishLocalStream();\n      await this.rtc.leave();\n      this.joined = false;\n      roomStore.setRTCJoined(false);\n    } catch (err) {\n      throw err;\n    } finally {\n      this.rtc.destroy();\n      this.rtc.destroyClient();\n    }\n  }\n\n  async enableDualStream() {\n    return this.rtc.enableDualStream();\n  }\n\n  async publishLocalStream(data: AgoraStreamSpec) {\n    console.log(\" publish local stream \", this.published);\n    if (this.published) {\n      await this.unpublishLocalStream();\n      console.log(\"[agora-web] unpublished\", this.published);\n    }\n\n    if (!data.cameraId || !data.microphoneId) {\n      let devices = await this.getDevices()\n      if (!data.cameraId) {\n        data.cameraId = devices.filter((it: any) => it.kind === 'videoinput')[0].deviceId\n      }\n      if (!data.microphoneId) {\n        data.microphoneId = devices.filter((it: any) => it.kind === 'audioinput')[0].deviceId\n      }\n    }\n\n    await this.rtc.createLocalStream(data);\n    await this.rtc.publish();\n    this.published = true;\n  }\n\n  async unpublishLocalStream() {\n    console.log(\"[agora-web] invoke unpublishStream\");\n    await this.rtc.unpublish();\n    this.published = false;\n  }\n\n  async startScreenShare ({\n    uid, channel, token, appId\n  }: {\n    uid: number,\n    channel: string,\n    token: string,\n    appId: string,\n  }) {\n    console.log(\"startScreenShare \", uid, channel, token, appId)\n    const shareClient = new AgoraRTCClient();\n    try {\n      await shareClient.createLocalStream({\n        video: false,\n        audio: false,\n        screen: true,\n        screenAudio: true,\n        streamID: uid,\n        microphoneId: '',\n        cameraId: ''\n      })\n      await shareClient.createClient(appId);\n      await shareClient.join(uid, channel, token);\n      await shareClient.publish();\n      this.shared = true;\n      this.shareClient = shareClient\n    } catch(err) {\n      throw err\n    }\n  }\n\n  async stopScreenShare () {\n    await this.shareClient.unpublish();\n    await this.shareClient.leave();\n    this.shareClient.destroy();\n    this.shareClient.destroyClient();\n    this.shared = false;\n    this.shareClient = undefined\n  }\n\n  async exit () {\n    const errors: any[] = [];\n    try {\n      await this.leaveChannel();\n    } catch(err) {\n      errors.push({'rtcClient': err});\n    }\n    if (this.shared === true) {\n      try {\n        await this.shareClient.unpublish();\n        await this.shareClient.leave();\n      } catch (err) {\n        errors.push({'shareClient': err});\n      }\n    }\n    if (this.shareClient) {\n      try {\n        this.shareClient.destroy();\n        this.shareClient.destroyClient();\n      } catch(err) {\n        errors.push({'shareClient': err});\n      }\n    }\n    if (!isEmpty(errors)) {\n      throw errors;\n    }\n  }\n\n  async createPreviewStream({cameraId, microphoneId, speakerId}: any) {\n    const tmpStream = AgoraRTC.createStream({\n      video: true,\n      audio: true,\n      screen: false,\n      cameraId,\n      microphoneId,\n      speakerId\n    });\n\n    if (this.tmpStream) {\n      this.tmpStream.isPlaying() && this.tmpStream.stop();\n      this.tmpStream.close();\n    }\n\n    return new Promise((resolve, reject) => {\n      tmpStream.init(() => {\n        this.tmpStream = tmpStream;\n        resolve(tmpStream);\n      }, (err: any) => {\n        reject(err);\n      })\n    });\n  }\n\n  subscribe(stream: any) {\n    this.rtc.subscribe(stream);\n  }\n\n  setRemoteVideoStreamType(stream: any, type: number) {\n    this.rtc.setRemoteVideoStreamType(stream, type);\n  }\n}","import AgoraRTM from 'agora-rtm-sdk';\nimport EventEmitter from 'events';\nimport * as _ from 'lodash';\nimport { resolveMessage, jsonParse } from './helper';\n\nexport const APP_ID = process.env.REACT_APP_AGORA_APP_ID as string;\nconst ENABLE_LOG = process.env.REACT_APP_AGORA_LOG === 'true';\nconst logFilter = ENABLE_LOG ? AgoraRTM.LOG_FILTER_DEBUG : AgoraRTM.LOG_FILTER_OFF;\n\nexport enum RoomMessage {\n  muteAudio = 101,\n  unmuteAudio = 102,\n  muteVideo = 103,\n  unmuteVideo = 104,\n  applyCoVideo = 105,\n  acceptCoVideo = 106,\n  rejectCoVideo = 107,\n  cancelCoVideo = 108,\n  muteChat = 109,\n  unmuteChat = 110,\n  muteBoard = 200,\n  unmuteBoard = 201,\n  lockBoard = 301,\n  unlockBoard = 302,\n  startCourse = 401,\n  endCourse = 402,\n  muteAllChat = 501,\n  unmuteAllChat = 502\n}\n\nexport enum ChatCmdType {\n  chat = 1,\n  roomMemberChanged = 2,\n  roomInfoChanged = 3,\n  coVideoUsersChanged = 4,\n  replay = 5,\n  screenShare = 6,\n}\n\nexport enum CoVideoType {\n  studentSendApply = 1,\n  teacherSendReject = 2,\n  // studentCancelApply = 3,\n  teacherSendAccept = 4,\n  teacherSendStop = 5,\n  studentSendStop = 6,\n}\n\nexport interface ChannelBodyParams {\n  account: string\n  content: string\n  recordId: string\n}\n\nexport interface NotifyMessageParams {\n  cmd: ChatCmdType\n  data: ChatMessage | UserMessage | CourseMessage | ReplayMessage\n  enableHistoricalMessaging?: boolean\n}\n\nexport interface CourseMessage {\n  operate: \n    RoomMessage.startCourse | \n    RoomMessage.endCourse | \n    RoomMessage.muteAllChat |\n    RoomMessage.unmuteAllChat |\n    RoomMessage.lockBoard |\n    RoomMessage.unlockBoard |\n    RoomMessage.acceptCoVideo |\n    RoomMessage.cancelCoVideo |\n    RoomMessage.applyCoVideo\n}\n\nexport type ChatMessage = {\n  account: string\n  content: string\n  userId?: string\n}\n\nexport interface ReplayMessage {\n  account: string\n  recordId: string\n}\n\nexport interface UserMessage {\n  uid: string\n  account: string\n  resource: string\n  value: number\n}\n\n\nexport interface ChatBody {\n  account: string\n  content: string\n}\n\nexport interface PeerMessage {\n  uid: string\n  userId: string\n  account: string\n  operate: number\n}\n\nexport interface MessageBody {\n  cmd: RoomMessage\n  text?: string\n  data?: ChatMessage |\n    UserMessage |\n    CourseMessage |\n    PeerMessage |\n    ReplayMessage\n}\n\nexport type SessionProps = {\n  roomType: number,\n  role: string,\n  id: string,\n  room: string,\n  token: string\n}\n\nexport default class AgoraRTMClient {\n\n  private _bus: EventEmitter;\n  public _currentChannel: any;\n  public _currentChannelName: string | any;\n  private _channels: any;\n  private _client: any;\n  private _channelAttrsKey: string | any;\n  public _logged: boolean = false;\n  private _joined: boolean = false;\n\n  constructor () {\n    this._bus = new EventEmitter();\n    this._channels = {};\n    this._currentChannel = null;\n    this._currentChannelName = null;\n    this._channelAttrsKey = null;\n    this._client = null;\n  }\n\n  public removeAllListeners(): any {\n    this._bus.removeAllListeners();\n  }\n\n  destroy (): void {\n    for (let channel of Object.keys(this._channels)) {\n      if (this._channels[channel]) {\n        this._channels[channel].removeAllListeners();\n        this._channels[channel] = null;\n      }\n    }\n    this._currentChannel = null;\n    this._currentChannelName = null;\n    this._client.removeAllListeners();\n  }\n\n  on(evtName: string, cb: (args: any) => void) {\n    this._bus.on(evtName, cb);\n  }\n\n  off(evtName: string, cb: (args: any) => void) {\n    this._bus.off(evtName, cb);\n  }\n\n  async login (appID: string, uid: string, token?: string) {\n    const rtmClient = AgoraRTM.createInstance(appID, { enableLogUpload: ENABLE_LOG, logFilter });\n    try {\n      await rtmClient.login({uid, token});\n      rtmClient.on(\"ConnectionStateChanged\", (newState: string, reason: string) => {\n        this._bus.emit(\"ConnectionStateChanged\", {newState, reason});\n      });\n      rtmClient.on(\"MessageFromPeer\", (message: any, peerId: string, props: any) => {\n        this._bus.emit(\"MessageFromPeer\", {message, peerId, props});\n      });\n      this._client = rtmClient\n      this._logged = true;\n    } catch(err) {\n      rtmClient.removeAllListeners()\n      throw err\n    }\n    return\n  }\n\n  async logout () {\n    if (!this._logged) return;\n    await this._client.logout();\n    this.destroy();\n    this._logged = false;\n    return;\n  }\n\n  async join (channel: string) {\n    const _channel = this._client.createChannel(channel);\n    this._channels[channel] = _channel;\n    this._currentChannel = this._channels[channel];\n    this._currentChannelName = channel;\n    await _channel.join();\n    _channel.on('ChannelMessage', (message: string, memberId: string) => {\n      this._bus.emit('ChannelMessage', {message, memberId});\n    });\n\n    _channel.on('MemberJoined', (memberId: string) => {\n      this._bus.emit('MemberJoined', memberId);\n    });\n\n    _channel.on('MemberLeft', (memberId: string) => {\n      this._bus.emit('MemberLeft', memberId);\n    });\n\n    _channel.on('MemberCountUpdated', (count: number) => {\n      this._bus.emit('MemberCountUpdated', count);\n    })\n\n    _channel.on('AttributesUpdated', (attributes: any) => {\n      this._bus.emit('AttributesUpdated', attributes);\n    });\n    this._joined = true;\n    return;\n  }\n\n  destroyChannel(channel: string) {\n    if (this._channels[channel]) {\n      this._channels[channel].removeAllListeners();\n      this._channels[channel] = null;\n    }\n  }\n\n  async leave (channel: string) {\n    if (this._channels[channel]) {\n      // await this._channels[channel].leave();\n      this._joined = false;\n      this.destroyChannel(channel);\n    }\n  }\n\n  async exit() {\n    try {\n      await this.deleteChannelAttributesByKey();\n    } catch (err) {\n\n    } finally {\n      await this.leave(this._currentChannelName);\n      await this.logout();\n    }\n  }\n\n  async notifyMessage(params: NotifyMessageParams) {\n    const {cmd, data, enableHistoricalMessaging = false} = params\n\n    const body = JSON.stringify({\n      cmd,\n      data,\n    })\n\n    return this._currentChannel.sendMessage({text: body}, {enableHistoricalMessaging})\n  }\n\n  async sendPeerMessage(peerId: string, body: MessageBody) {\n    resolveMessage(peerId, body);\n    console.log(\"[rtm-client] send peer message \", peerId, JSON.stringify(body));\n    let result = await this._client.sendMessageToPeer({text: JSON.stringify(body)}, peerId, {enableHistoricalMessaging: true});\n    return result.hasPeerReceived;\n  }\n\n  async sendRecordMessage(data: Partial<ChannelBodyParams>) {\n    const msgData: ReplayMessage = {\n      account: data.account as string,\n      recordId: data.recordId as string,\n    }\n\n    return this.notifyMessage({\n      cmd: ChatCmdType.replay,\n      data: msgData,\n      enableHistoricalMessaging: false\n    })\n  }\n\n  // async sendChannelMessage(data: Partial<ChannelBodyParams>) {\n  //   const msgData: ChatMessage = {\n  //     account: data.account as string,\n  //     content: data.content as string,\n  //   }\n\n  //   return this.notifyMessage({\n  //     cmd: ChatCmdType.chat,\n  //     data: msgData,\n  //     enableHistoricalMessaging: true\n  //   })\n  // }\n\n  async updateChannelAttrsByKey (key: string, attrs: any) {\n    this._channelAttrsKey = key;\n    const channelAttributes: {[key: string]: string} = {}\n    if (key) {\n      channelAttributes[key] = JSON.stringify(attrs);\n    }\n\n    console.log(\"[rtm-client] updateChannelAttrsByKey \", attrs, \" key \", key, channelAttributes);\n    await this._client.addOrUpdateChannelAttributes(\n      this._currentChannelName,\n      channelAttributes,\n      {enableNotificationToChannelMembers: true});\n  }\n\n  async deleteChannelAttributesByKey() {\n    if (!this._channelAttrsKey) return;\n    await this._client.deleteChannelAttributesByKeys(\n      this._currentChannelName,\n      [this._channelAttrsKey],\n      {enableNotificationToChannelMembers: true}\n    );\n    this._channelAttrsKey = null;\n    return;\n  }\n  \n  async getChannelAttrs (): Promise<string> {\n    let json = await this._client.getChannelAttributes(this._currentChannelName);\n    return JSON.stringify(json);\n  }\n\n  async getChannelMemberCount(ids: string[]) {\n    return this._client.getChannelMemberCount(ids);\n  }\n\n  async queryOnlineStatusBy(accounts: any[]) {\n    let results: any = {\n      teacherCount: 0,\n      totalCount: 0,\n      studentTotalCount: 0\n    };\n    if (accounts.length > 0) {\n      const ids = accounts.map((it: any) => `${it.uid}`);\n      results = await this._client.queryPeersOnlineStatus(ids);\n      if (results && Object.keys(results).length) {\n        const teacher = accounts.find((it: any) => it.role === 'teacher');\n        if (teacher && results[teacher.uid]) {\n          results.teacher = results[teacher.uid];\n          results.teacherCount = 1;\n        }\n        results.totalCount = accounts.filter((it: any) => results[it.uid]).length;\n        results.studentsTotalCount = results.totalCount - results.teacherCount;\n      } else {\n        console.warn(`accounts: ${ids}, cannot get peers online status from [queryPeersOnlineStatus]`);\n      }\n    }\n    return results;\n  }\n\n  async getChannelAttributeBy(channelName: string) {\n    let json = await this._client.getChannelAttributes(channelName);\n    const accounts = [];\n    for (let key of Object.keys(json)) {\n      if (key === 'teacher') {\n        const teacherObj = jsonParse(_.get(json, `${key}.value`));\n        // when teacher is not empty object\n        if(teacherObj && Object.keys(teacherObj).length) {\n          accounts.push({role: 'teacher', ...teacherObj});\n        }\n        continue;\n      }\n      const student = jsonParse(_.get(json, `${key}.value`));\n      // when student is not empty object\n      if (student && Object.keys(student).length) {\n        student.uid = key;\n        accounts.push(student);\n      }\n    }\n    return accounts;\n  }\n}","import { RoomMessage } from './agora-rtm-client';\nimport OSS from 'ali-oss';\nimport {get} from 'lodash';\n\nexport interface OSSConfig {\n  accessKeyId: string,\n  accessKeySecret: string,\n  // region: string,\n  endpoint: string,\n  bucket: string,\n  folder: string,\n}\n\nexport const ossConfig: OSSConfig = {\n  \"accessKeyId\": get(process.env, 'REACT_APP_YOUR_OWN_OSS_BUCKET_KEY', 'empty-placeholder'),\n  \"accessKeySecret\": get(process.env, 'REACT_APP_YOUR_OWN_OSS_BUCKET_SECRET', 'empty-placeholder'),\n  \"bucket\": get(process.env, 'REACT_APP_YOUR_OWN_OSS_BUCKET_NAME', 'empty-placeholder'),\n  // \"region\": process.env.REACT_APP_YOUR_OWN_OSS_BUCKET_REGION as string,\n  \"endpoint\": get(process.env, 'REACT_APP_YOUR_OWN_OSS_CDN_ACCELERATE', 'empty-placeholder'),\n  \"folder\": get(process.env, 'REACT_APP_YOUR_OWN_OSS_BUCKET_FOLDER', 'empty-placeholder'),\n}\n\n// console.log(\"your oss config \", ossConfig)\n\nexport const ossClient = new OSS(ossConfig);\n\nexport function resolveMessage(peerId: string, { cmd, text }: { cmd: number, text?: string }) {\n  let type = '';\n  switch (cmd) {\n    case RoomMessage.acceptCoVideo:\n      type = 'accept co-video'\n      break;\n    case RoomMessage.rejectCoVideo:\n      type = 'reject co-video'\n      break;\n    case RoomMessage.cancelCoVideo:\n      type = 'cancel co-video'\n      break;\n    case RoomMessage.applyCoVideo:\n      type = 'apply co-video'\n      break;\n    case RoomMessage.muteVideo:\n      type = 'mute video'\n      break;\n    case RoomMessage.muteAudio:\n      type = 'mute audio'\n      break;\n    case RoomMessage.unmuteAudio:\n      type = 'unmute audio'\n      break;\n    case RoomMessage.unmuteVideo:\n      type = 'unmute video'\n      break;\n    default:\n      return console.warn(`[RoomMessage] unknown type, from peerId: ${peerId}`);\n  }\n  console.log(`[RoomMessage] [${type}] from peerId: ${peerId}`)\n}\n\nexport interface UserAttrs {\n  uid: string\n  account: string\n  role: string\n  audio: number\n  video: number\n  chat: number\n  whiteboard_uid?: string\n  link_uid?: number\n  shared_uid?: number\n  mute_chat?: number\n  class_state?: number\n}\n\nexport function resolveMediaState(body: any) {\n  const cmd: number = body.cmd;\n  const mediaState = {\n    key: 'unknown',\n    val: -1,\n  }\n  switch (cmd) {\n    case RoomMessage.muteVideo:\n      mediaState.key = 'video'\n      mediaState.val = 0\n      break\n    case RoomMessage.unmuteVideo:\n      mediaState.key = 'video'\n      mediaState.val = 1\n      break\n    case RoomMessage.muteAudio:\n      mediaState.key = 'audio'\n      mediaState.val = 0\n      break\n    case RoomMessage.unmuteAudio:\n      mediaState.key = 'audio'\n      mediaState.val = 1\n      break\n    case RoomMessage.muteChat:\n      mediaState.key = 'chat'\n      mediaState.val = 0\n      break\n    case RoomMessage.unmuteChat:\n      mediaState.key = 'chat'\n      mediaState.val = 1\n      break\n    default:\n      console.warn(\"[rtm-message] unknown message protocol\");\n  }\n  return mediaState;\n}\n\nexport function genUid(): string {\n  const id = +Date.now() % 1000000;\n  return id.toString();\n}\n\nexport function jsonParse(json: string) {\n  try {\n    return JSON.parse(json);\n  } catch (err) {\n    return {};\n  }\n}\n\nexport function resolvePeerMessage(text: string) {\n  const body = jsonParse(text);\n  return body;\n}\n\nexport const resolveFileInfo = (file: any) => {\n  const fileName = encodeURI(file.name);\n  const fileType = fileName.substring(fileName.length, fileName.lastIndexOf('.'));\n  return {\n    fileName,\n    fileType\n  }\n}\n\nconst level = [\n  'unknown',\n  'excellent',\n  'good',\n  'poor',\n  'bad',\n  'very bad',\n  'down'\n];\n\nexport function NetworkQualityEvaluation(evt: { downlinkNetworkQuality: number, uplinkNetworkQuality: number }) {\n  let defaultQuality = 'unknown';\n  const val = Math.max(evt.downlinkNetworkQuality, evt.uplinkNetworkQuality);\n  return level[val] ? level[val] : defaultQuality;\n}\n\nexport function btoa(input: any) {\n  let keyStr =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n  let output = \"\";\n  let chr1, chr2, chr3, enc1, enc2, enc3, enc4;\n  let i = 0;\n\n  while (i < input.length) {\n    chr1 = input[i++];\n    chr2 = i < input.length ? input[i++] : Number.NaN; // Not sure if the index\n    chr3 = i < input.length ? input[i++] : Number.NaN; // checks are needed here\n\n    enc1 = chr1 >> 2;\n    enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\n    enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\n    enc4 = chr3 & 63;\n\n    if (isNaN(chr2)) {\n      enc3 = enc4 = 64;\n    } else if (isNaN(chr3)) {\n      enc4 = 64;\n    }\n    output +=\n      keyStr.charAt(enc1) +\n      keyStr.charAt(enc2) +\n      keyStr.charAt(enc3) +\n      keyStr.charAt(enc4);\n  }\n  return output;\n}","import { APP_ID } from './agora-rtc-client';\nimport EventEmitter from 'events';\nimport { btoa } from './helper';\nimport { RoomStore } from '../stores/room';\nimport { globalStore } from '../stores/global';\n// @ts-ignore\nexport const AgoraRtcEngine = window.rtcEngine;\n\nif (AgoraRtcEngine) {\n  AgoraRtcEngine.initialize(APP_ID);\n  AgoraRtcEngine.setChannelProfile(1);\n  AgoraRtcEngine.enableVideo();\n  AgoraRtcEngine.enableAudio();\n  AgoraRtcEngine.enableWebSdkInteroperability(true);\n  AgoraRtcEngine.setVideoProfile(43, false);\n  //@ts-ignore\n  window.ipc && window.ipc.once(\"initialize\", (events: any, args: any) => {\n    const logPath = args[0]\n    const videoSourceLogPath = args[2];\n    const videoSourceAddonLogPath = args[3];\n    //@ts-ignore\n    window.videoSourceLogPath = videoSourceLogPath;\n    //@ts-ignore\n    window.videoSourceAddonLogPath = videoSourceAddonLogPath;\n    AgoraRtcEngine.setLogFile(logPath)\n  })\n}\n\n//@ts-ignore\nwindow.ipc && window.ipc.on(\"export-log\", (events: any, args: any) => {\n  //@ts-ignore\n  window.doGzip();\n  //@ts-ignore\n  console.log('doGzip', window.doGzip);\n})\n\nexport interface Stream {\n  uid: number\n}\n\nexport enum StreamType {\n  local,\n  remote,\n  localVideoSource,\n  remoteVideoSource,\n}\n\nexport class AgoraElectronStream {\n  public stream: Stream;\n  public playing: boolean = false;\n  private domID: string;\n  constructor(\n    public uid: number = uid,\n    public type: StreamType = StreamType.remote,\n  ) {\n    this.domID = '';\n    this.stream = {\n      uid: this.uid,\n    }\n  }\n}\n\nexport interface ElectronStreamSpec {\n  streamID: number\n  microphoneId?: string\n  cameraId?: string\n  speakerId?: string\n  speakerVolume?: number\n}\n\nexport class AgoraElectronClient {\n\n  public joined: boolean;\n  private readonly bus: EventEmitter;\n  public localUid: number;\n  public rid: string;\n  public readonly rtcEngine: any\n  public published: boolean;\n  public shared: boolean;\n  private roomStore: RoomStore;\n  subscribeVideoSource: boolean = false;\n\n  constructor(deps: {roomStore: RoomStore}) {\n    this.rtcEngine = AgoraRtcEngine;\n    this.published = false;\n    this.localUid = 0;\n    this.joined = false;\n    this.shared = false;\n    this.rid = '';\n    this.bus = new EventEmitter();\n    this.roomStore = deps.roomStore;\n  }\n\n  private isLocal(uid: number) {\n    return this.localUid === uid;\n  }\n\n  createStream ({streamID, microphoneId, cameraId, speakerId, speakerVolume}: ElectronStreamSpec) {\n    if (microphoneId) {\n      const res = this.rtcEngine.setAudioRecordingDevice(microphoneId);\n      res !== 0 && console.warn(`[createStream] set microphone: ${microphoneId} failed`);\n    }\n\n    if (cameraId) {\n      const res = this.rtcEngine.setVideoDevice(cameraId);\n      res !== 0 && console.warn(`[createStream] set cameraId: ${cameraId} failed`);\n    }\n\n    if (speakerId) {\n      const res = this.rtcEngine.setAudioPlaybackDevice(speakerId);\n      res !== 0 && console.warn(`[creaetStream] set speakerId: ${speakerId}`);\n    }\n\n    if (speakerVolume) {\n      const res = this.rtcEngine.setAudioPlaybackVolume(speakerVolume);\n      res !== 0 && console.warn(`[creaetStream] set setAudioPlaybackVolume: ${speakerVolume}`);\n    }\n\n    return new AgoraElectronStream(streamID, +streamID !== +this.roomStore.state.course.screenId ? StreamType.local : StreamType.localVideoSource);\n  }\n\n  private readonly events: string[] = [\n    'joinedchannel',\n    'userjoined',\n    'removestream',\n    'leavechannel',\n    'audiodevicestatechanged',\n    'videodevicestatechanged',\n    'error',\n    'executefailed',\n    'rtcStats',\n    'networkquality',\n    'audioquality',\n  ]\n\n  private _subscribedEvents: any[] = [];\n  private destroyed: boolean = false;\n\n  joinChannel({\n    uid,\n    channel,\n    dual,\n    token\n  }: {\n    uid: number,\n    channel: string,\n    dual: boolean,\n    token: string\n  }): number {\n    this.localUid = uid;\n    this.rid = channel;\n    const rtcEngine = this.rtcEngine;\n    const events = [\n      // 'joinedchannel',\n      // 'userjoined',\n      // 'removestream',\n      'leavechannel',\n      'error',\n      'executefailed',\n      'rtcStats',\n      'networkquality',\n      'audioquality',\n    ]\n    for (let event of events) {\n      this._subscribedEvents.push(event);\n      rtcEngine.on(event, (...args: any[]) => {\n        this.bus.emit(event, ...args);\n      })\n    }\n    rtcEngine.on('joinedchannel', (channel: string, uid: number) => {\n      const stream = new AgoraElectronStream(uid, +uid !== +this.roomStore.state.course.screenId ? StreamType.local : StreamType.localVideoSource);\n      this.bus.emit('joinedchannel', {stream});\n    })\n    rtcEngine.on('userjoined', (uid: number) => {\n      const stream = new AgoraElectronStream(uid, StreamType.remote);\n      console.log(\"userjoined\", uid)\n      this.bus.emit('userjoined', {stream});\n    })\n    rtcEngine.on('removestream', (uid: number) => {\n      this.bus.emit('removestream', {uid});\n    })\n    if (dual) {\n      rtcEngine.enableDualStreamMode(true);\n    }\n    // default role is audience\n    this.rtcEngine.setClientRole(2);\n    // WARN: TOKEN\n    let res = this.rtcEngine.joinChannel(token, channel, '', this.localUid);\n    if(res === 0) {\n      this.joined = true;\n      this.destroyed = false;\n    }\n    return res;\n  }\n\n  play(uid: number, dom: Element, videosource?: boolean) {\n    const rtcEngine = this.rtcEngine;\n    const local = this.isLocal(uid);\n    if (videosource) {\n      if (local) {\n        rtcEngine.setupLocalVideoSource(dom)\n        rtcEngine.setupViewContentMode('videosource', 1);\n        rtcEngine.setupViewContentMode(uid, 1);\n      } else {\n        rtcEngine.subscribe(uid, dom)\n        rtcEngine.setupViewContentMode('videosource', 1);\n        rtcEngine.setupViewContentMode(uid, 1);\n      }\n    } else {\n      if (local) {\n        this.rtcEngine.setupLocalVideo(dom);\n      } else {\n        this.rtcEngine.subscribe(uid, dom)\n        this.rtcEngine.setupViewContentMode(uid, 1);\n      }\n    }\n  }\n\n  stop(uid: number, dom: Element) {\n    this.rtcEngine.destroyRenderView(uid, dom, (err: any) => {console.warn(err.message)});\n  }\n\n  leave() {\n    if (!this.joined) return;\n    const result = this.rtcEngine.leaveChannel();\n    this.joined = false;\n    this.localUid = 0;\n    this.rid = '';\n    return result;\n  }\n\n  on(name: string, cb: (...args: any[]) => void) {\n    this.bus.on(name, cb);\n  }\n\n  off(name: string, cb: (...args: any[]) => void) {\n    this.bus.off(name, cb);\n  }\n\n  destroyClient() {\n    if (this.destroyed) return;\n    for (let event of this._subscribedEvents) {\n      this.rtcEngine.off(event, () => {});\n    }\n    this.bus.removeAllListeners();\n    this.destroyed = true;\n  }\n\n  getScreenShareWindows() {\n    return this.rtcEngine.getScreenWindowsInfo()\n      .map((item: any) => ({\n        ownerName: item.ownerName,\n        name: item.name,\n        windowId: item.windowId,\n        image: btoa(item.image)\n      }));\n  }\n\n  async startScreenShare(\n    windowId: number,\n    uid: number,\n    channel: string,\n    token: string,\n    appId: string,\n    rect = {x: 0, y: 0, width: 0, height: 0},\n    param = {width: 0, height: 0, bitrate: 500, frameRate: 15}\n  ): Promise<AgoraElectronStream> {\n    console.log(\"[native] start screen share\", token, uid, appId);\n    const shareClient = this.rtcEngine;\n    return new Promise((resolve, reject) => {\n      shareClient.videoSourceInitialize(APP_ID);\n      shareClient.videoSourceSetChannelProfile(1);\n      shareClient.videoSourceEnableWebSdkInteroperability(true);\n      // shareClient.setVideoRenderDimension(3, SHARE_ID, 1280, 960);\n      shareClient.videoSourceSetVideoProfile(50, false);\n      //@ts-ignore\n      if (window.videoSourceLogPath) {\n        //@ts-ignore\n        shareClient.videoSourceSetLogFile(window.videoSourceLogPath)\n        //@ts-ignore\n        console.log(`[native] videoSourceSetLogFile, videoSourceLogPath: `, window.videoSourceLogPath)\n      }\n      //@ts-ignore\n      // if (window.videoSourceAddonLogPath) {\n      //   //@ts-ignore\n      //   shareClient.videoSourceSetAddonLogFile(window.videoSourceAddonLogPath)\n      //   //@ts-ignore\n      //   console.log(`[native] videoSourceSetAddonLogFile, videoSourceAddonLogPath: `, window.videoSourceAddonLogPath)\n      // }\n      // to adjust render dimension to optimize performance\n      console.log(\"[electron-debug] SHARE_ID\", uid, \" TOKEN: \", token, \" CHANNEL\", channel);\n      shareClient.videoSourceJoin(token, channel, '', uid);\n      if (!shareClient.subscribeVideoSource) {\n        shareClient.once('videoSourceJoinedSuccess', (uid: number) => {\n          shareClient.subscribeVideoSource = false;\n          console.log(\"[electron-debug] videoSource Joined\", uid);\n          // shareClient.startScreenCapture2(windowId, 15, rect, 0);\n          shareClient.videoSourceStartScreenCaptureByWindow(windowId, {x: 0, y: 0, width: 0, height: 0}, {width: 0, height: 0, bitrate: 500, frameRate: 15});\n          shareClient.startScreenCapturePreview();\n          // shareClient.videoSourceSetVideoProfile(43, false);\n          // shareClient.startScreenCapture2(windowId, 15, rect, 0);\n          // shareClient.startScreenCapturePreview();\n          this.shared = true;\n\n          const electronStream = new AgoraElectronStream(uid, StreamType.localVideoSource);\n          resolve(electronStream);\n          shareClient.off('videoSourceJoinedSuccess', () => {});\n        });\n\n        shareClient.subscribeVideoSource = true;\n\n        setTimeout(() => {\n          reject();\n        }, 5000);\n      }\n    })\n  }\n\n  async stopScreenShare() {\n    globalStore.showLoading();\n    let stopPromise = new Promise((resolve, reject) => {\n      const onSuccess = () => {\n        this.roomStore.removeLocalSharedStream();\n        this.rtcEngine.off('videoSourceLeaveChannel', (evt: any) => {});\n        globalStore.stopLoading();\n      }\n\n      const onFailure = () => {\n        this.roomStore.removeLocalSharedStream();\n        this.rtcEngine.off('videoSourceLeaveChannel', (evt: any) => {});\n        globalStore.stopLoading();\n      }\n\n      // this.rtcEngine.once('videoSourceLeaveChannel', (evt: any) => {\n      //   onSuccess();\n      // });\n      // this.rtcEngine.videoSourceLeave();\n      this.rtcEngine.videoSourceRelease();\n      this.shared = false;\n      resolve(onSuccess());\n      // setTimeout(() => {\n      //   reject(onFailure())\n      // }, 5000)\n    })\n\n    return await stopPromise;\n  }\n\n  releaseScreenShare() {\n    this.roomStore.removeLocalSharedStream();\n    this.rtcEngine.videoSourceLeave()\n    this.rtcEngine.videoSourceRelease();\n    this.rtcEngine.removeAllListeners();\n    this.shared = false;\n    this.rtcEngine.subscribeVideoSource = false;\n  }\n\n  exit () {\n    try {\n      this.leave();\n    } catch(err) {\n      throw err;\n    } finally {\n      this.destroyClient();\n    }\n  }\n\n  publish() {\n    this.published = true;\n    const res = this.rtcEngine.setClientRole(1);\n    return res;\n  }\n\n  unpublish() {\n    this.published = false;\n    const res = this.rtcEngine.setClientRole(2);\n    return res;\n  }\n}\n\n// export const nativeRTCClient = roomStore.rtcClient as AgoraElectronClient;","import {globalStore} from '../stores/global'\nimport GlobalStorage from '../utils/custom-storage';\n\nconst key = 'demo-i18n-error'\n\nexport function setIntlError (payload: any) {\n  if (payload) {\n    GlobalStorage.save(key, payload)\n  }\n}\n\nfunction _getIntlError (error: string) {\n  try {\n    const locale = globalStore.getLanguage().match(/^zh/) ? 'zh-cn' : 'en-us';\n    const rawData: any = GlobalStorage.read(key)\n    const json = rawData || {}\n    return json[locale][error]\n  } catch(err) {\n    console.warn(err)\n    return null\n  }\n}\n\nexport function getIntlError (errorCode: string) {\n  const res = _getIntlError(errorCode)\n  // TODO: return errorCode when error message not reached \n  // TODO: 处理错误码\n  if (!res) {\n    return errorCode\n  }\n  return res;\n}","import { globalStore } from \"../stores/global\";\nimport { getIntlError } from '../services/intl-error-helper';\n\nconst FETCH_TIMEOUT = 10000\n\n// const delay = 100;\n\nexport async function Fetch (input: RequestInfo, init?: RequestInit, retryCount: number = 0): Promise<any> {\n  return new Promise((resolve, reject) => {\n    const onResponse = (response: Response) => {\n      if (!response.ok) {\n        reject(new Error(response.statusText))\n      }\n      return response.json().then(resolve).catch(reject)\n    }\n\n    const onError = (error: any) => {\n      // retryCount--;\n      // if (retryCount) {\n      //   setTimeout(fetchRequest, delay);\n      // } else {\n        reject(error);\n      // }\n    }\n\n    const rescueError = (error: any) => {\n      console.warn(error)\n      throw error;\n    }\n\n    function fetchRequest() {\n      return fetch(input, init)\n        .then(onResponse)\n        .catch(onError)\n        .catch(rescueError)\n    }\n\n    fetchRequest();\n\n    if (FETCH_TIMEOUT) {\n      const err = new Error(\"request timeout\")\n      setTimeout(reject, FETCH_TIMEOUT, err)\n    }\n  })\n}\n\nexport async function AgoraFetch(input: RequestInfo, init?: RequestInit, retryCount: number = 0) {\n  try {\n    return await Fetch(input, init, retryCount);\n  } catch(err) {\n    if (err && err.message === 'request timeout') {\n      const code = 408\n      const error = getIntlError(`${code}`)\n      const isErrorCode = `${error}` === `${code}`\n      globalStore.showToast({\n        type: 'eduApiError',\n        message: isErrorCode ? `request timeout` : error\n      })\n      return {code, msg: null, response: null}\n    }\n    throw err\n  }\n}","import { Subject } from 'rxjs';\nexport class RouterHistoryEntity {\n  private subject: Subject<any> | null;\n  public state: any;\n\n  public readonly defaultState: any = {\n    state: 'ready',\n    history: null,\n  }\n\n  constructor() {\n    this.subject = null;\n    this.state = this.defaultState;\n  }\n\n  initialize() {\n    this.subject = new Subject<any>();\n    this.state = {\n      ...this.defaultState,\n    }\n    this.subject.next(this.state);\n  }\n\n  subscribe(updateState: any) {\n    this.initialize();\n    this.subject && this.subject.subscribe(updateState);\n  }\n\n  unsubscribe() {\n    this.subject && this.subject.unsubscribe();\n    this.subject = null;\n  }\n\n  commit (state: any) {\n    this.subject && this.subject.next(state);\n  }\n\n  setHistory(history: any) {\n    if (!this.state) return\n    this.state = {\n      ...this.state,\n      history,\n    }\n    this.commit(this.state)\n  }\n\n  getHistory() {\n    if (!this.state) return\n    return this.state.history\n  }\n}\n\nexport const historyStore = new RouterHistoryEntity();\n\n// TODO: Please remove it before release in production\n// 备注：请在正式发布时删除操作的window属性\n//@ts-ignore\nwindow.historyStore = historyStore","import { BUILD_VERSION, t } from './../i18n';\nimport { AgoraFetch } from \"../utils/fetch\";\nimport { ClassState, AgoraUser, Me } from \"../stores/room\";\nimport {Map} from 'immutable'\nimport {get} from 'lodash'\nimport { getIntlError, setIntlError } from \"./intl-error-helper\";\nimport { globalStore } from \"../stores/global\";\nimport { historyStore } from './../stores/history';\nimport OSS from \"ali-oss\";\nimport axios from 'axios';\n /* eslint-disable */ \nimport Log from '../utils/LogUploader';\n\nconst whiteboardGenerateTokenApiEndpoint = process.env.REACT_APP_YOUR_BACKEND_WHITEBOARD_API as string;\n\nexport interface UserAttrsParams {\n  userId: string\n  enableChat: number\n  enableVideo: number\n  enableAudio: number\n  grantBoard: number\n  // coVideo?: number\n}\n\nconst APP_ID: string = process.env.REACT_APP_AGORA_APP_ID as string;\nconst PREFIX: string = process.env.REACT_APP_AGORA_EDU_ENDPOINT_PREFIX as string;\nconst AUTHORIZATION: string = process.env.REACT_APP_AGORA_RESTFULL_TOKEN as string;\n\nconst AgoraFetchJson = async ({url, method, data, token, full_url}:{url?: string, method: string, data?: any, token?: string, full_url?: string}) => {  \n  const opts: any = {\n    method,\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Basic ${AUTHORIZATION}`\n    }\n  }\n\n  if (token) {\n    opts.headers['token'] = token;\n  }\n  if (data) {\n    opts.body = JSON.stringify(data);\n  }\n\n  let resp = undefined;\n  if (full_url) {\n    resp = await AgoraFetch(`${full_url}`, opts);\n  } else {\n    resp = await AgoraFetch(`${PREFIX}${url}`, opts);\n  }\n  const {code, msg, data: responseData} = resp\n\n  if (code !== 0 && code !== 408) {\n    const error = getIntlError(`${code}`)\n    const isErrorCode = `${error}` === `${code}`\n    globalStore.showToast({\n      type: 'eduApiError',\n      message: isErrorCode ? `${msg}` : error\n    })\n    if (code === 401 || code === 1101012) {\n      // historyStore.state.history.goBack()\n      historyStore.state.history.push('/')\n      return\n    }\n    throw {api_error: error, isErrorCode}\n  }\n\n  return responseData\n}\n\nexport interface EntryParams {\n  userName: string\n  roomName: string\n  roomUuid: string\n  userUuid: string\n  type: number\n  role: number\n}\n\nexport type RoomParams = Partial<{\n  muteAllChat: boolean\n  lockBoard: number\n  courseState: number\n  [key: string]: any\n}>\n\ntype FileParams = {\n  file: any,\n  key: string,\n  host: string,\n  policy: any,\n  signature: any,\n  callback: any,\n  accessid: string\n}\n\nconst uploadLogToOSS = async ({\n  file,\n  key,\n  host,\n  policy,\n  signature,\n  callback,\n  accessid\n}: FileParams) => {\n  const formData = new FormData()\n  formData.append('name', 'test.log')\n  formData.append('key', key)\n  formData.append('file', file)\n  formData.append('policy',policy)\n  formData.append('OSSAccessKeyId',accessid)\n  formData.append('success_action_status','200')\n  formData.append('callback',callback)\n  formData.append('signature',encodeURIComponent(signature).replace(/%20/g,'+'))\n  return await axios.post(host, formData, {\n    headers: { 'Content-Type': 'application/x-www-form-urlencoded'}\n  })\n}\n\nexport class AgoraEduApi {\n\n  appID: string = APP_ID;\n  roomId: string = '';\n  public _userToken: string = '';\n\n  public get userToken(): string {\n    const userToken = window.sessionStorage.getItem(\"edu-userToken\") as string || '';\n    return userToken;\n  }\n\n  public set userToken(token: string) {\n    window.sessionStorage.setItem(\"edu-userToken\", token)\n  }\n  \n  recordId: string = '';\n\n  // fetch stsToken\n  // 获取 stsToken\n  async fetchStsToken(roomId: string, fileExt: string) {\n    // NOTE: demo feedback only\n    const appCode = 'edu-demo'\n    const _roomId = roomId ? roomId : 0;\n    let data = await AgoraFetchJson({\n      url: `/v1/log/params?appCode=${appCode}&osType=${3}&terminalType=${3}&appVersion=${BUILD_VERSION}&roomId=${_roomId}&fileExt=${fileExt}&appId=${this.appID}`,\n      method: 'GET',\n    })\n\n    return {\n      bucketName: data.bucketName as string,\n      callbackBody: data.callbackBody as string,\n      callbackContentType: data.callbackContentType as string,\n      accessKeyId: data.accessKeyId as string,\n      accessKeySecret: data.accessKeySecret as string,\n      securityToken: data.securityToken as string,\n      ossKey: data.ossKey as string,\n    }\n  }\n\n  async uploadToOss(roomId: string, file: any, ext: string) {\n    let {\n      bucketName,\n      callbackBody,\n      callbackContentType,\n      accessKeyId,\n      accessKeySecret,\n      securityToken,\n      ossKey\n    } = await this.fetchStsToken(roomId, ext);\n    const ossParams = {\n      bucketName,\n      callbackBody,\n      callbackContentType,\n      accessKeyId,\n      accessKeySecret,\n      securityToken,\n    }\n    const ossClient = new OSS({\n      accessKeyId: ossParams.accessKeyId,\n      accessKeySecret: ossParams.accessKeySecret,\n      stsToken: ossParams.securityToken,\n      bucket: ossParams.bucketName,\n      secure: true,\n      // TODO: 请传递你自己的oss endpoint\n      // TODO: Please use your own oss endpoint\n      endpoint: 'oss-accelerate.aliyuncs.com',\n    })\n\n    const url = `${PREFIX}/v1/log/sts/callback`\n    try {\n      return await ossClient.put(ossKey, file, {\n        callback: {\n          url: `${PREFIX}/v1/log/sts/callback`,\n          body: callbackBody,\n          contentType: callbackContentType,\n        }\n      });\n    } catch(err) {\n      globalStore.showToast({\n        type: 'oss',\n        message: t(\"toast.upload_log_failure\", {reason: err.name})\n      })\n      throw err\n    }\n  }\n\n  async uploadZipLogFile(\n    roomId: string,\n    file: any\n  ) {\n    const res = await this.uploadToOss(roomId, file, 'zip')\n    return res;\n  }\n\n  // upload log\n  async uploadLogFile(\n    roomId: string,\n    file: any\n  ) {\n    const res = await this.uploadToOss(roomId, file, 'log')\n    return res;\n  }\n\n  // fetch i18n\n  static async fetchI18n() {\n    let data = await AgoraFetchJson({\n      url: `/v1/multi/language`,\n      method: 'GET',\n    });\n\n    setIntlError(data || {})\n  }\n\n  // app config\n  // 配置入口\n  // async config() {\n  //   let data = await AgoraFetchJson({\n  //     url: `/v1/config?platform=0&device=0&version=5.2.0`,\n  //     method: 'GET',\n  //   });\n\n  //   if (data['multiLanguage']) {\n  //     setIntlError(data['multiLanguage'])\n  //   }\n\n  //   return {\n  //     appId: data.appId,\n  //     room: data.room,\n  //   }\n  // }\n\n  // room entry\n  // 房间入口\n  async entry(params: EntryParams) {\n    let data = await AgoraFetchJson({\n      url: `/v1/apps/${this.appID}/room/entry`,\n      method: 'POST',\n      data: params,\n    });\n    \n    this.roomId = data.roomId;\n    this.userToken = data.userToken;\n    return {\n      data\n    }\n  }\n\n  // refresh token\n  // 刷新token \n  async refreshToken() {\n    let data = await AgoraFetchJson({\n      url: `/v1/apps/${this.appID}/room/${this.roomId}/token/refresh`,\n      method: 'POST',\n      token: this.userToken,\n    });\n    return {\n      rtcToken: data.rtcToken,\n      rtmToken: data.rtmToken,\n      screenToken: data.screenToken\n    }\n  }\n\n  // update course\n  // 更新课程状态\n  async updateCourse(params: Partial<RoomParams>) {\n    const {room} = params\n    let data = await AgoraFetchJson({\n      url: `/v1/apps/${this.appID}/room/${this.roomId}`,\n      method: 'POST',\n      data: room,\n      token: this.userToken,\n    });\n    return {\n      data,\n    }\n  }\n\n  // updateRoomUser\n  // 更新用户状态，老师可更新房间内所有人，学生只能更新自己\n  async updateRoomUser(user: Partial<UserAttrsParams>) {\n    const {userId, ...userAttrs} = user\n    let data = await AgoraFetchJson({\n      url: `/v1/apps/${this.appID}/room/${this.roomId}/user/${userId}`,\n      method: 'POST',\n      data: userAttrs,\n      token: this.userToken,\n    });\n    return {\n      data,\n    }\n  }\n\n  // start recording\n  // 开始录制\n  async startRecording() {\n    let data = await AgoraFetchJson({\n      url: `/v1/apps/${this.appID}/room/${this.roomId}/record/start`,\n      method: 'POST',\n      data: {},\n      token: this.userToken,\n    });\n    this.recordId = data.recordId\n    return {\n      data\n    }\n  }\n\n  // stop recording\n  // 结束录制\n  async stopRecording(recordId: string) {\n    let data = await AgoraFetchJson({\n      url: `/v1/apps/${this.appID}/room/${this.roomId}/record/${recordId}/stop`,\n      method: 'POST',\n      token: this.userToken,\n    })\n    return {\n      data\n    }\n  }\n\n  // get recording list\n  // 获取录制列表\n  async getRecordingList () {\n    let data = await AgoraFetchJson({\n      url: `/v1/apps/${this.appID}/room/${this.roomId}/records`,\n      method: 'GET',\n      token: this.userToken,\n    })\n    return {\n      data\n    }\n  }\n\n  // get whiteboard token\n  async getWhiteboardBy(roomId: string): Promise<any> {\n    let boardData = await AgoraFetchJson({\n      full_url: whiteboardGenerateTokenApiEndpoint.replace(\"%app_id%\", this.appID).replace(\"%room_id%\", roomId),\n      method: 'GET',\n      token: this.userToken,\n    })\n    return {\n      boardId: boardData.boardId,\n      boardToken: boardData.boardToken,\n    };\n  }\n\n  // get room info\n  // 获取房间信息\n  async getRoomInfoBy(roomId: string): Promise<{data: any}> {\n    let data = await AgoraFetchJson({\n      url: `/v1/apps/${this.appID}/room/${roomId}`,\n      method: 'GET',\n      token: this.userToken,\n    });\n    let boardData = await this.getWhiteboardBy(roomId);\n    return {\n      data: {\n        room: {\n          ...data.room,\n          boardId: boardData.boardId,\n          boardToken: boardData.boardToken,\n        },\n        users: data.room.coVideoUsers,\n        user: data.user\n      }\n    }\n  }\n\n  // getRoomState\n  // 获取用户状态\n  async getRoomState(roomId: string): Promise<{usersMap: Map<string, AgoraUser>, room: Partial<ClassState>, me: Partial<Me>}> {\n    const {data} = await this.getRoomInfoBy(roomId)\n    const {users: rawUsers, room: rawCourse, user: me} = data\n\n    let usersMap: Map<string, AgoraUser> = rawUsers.reduce((acc: Map<string, AgoraUser>, it: any) => {\n      return acc.set(`${it.uid}`, {\n        role: it.role,\n        account: it.userName,\n        uid: it.uid,\n        video: it.enableVideo,\n        audio: it.enableAudio,\n        chat: it.enableChat,\n        grantBoard: it.grantBoard,\n        userId: it.userId,\n        screenId: it.screenId,\n      });\n    }, Map<string, AgoraUser>());\n\n    const room: Partial<ClassState> = {\n      courseState: rawCourse.courseState,\n      muteChat: rawCourse.muteAllChat,\n      isRecording: rawCourse.isRecording,\n      boardId: rawCourse.boardId,\n      boardToken: rawCourse.boardToken,\n      lockBoard: rawCourse.lockBoard,\n      teacherId: '',\n      memberCount: rawCourse.onlineUsers,\n    }\n\n    const teacher = usersMap.find((it: AgoraUser) => it.role === 1)\n\n    if (teacher) {\n      room.teacherId = teacher.uid\n    }\n    \n    if (me.role === 1) {\n      room.teacherId = me.uid\n    }\n\n    return {\n      usersMap,\n      room,\n      me\n    }\n  }\n\n  // getCourseState\n  // 获取房间状态\n  async getCourseState(roomId: string): Promise<Partial<ClassState>> {\n    const {data} = await this.getRoomInfoBy(roomId)\n    const {users, room} = data\n\n    const result: Partial<ClassState> = {\n      roomName: room.roomName,\n      roomId: room.roomId,\n      courseState: room.courseState,\n      roomType: room.type,\n      muteChat: room.muteAllChat,\n      recordId: room.recordId,\n      recordingTime: room.recordingTime,\n      isRecording: Boolean(room.isRecording),\n      boardId: room.boardId,\n      boardToken: room.boardToken,\n      lockBoard: room.lockBoard,\n      memberCount: room.onlineUsers,\n    }\n\n    const teacher = users.find((it: any) => it.role === 1)\n    if (teacher) {\n      result.teacherId = teacher.uid\n      result.screenId = teacher.screenId\n      result.screenToken = teacher.screenToken\n    }\n\n    return result\n  }\n\n  // login 登录教室\n  async Login(params: EntryParams) {\n    if (!this.appID) throw `appId is empty: ${this.appID}`\n    let {data: {roomId, userToken}} = await this.entry(params)\n\n    const {data: {room, user, users: userList = []}} = await this.getRoomInfoBy(roomId)\n\n    const me = user\n\n    const teacherState = userList.find((user: any) => +user.role === 1)\n\n    const course: any = {\n      rid: room.channelName,\n      roomName: room.roomName,\n      channelName: room.channelName,\n      roomId: room.roomId,\n      roomType: room.type,\n      courseState: room.courseState,\n      muteAllChat: room.muteAllChat,\n      isRecording: room.isRecording,\n      recordId: room.recordId,\n      recordingTime: room.recordingTime,\n      boardId: room.boardId,\n      boardToken: room.boardToken,\n      lockBoard: room.lockBoard,\n      teacherId: 0\n    }\n\n    if (teacherState) {\n      course.teacherId = +teacherState.uid\n    }\n\n    if (me.role === 1) {\n      course.teacherId = me.uid\n    }\n\n    if (params.userUuid) {\n      me.uuid = params.userUuid\n    }\n\n    const coVideoUids = userList.map((it: any) => `${it.uid}`)\n\n    if (course.teacherId && coVideoUids.length) {\n      course.coVideoUids = coVideoUids.filter((uid: any) => `${uid}` !== `${course.teacherId}`)\n    }\n\n    const result = {\n      course,\n      me,\n      users: userList,\n      appID: this.appID,\n      onlineUsers: room.onlineUsers,\n    }\n\n    return result\n  }\n\n  async fetchRoomBy(roomId: string) {\n    if (!this.appID) throw `appId is empty: ${this.appID}`\n    this.roomId = roomId;\n    const {data: {room, user, users: userList = []}} = await this.getRoomInfoBy(roomId)\n\n    const me = user\n\n    const teacherState = userList.find((user: any) => +user.role === 1)\n\n    const course: any = {\n      rid: room.channelName,\n      roomName: room.roomName,\n      channelName: room.channelName,\n      roomId: room.roomId,\n      roomType: room.type,\n      courseState: room.courseState,\n      muteAllChat: room.muteAllChat,\n      isRecording: room.isRecording,\n      recordId: room.recordId,\n      recordingTime: room.recordingTime,\n      boardId: room.boardId,\n      boardToken: room.boardToken,\n      lockBoard: room.lockBoard,\n      teacherId: 0\n    }\n\n    if (teacherState) {\n      course.teacherId = +teacherState.uid\n    }\n\n    if (me.role === 1) {\n      course.teacherId = me.uid\n    }\n\n    const coVideoUids = userList.map((it: any) => `${it.uid}`)\n\n    if (course.teacherId && coVideoUids.length) {\n      course.coVideoUids = coVideoUids.filter((uid: any) => `${uid}` !== `${course.teacherId}`)\n    }\n\n    const result = {\n      course,\n      me,\n      users: userList,\n      appID: this.appID,\n      onlineUsers: room.onlineUsers,\n    }\n\n    return result;\n  }\n\n  async getCourseRecordBy(recordId: string, roomId: string, token: string) {\n    this.userToken = token\n    let data = await AgoraFetchJson({\n      url: `/v1/apps/${this.appID}/room/${roomId}/record/${recordId}`,\n      method: 'GET',\n      token: this.userToken,\n    });\n\n    const boardData = await this.getWhiteboardBy(roomId);\n    const teacherRecord = get(data, 'recordDetails', []).find((it:any) => it.role === 1)\n\n    const recordStatus = [\n      'recording',\n      'finished',\n      'finished_recording_to_be_download',\n      'finished_download_to_be_convert',\n      'finished_convert_to_be_upload'\n    ]\n\n    const result = {\n      boardId: boardData.boardId,\n      boardToken: boardData.boardToken,\n      startTime: data.startTime,\n      endTime: data.endTime,\n      url: teacherRecord?.url,\n      status: data.status,\n      statusText: recordStatus[data.status],\n    }\n    return result\n  }\n\n  async exitRoom(roomId: string) {\n    let data = await AgoraFetchJson({\n      url: `/v1/apps/${this.appID}/room/${roomId}/exit`,\n      method: 'POST',\n      token: this.userToken,\n      data: {\n        appId: this.appID,\n        roomId: roomId\n      }\n    })\n    return\n  }\n\n  // NOTE: student send apply\n  // NOTE: 学生发起连麦申请\n  async studentSendApply(roomId: string) {\n    let data = await AgoraFetchJson({\n      url: `/v1/apps/${this.appID}/room/${roomId}/covideo`,\n      method: 'POST',\n      token: this.userToken,\n      data: {\n        type: 1\n      }\n    })\n    return data;\n  }\n\n  // NOTE: student stop apply\n  // NOTE: 学生主动取消连麦申请\n  async studentStopCoVideo(roomId: string) {\n    let data = await AgoraFetchJson({\n      url: `/v1/apps/${this.appID}/room/${roomId}/covideo`,\n      method: 'POST',\n      token: this.userToken,\n      data: {\n        type: 6,\n      }\n    })\n    return data;\n  }\n\n  // NOTE: teacher accept apply\n  // NOTE: 教师同意学生申请\n  async teacherAcceptApply(roomId: string, userId: string) {\n    let data = await AgoraFetchJson({\n      url: `/v1/apps/${this.appID}/room/${roomId}/covideo`,\n      method: 'POST',\n      token: this.userToken,\n      data: {\n        type: 4,\n        userIds: [userId]\n      }\n    })\n    return data;\n  }\n\n  // NOTE: teacher reject apply\n  // NOTE: 教师拒绝学生连麦\n  async teacherRejectApply(roomId: string, userId: string) {\n    let data = await AgoraFetchJson({\n      url: `/v1/apps/${this.appID}/room/${roomId}/covideo`,\n      method: 'POST',\n      token: this.userToken,\n      data: {\n        type: 2,\n        userIds: [userId]\n      }\n    })\n    return data;\n  }\n\n  // NOTE: teacher cancel apply\n  // NOTE: 教师取消学生连麦\n  async teacherCancelStudent(roomId: string, userId: string) {\n    let data = await AgoraFetchJson({\n      url: `/v1/apps/${this.appID}/room/${roomId}/covideo`,\n      method: 'POST',\n      token: this.userToken,\n      data: {\n        type: 5,\n        userIds: [userId]\n      }\n    })\n    return data;\n  }\n\n  // NOTE: send channel message\n  // NOTE: 发送聊天消息\n  async sendChannelMessage(payload: any) {\n    let data = await AgoraFetchJson({\n      url: `/v1/apps/${this.appID}/room/${payload.roomId}/chat`,\n      method: 'POST',\n      token: this.userToken,\n      data: {\n        message: payload.message,\n        type: payload.type\n      }\n    })\n\n    return data;\n  }\n\n  async startScreenShare(roomId: string) {\n    let data = await AgoraFetchJson({\n      url: `/v1/apps/${this.appID}/room/${roomId}/screen`,\n      method: 'POST',\n      token: this.userToken,\n      data: {\n        state: 1\n      }\n    })\n    return data;\n  }\n}\n\nexport const eduApi = new AgoraEduApi();\n\nexport const fetchI18n = async () => {\n  await AgoraEduApi.fetchI18n();\n}\n","import { platform } from './../utils/platform';\nimport { AgoraElectronClient } from './../utils/agora-electron-client';\nimport { ChatMessage, AgoraStream } from '../utils/types';\nimport { Subject } from 'rxjs';\nimport { Map, Set, List } from 'immutable';\nimport AgoraRTMClient, { RoomMessage, CoVideoType } from '../utils/agora-rtm-client';\nimport { globalStore } from './global';\nimport AgoraWebClient from '../utils/agora-rtc-client';\nimport { get, set } from 'lodash';\nimport { isElectron } from '../utils/platform';\nimport GlobalStorage from '../utils/custom-storage';\nimport { t } from '../i18n';\nimport { eduApi, UserAttrsParams } from '../services/edu-api';\n\nexport interface NotifyFlag {\n  broad: boolean\n}\n\nexport type LocalAttrs = Partial<AgoraUser & ClassState & {rawAccounts: any[]} & {broad: boolean}>;\n\nexport interface AgoraUser {\n  uid: string\n  account: string\n  role: number\n  video: number\n  audio: number\n  chat: number\n  grantBoard: number\n  userId: string // 仅用于服务端\n  screenId: string //仅用于屏幕共享\n}\n\nexport interface Me extends AgoraUser {\n  rtmToken: string\n  rtcToken: string\n  channelName: string\n  screenToken?: string\n  appID: string\n  coVideo: number\n  uuid: string\n}\n\nexport interface ClassState {\n  rid: string\n  roomName: string\n  teacherId: string\n  boardId: string // whiteboard_uuid\n  boardToken: string // whiteboard_token\n  // edu roomId\n  // 房间id\n  roomId: string\n\n  // edu roomType\n  // 房间类型\n  roomType: number\n\n  // lock board\n  // 锁定\n  lockBoard: number // lock_board\n\n  // start class\n  // 开始上课\n  courseState: number\n  // mute all chat\n  // 全员禁言\n  muteChat: number\n  // recording \n  recordId: string\n  recordingTime: number\n  isRecording: boolean\n  screenId: string\n  screenToken: string\n  coVideoUids: string[]\n  memberCount: number\n}\n\ntype RtcState = {\n  published: boolean\n  joined: boolean\n  users: Set<number>\n  shared: boolean\n  localStream: AgoraMediaStream | null\n  localSharedStream: AgoraMediaStream | null\n  remoteStreams: Map<string, AgoraMediaStream>\n}\n\nexport type MediaDeviceState = {\n  microphoneId: string\n  speakerId: string\n  cameraId: string\n  speakerVolume: number\n  camera: number\n  microphone: number\n  speaker: number\n}\n\nexport type SessionInfo = {\n  uid: string\n  rid: string\n  account: string\n  roomName: string\n  roomType: number\n  role: string\n}\n\nexport type RtmState = {\n  joined: boolean\n}\n\nexport type UserParams = {\n  userId: string,\n  account: string,\n}\n\nexport type RoomState = {\n  rtmLock: boolean\n  rtmToken: string\n  recordLock: boolean\n  rtcToken: string\n  appID: string\n  me: Me\n  users: Map<string, AgoraUser>\n  course: ClassState\n  applyUser: UserParams\n  rtc: RtcState\n  rtm: RtmState\n  mediaDevice: MediaDeviceState\n  messages: List<ChatMessage>\n  language: string\n}\n\nexport type AgoraMediaStream = {\n  streamID: number\n  stream?: any\n}\n\nexport class RoomStore {\n  private subject: Subject<RoomState> | null;\n  public _state: RoomState;\n\n  get state() {\n    return this._state;\n  }\n\n  set state(newState) {\n    this._state = newState;\n  }\n  public readonly defaultState: RoomState = Object.freeze({\n    rtmLock: false,\n    rtcToken: '',\n    rtmToken: '',\n    appID: '',\n    recordLock: false,\n    me: {\n      account: \"\",\n      uid: \"\",\n      roomToken: \"\",\n      role: 0,\n      video: 1,\n      audio: 1,\n      chat: 1,\n      grantBoard: 0,\n      rtmToken: '',\n      rtcToken: '',\n      appID: '',\n      coVideo: '',\n    },\n    users: Map<string, AgoraUser>(),\n    applyUser: {\n      userId: '',\n      account: '',\n    },\n    rtm: {\n      joined: false,\n    },\n    rtc: {\n      published: false,\n      joined: false,\n      shared: false,\n      users: Set<number>(),\n      localStream: null,\n      localSharedStream: null,\n      remoteStreams: Map<string, AgoraMediaStream>(),\n    },\n    course: {\n      teacherId: '',\n      boardId: '',\n      boardToken: '',\n      courseState: 0,\n      muteChat: 0,\n      isRecording: false,\n      recordId: '',\n      recordingTime: 0,\n      rid: '',\n      roomName: '',\n      roomType: 0,\n      lockBoard: 0,\n      roomId: '',\n      screenId: '',\n      screenToken: '',\n\n    },\n    mediaDevice: {\n      microphoneId: '',\n      speakerId: '',\n      cameraId: '',\n      speakerVolume: 100,\n      camera: 0,\n      speaker: 0,\n      microphone: 0\n    },\n    messages: List<ChatMessage>(),\n    language: navigator.language,\n    ...GlobalStorage.read('agora_room')\n  });\n\n  public windowId: number = 0;\n\n  // public rtmClient: AgoraRTMClient = new AgoraRTMClient();\n  // public rtcClient: AgoraWebClient | AgoraElectronClient = isElectron ? new AgoraElectronClient() : new AgoraWebClient();\n\n  public rtmClient: AgoraRTMClient;\n  public rtcClient: AgoraWebClient | AgoraElectronClient;\n\n  constructor() {\n    this.subject = null;\n    this._state = {\n      ...this.defaultState\n    };\n    this.rtmClient = new AgoraRTMClient();\n    this.rtcClient = isElectron ? new AgoraElectronClient ({roomStore: this}) : new AgoraWebClient({roomStore: this});\n  }\n\n  initialize() {\n    this.subject = new Subject<RoomState>();\n    this.state = {\n      ...this.defaultState,\n    }\n    this.subject.next(this.state);\n  }\n\n  subscribe(updateState: any) {\n    this.initialize();\n    this.subject && this.subject.subscribe(updateState);\n  }\n\n  unsubscribe() {\n    this.subject && this.subject.unsubscribe();\n    this.subject = null;\n  }\n\n  commit(state: RoomState) {\n    this.subject && this.subject.next(state);\n  }\n\n  updateState(rootState: RoomState) {\n    this.state = {\n      ...this.state,\n      ...rootState,\n    }\n    this.commit(this.state);\n  }\n\n  isTeacher(peerId: string) {\n    if (!`${peerId}`\n      || !`${this.state.course.teacherId}`\n      || `${this.state.course.teacherId}` !== `${peerId}`\n    ) return false;\n    return true;\n  }\n\n  isStudent(peerId: string) {\n    if (!`${peerId}`\n      || `${this.state.course.teacherId}` === `${peerId}`\n    ) return false;\n\n    return true;\n  }\n\n  async fetchCurrentRoom() {\n    try {\n      const res = await eduApi.fetchRoomBy(roomStore.state.course.roomId);\n      const {\n        course,\n        me,\n        users: rawUsers,\n        appID,\n        onlineUsers\n      } = res\n\n      let users = rawUsers.reduce((acc: Map<string, AgoraUser>, it: any) => {\n        return acc.set(`${it.uid}`, {\n          role: it.role,\n          account: it.userName,\n          uid: it.uid,\n          video: it.enableVideo,\n          audio: it.enableAudio,\n          chat: it.enableChat,\n          grantBoard: it.grantBoard,\n          userId: it.userId,\n          screenId: it.screenId,\n        });\n      }, Map<string, AgoraUser>());\n\n      await this.rtmClient.login(appID, `${me.uid}`, me.rtmToken)\n      await this.rtmClient.join(course.rid)\n      this.state = {\n        ...this.state,\n        rtm: {\n          ...this.state.rtm,\n          joined: true,\n        },\n        course: {\n          ...this.state.course,\n          rid: course.channelName,\n          roomType: course.roomType,\n          roomId: course.roomId,\n          roomName: course.roomName,\n          courseState: course.courseState,\n          muteChat: course.muteAllChat,\n          recordId: `${course.recordId}`,\n          isRecording: course.isRecording,\n          recordingTime: course.recordingTime,\n          lockBoard: course.lockBoard,\n          boardId: `${course.boardId}`,\n          boardToken: `${course.boardToken}`,\n          teacherId: `${course.teacherId}`,\n          screenId: `${me.screenId}`,\n          screenToken: `${me.screenToken}`,\n          coVideoUids: course.coVideoUids,\n          memberCount: +onlineUsers,\n        },\n        me: {\n          ...this.state.me,\n          uid: me.uid,\n          account: me.userName,\n          rtmToken: me.rtmToken,\n          rtcToken: me.rtcToken,\n          channelName: me.channelName,\n          screenId: me.screenId,\n          screenToken: me.screenToken,\n          appID: me.appID,\n          role: me.role,\n          chat: me.enableChat,\n          video: me.enableVideo,\n          audio: me.enableAudio,\n          userId: me.userId,\n          coVideo: me.coVideo,\n        },\n        users,\n        appID,\n      }\n      this.commit(this.state)\n    } catch(err) {\n      if (this.rtmClient._logged) {\n        await this.rtmClient.logout();\n      }\n      throw err;\n    }\n  }\n\n  addLocalStream(stream: AgoraStream) {\n    this.state = {\n      ...this.state,\n      rtc: {\n        ...this.state.rtc,\n        localStream: stream\n      }\n    }\n    this.commit(this.state);\n  }\n\n  removeLocalStream() {\n    this.state = {\n      ...this.state,\n      rtc: {\n        ...this.state.rtc,\n        localStream: null,\n        localSharedStream: null\n      }\n    }\n    this.commit(this.state);\n  }\n\n  addLocalSharedStream(stream: any) {\n    this.state = {\n      ...this.state,\n      rtc: {\n        ...this.state.rtc,\n        localSharedStream: stream\n      }\n    }\n    this.commit(this.state);\n  }\n\n  removeLocalSharedStream() {\n    this.state = {\n      ...this.state,\n      rtc: {\n        ...this.state.rtc,\n        localSharedStream: null\n      }\n    }\n    this.commit(this.state);\n  }\n\n  addRTCUser(uid: number) {\n    this.state = {\n      ...this.state,\n      rtc: {\n        ...this.state.rtc,\n        users: this.state.rtc.users.add(uid),\n      }\n    }\n    this.commit(this.state);\n  }\n\n  removePeerUser(uid: number) {\n    this.state = {\n      ...this.state,\n      rtc: {\n        ...this.state.rtc,\n        users: this.state.rtc.users.delete(uid),\n      }\n    }\n    this.commit(this.state);\n  }\n\n  addRemoteStream(stream: AgoraStream) {\n    this.state = {\n      ...this.state,\n      rtc: {\n        ...this.state.rtc,\n        remoteStreams: this.state.rtc.remoteStreams.set(`${stream.streamID}`, stream)\n      }\n    }\n    this.commit(this.state);\n  }\n\n  removeRemoteStream(uid: number) {\n    const remoteStream = this.state.rtc.remoteStreams.get(`${uid}`);\n    if (platform === 'web') {\n      if (remoteStream && remoteStream.stream && remoteStream.stream.isPlaying) {\n        remoteStream.stream.isPlaying() && remoteStream.stream.stop();\n      }\n    }\n\n    this.state = {\n      ...this.state,\n      rtc: {\n        ...this.state.rtc,\n        remoteStreams: this.state.rtc.remoteStreams.delete(`${uid}`)\n      }\n    }\n    this.commit(this.state);\n  }\n\n  updateRtc(newState: any) {\n    this.state = {\n      ...this.state,\n      rtc: {\n        ...this.state.rtc,\n        ...newState,\n      }\n    }\n    this.commit(this.state);\n  }\n\n  updateDevice(state: MediaDeviceState) {\n    this.state = {\n      ...this.state,\n      mediaDevice: state\n    }\n    this.commit(this.state);\n  }\n\n  async sendChannelMessage(args: any) {\n    await eduApi.sendChannelMessage({\n      roomId: this.state.course.roomId,\n      message: args.message,\n      type: 1,\n    })\n  }\n\n  async handlePeerMessage(body: any, peerId: string) {\n    const {cmd, data: {userName, userId, type}} = body\n    if (cmd !== 1) return\n\n    // student follow teacher peer message\n    // 当对端是老师的时候\n    // if (!this.isTeacher(myUid) && this.isTeacher(peerId)) {\n    switch (type) {\n      case CoVideoType.teacherSendReject: {\n        globalStore.showToast({\n          type: 'co-video',\n          message: t(\"toast.teacher_reject_co_video\")\n        });\n        return;\n      }\n      case CoVideoType.studentSendApply: {\n        if (globalStore.state.notice.reason === 'peer_hands_up'\n          && this.state.applyUser.userId) {\n          // when notice is peer_hands_up, ignore peer message\n          // 当已经收到消息以后屏蔽这条\"举手申请\"\n          console.warn(`ignore: `, peerId, userId, type, userName)\n          return\n        }\n        const applyUserId = userId\n\n        if (applyUserId && peerId) {\n          this.updateApplyUser({\n            account: `${userName}`,\n            userId: `${applyUserId}`,\n          });\n          globalStore.showNotice({\n            reason: 'peer_hands_up',\n            text: t('notice.student_interactive_apply', { reason: `${userName}` })\n          });\n          globalStore.showToast({\n            type: 'peer_hands_up', \n            message: t('toast.student_send_co_video_apply', { reason: `${userName}` })\n          });\n          return\n        }\n      }\n      case CoVideoType.teacherSendAccept: {\n        globalStore.showToast({\n          type: 'peer_hands_up',\n          message: t('toast.teacher_accept_co_video', { reason: `${userName}` }),\n        });\n        return;\n      }\n      case CoVideoType.teacherSendStop: {\n        globalStore.showToast({\n          type: 'peer_hands_up',\n          message: t('toast.stop_co_video', { reason: `${userName}` }),\n        });\n        return;\n      }\n    }\n  }\n\n  async mute(uid: string, type: string) {\n    const me = this.state.me;\n    if (`${me.uid}` === `${uid}`) {\n      if (type === 'audio') {\n        await this.updateLocalMe({\n          audio: 0,\n          broad: true\n        });\n      }\n      if (type === 'video') {\n        await this.updateLocalMe({\n          video: 0,\n          broad: true\n        });\n      }\n      if (type === 'chat') {\n        await this.updateLocalMe({\n          chat: 0,\n          broad: true\n        });\n      }\n      // if (type === 'grantBoard') {\n      //   await this.updateLocal({\n      //     grantBoard: 0\n      //   });\n      // }\n    }\n    else if (me.role === 1) {\n      if (type === 'audio') {\n        await this.updateUserBy(`${uid}`, {audio: 0});\n      }\n      if (type === 'video') {\n        await this.updateUserBy(`${uid}`, {video: 0});\n      }\n      if (type === 'chat') {\n        await this.updateUserBy(`${uid}`, {chat: 0});\n      }\n      if (type === 'grantBoard') {\n        await this.updateUserBy(`${uid}`, {grantBoard: 0});\n      }\n    }\n  }\n\n  async unmute(uid: string, type: string) {\n    const me = this.state.me;\n    if (`${me.uid}` === `${uid}`) {\n      if (type === 'audio') {\n        await this.updateLocalMe({\n          audio: 1,\n          broad: true\n        });\n      }\n      if (type === 'video') {\n        await this.updateLocalMe({\n          video: 1,\n          broad: true\n        });\n      }\n      if (type === 'chat') {\n        await this.updateLocalMe({\n          chat: 1,\n          broad: true\n        });\n      }\n      // if (type === 'grantBoard') {\n      //   await this.updateLocal({\n      //     grantBoard: 1\n      //   });\n      // }\n    }\n    else if (me.role === 1) {\n      if (type === 'audio') {\n        await this.updateUserBy(`${uid}`, {audio: 1});\n      }\n      if (type === 'video') {\n        await this.updateUserBy(`${uid}`, {video: 1});\n      }\n      if (type === 'chat') {\n        await this.updateUserBy(`${uid}`, {chat: 1});\n      }\n      if (type === 'grantBoard') {\n        await this.updateUserBy(`${uid}`, {grantBoard: 1});\n      }\n    }\n  }\n\n  async LoginToRoom(payload: any, pass: boolean = false) {\n    const {userName, roomName, role, type, uuid} = payload\n    try {\n      const res = await eduApi.Login({\n        userName,\n        roomName,\n        role,\n        type,\n        roomUuid: roomName,\n        userUuid: uuid\n      })\n\n      const {\n        course,\n        me,\n        users: rawUsers,\n        appID,\n        onlineUsers\n      } = res\n\n      let users = rawUsers.reduce((acc: Map<string, AgoraUser>, it: any) => {\n        return acc.set(`${it.uid}`, {\n          role: it.role,\n          account: it.userName,\n          uid: it.uid,\n          video: it.enableVideo,\n          audio: it.enableAudio,\n          chat: it.enableChat,\n          grantBoard: it.grantBoard,\n          userId: it.userId,\n          // coVideo: 1,\n          screenId: it.screenId,\n        });\n      }, Map<string, AgoraUser>());\n\n      await this.rtmClient.login(appID, `${me.uid}`, me.rtmToken)\n      await this.rtmClient.join(course.rid)\n      this.state = {\n        ...this.state,\n        rtm: {\n          ...this.state.rtm,\n          joined: true,\n        },\n        course: {\n          ...this.state.course,\n          rid: course.channelName,\n          roomType: course.roomType,\n          roomId: course.roomId,\n          roomName: course.roomName,\n          courseState: course.courseState,\n          muteChat: course.muteAllChat,\n          recordId: `${course.recordId}`,\n          isRecording: course.isRecording,\n          recordingTime: course.recordingTime,\n          lockBoard: course.lockBoard,\n          boardId: `${course.boardId}`,\n          boardToken: `${course.boardToken}`,\n          teacherId: `${course.teacherId}`,\n          screenId: `${me.screenId}`,\n          screenToken: `${me.screenToken}`,\n          coVideoUids: course.coVideoUids,\n          memberCount: +onlineUsers,\n        },\n        me: {\n          ...this.state.me,\n          uid: me.uid,\n          account: me.userName,\n          rtmToken: me.rtmToken,\n          rtcToken: me.rtcToken,\n          channelName: me.channelName,\n          screenId: me.screenId,\n          screenToken: me.screenToken,\n          appID: me.appID,\n          role: me.role,\n          chat: me.enableChat,\n          video: me.enableVideo,\n          audio: me.enableAudio,\n          userId: me.userId,\n          coVideo: me.coVideo,\n        },\n        users,\n        appID,\n      }\n      this.commit(this.state)\n    } catch(err) {\n      if (this.rtmClient._logged) {\n        await this.rtmClient.logout();\n      }\n      throw err;\n    }\n  }\n\n  setRTCJoined(joined: boolean) {\n    this.state = {\n      ...this.state,\n      rtc: {\n        ...this.state.rtc,\n        joined\n      }\n    }\n    this.commit(this.state);\n  }\n\n  updateChannelMessage(msg: ChatMessage) {\n    this.state = {\n      ...this.state,\n      messages: this.state.messages.push(msg)\n    };\n\n    this.commit(this.state);\n  }\n\n  private compositeMe(params: Partial<Me>): Me {\n    console.log(\"compositeMe: \", params);\n    const newMe: Me = { ...this.state.me };\n    for (const prop in params) {\n      if (newMe.hasOwnProperty(prop) && params.hasOwnProperty(prop)) {\n        set(newMe, prop, get(params, prop, ''));\n      }\n    }\n    return newMe;\n  }\n\n  private compositeCourse(params: Partial<ClassState>): ClassState {\n    console.log(\"compositeCourse: \", params);\n    const newCourse = { ...this.state.course };\n    for (const prop in params) {\n      if (newCourse.hasOwnProperty(prop) && params.hasOwnProperty(prop)) {\n        set(newCourse, prop, get(params, prop, ''));\n      }\n    }\n    return newCourse;\n  }\n\n  async fetchCourse() {\n    let course = await eduApi.getCourseState(this.state.course.roomId)\n    return await this.updateCourse({...course, broad: false})\n  }\n\n  async fetchRoomState() {\n    let {usersMap, room, me} = await eduApi.getRoomState(this.state.course.roomId)\n    return await this.updateRoomState({usersMap, room, me, broad: false})\n  }\n\n  async updateRoomState(params: {usersMap: Map<string, AgoraUser>, room: Partial<ClassState>, me: Partial<Me>} & NotifyFlag) {\n    const {usersMap, room, me} = params\n\n    const teacherId = room.teacherId as string\n\n    let coVideoUids = this.state.course.coVideoUids\n\n    if (usersMap.count()) {\n      const ids: any[] = []\n      const usersJson = usersMap.toJSON()\n      for (let key of Object.keys(usersJson)) {\n        ids.push(`${key}`)\n      }\n      coVideoUids = ids.filter((id: string) => `${id}` !== `${teacherId}`)\n    }\n\n    const newMe = me\n\n    this.state = {\n      ...this.state,\n      course: {\n        ...this.state.course,\n        ...room,\n        coVideoUids,\n      },\n      me: {\n        ...this.state.me,\n        ...newMe\n      },\n      users: usersMap,\n    }\n    this.commit(this.state)\n  }\n\n  async updateLocalMe(params: Partial<Me & NotifyFlag>) {\n    const {broad, ...meParams} = params\n    const newMe = this.compositeMe(meParams)\n\n    const newMeAttrs = {\n      uid: newMe.uid,\n      account: newMe.account,\n      role: newMe.role,\n      video: newMe.video,\n      audio: newMe.audio,\n      chat: newMe.chat,\n      grantBoard: newMe.grantBoard,\n      coVideo: newMe.coVideo,\n      userId: newMe.userId,\n      screenId: newMe.screenId,\n    }\n\n    const userAttrsParams: UserAttrsParams = {\n      userId: newMeAttrs.userId as string,\n      enableChat: newMeAttrs.chat as number,\n      enableAudio: newMeAttrs.audio as number,\n      enableVideo: newMeAttrs.video as number,\n      grantBoard: newMeAttrs.grantBoard as number,\n      // coVideo: newMeAttrs.coVideo as number\n    }\n\n    if (broad) {\n      await this.updateRoomUser({user: userAttrsParams})\n    }\n\n    this.state = {\n      ...this.state,\n      me: {\n        ...this.state.me,\n        ...newMeAttrs,\n      },\n      users: this.state.users.set(`${this.state.me.uid}`, newMeAttrs)\n    }\n    this.commit(this.state)\n  }\n\n  async updateRoomUser({user}: {user: UserAttrsParams}) {\n    return await eduApi.updateRoomUser(user)\n  }\n\n  updateApplyUser(user: any) {\n    this.state = {\n      ...this.state,\n      applyUser: user\n    }\n    this.commit(this.state)\n  }\n\n  async updateUserBy(uid: string, params: Partial<AgoraUser & NotifyFlag>) {\n    const {broad = true, ...userParams} = params\n    const prevUser = this.state.users.get(`${uid}`)\n    \n    const newUserAttrs: Partial<AgoraUser> = {\n      ...prevUser,\n    }\n\n    const userKeys = Object.keys(userParams)\n\n    for (let key of userKeys) {\n      if (newUserAttrs.hasOwnProperty(key)\n        && userParams.hasOwnProperty(key)) {\n        set(newUserAttrs, key, get(userParams, key))\n      }\n    }\n\n    const userAttrsParams: UserAttrsParams = {\n      userId: newUserAttrs.userId as string,\n      enableChat: newUserAttrs.chat as number,\n      enableAudio: newUserAttrs.audio as number,\n      enableVideo: newUserAttrs.video as number,\n      grantBoard: newUserAttrs.grantBoard as number,\n      // coVideo: newUserAttrs.coVideo as number\n    }\n\n    if (broad) {\n      await this.updateRoomUser({user: userAttrsParams})\n    }\n\n    this.state = {\n      ...this.state,\n      users: this.state.users.set(`${uid}`, newUserAttrs as AgoraUser)\n    }\n    this.commit(this.state)\n  }\n\n  resolveCourseAttrsToOperate(params: Partial<ClassState>): any {\n    const keys = ['lockBoard', 'courseState', 'muteChat']\n    for (let key of keys) {\n      if (params.hasOwnProperty(key)) {\n        let value = -1\n        let stateValue = get(params, key, 0)\n        let stateKey = key;\n        if (key === 'lockBoard') {\n          value = stateValue ? RoomMessage.lockBoard : RoomMessage.unlockBoard\n        } else if (key === 'courseState') {\n          value = stateValue ? RoomMessage.startCourse : RoomMessage.endCourse\n        } else if (key === 'muteChat') {\n          value = stateValue ? RoomMessage.muteAllChat : RoomMessage.unmuteAllChat\n          stateKey = 'muteAllChat'\n        }\n        return {\n          key: stateKey,\n          stateValue,\n          value\n        }\n      }\n    }\n  }\n\n  async updateCourse(params: Partial<ClassState & NotifyFlag>) {\n    const {broad = true, ...courseParams} = params\n\n    const {key, stateValue}: any = this.resolveCourseAttrsToOperate(courseParams)\n\n    if (broad) {\n      await eduApi.updateCourse({\n        room: {\n          [`${key}`]: stateValue\n        }\n      })\n      this.state = {\n        ...this.state,\n        course: {\n          ...this.state.course,\n          ...courseParams\n        }\n      }\n      this.commit(this.state)\n      return\n    }\n    this.state = {\n      ...this.state,\n      course: {\n        ...this.state.course,\n        ...courseParams\n      }\n    }\n    this.commit(this.state)\n  }\n\n  async updateLocal(params: LocalAttrs) {\n    const newMe = this.compositeMe(params)\n    const newCourse = this.compositeCourse(params)\n    const users = this.state.users\n\n    this.state = {\n      ...this.state,\n      me: {\n        ...newMe,\n      },\n      users,\n      course: {\n        ...newCourse,\n      }\n    }\n    this.commit(this.state)\n  }\n\n  async exitRoom() {\n    return await eduApi.exitRoom(this.state.course.roomId)\n  }\n\n  async exitAll() {\n    try {\n      try {\n        await this.rtmClient.exit();\n      } catch (err) {\n        console.warn(err);\n      }\n      try {\n        await this.rtcClient.exit();\n      } catch (err) {\n        console.warn(err);\n      }\n    } finally {\n      GlobalStorage.clear('agora_room');\n      this.state = {\n        ...this.defaultState\n      }\n      this.commit(this.state);\n    }\n  }\n\n  async startWebScreenShare() {\n    const webClient = this.rtcClient as AgoraWebClient\n    try {\n      const {screenToken} = await eduApi.refreshToken();\n      const {screenId, rid} = this.state.course\n      const appId = this.state.appID\n      await webClient.startScreenShare({\n        uid: +screenId,\n        token: screenToken,\n        channel: rid,\n        appId\n      })\n      // add screen client listener\n      // 监听屏幕共享主要的事件\n      webClient.shareClient.on('onTokenPrivilegeWillExpire', (evt: any) => {\n        // WARN: IF YOU ENABLED APP CERTIFICATE, PLEASE SIGN YOUR TOKEN IN YOUR SERVER SIDE AND OBTAIN IT FROM YOUR OWN TRUSTED SERVER API\n        const newToken = '';\n        webClient.shareClient.renewToken(newToken);\n      });\n      webClient.shareClient.on('onTokenPrivilegeDidExpire', (evt: any) => {\n        // WARN: IF YOU ENABLED APP CERTIFICATE, PLEASE SIGN YOUR TOKEN IN YOUR SERVER SIDE AND OBTAIN IT FROM YOUR OWN TRUSTED SERVER API\n        const newToken = '';\n        webClient.shareClient.renewToken(newToken);\n      });\n      webClient.shareClient.on('stopScreenSharing', (evt: any) => {\n        console.log('stop screen share', evt);\n        this.stopWebScreenShare().then(() => {\n          globalStore.showToast({\n            message: t('toast.canceled_screen_share'),\n            type: 'notice'\n          });\n        }).catch(console.warn).finally(() => {\n          console.log('[agora-web] stop share');\n        })\n      })\n    } catch(err) {\n      if (webClient.shareClient) {\n        webClient.shareClient.off('onTokenPrivilegeWillExpire', (evt: any) => {})\n        webClient.shareClient.off('onTokenPrivilegeDidExpire', (evt: any) => {})\n        webClient.shareClient.off('stopScreenSharing', (evt: any) => {})\n      }\n      if (err.type === 'error' && err.msg === 'NotAllowedError') {\n        globalStore.showToast({\n          message: t('toast.canceled_screen_share'),\n          type: 'notice'\n        });\n      }\n      if (err.type === 'error' && err.msg === 'PERMISSION_DENIED') {\n        globalStore.showToast({\n          message: t('toast.screen_sharing_failed', {reason: err.msg}),\n          type: 'notice'\n        });\n      }\n      throw err\n    }\n  }\n\n  async stopWebScreenShare() {\n    const webClient = this.rtcClient as AgoraWebClient\n    if (webClient.shared) {\n      await webClient.stopScreenShare()\n      this.removeLocalSharedStream();\n    }\n  }\n\n  // WARN: only work in electron environment\n  // 仅用于electron运行环境\n  async startNativeScreenShare() {\n    const rtcClient = this.rtcClient;\n    globalStore.setNativeWindowInfo({\n      visible: true,\n      items: (rtcClient as AgoraElectronClient).getScreenShareWindows()\n    })\n  }\n\n  async startScreenShare() {\n    if (platform === 'electron') {\n      await this.startNativeScreenShare()\n    }\n\n    if (platform === 'web') {\n      await this.startWebScreenShare()\n    }\n  }\n\n  async stopNativeScreenShare() {\n    const nativeClient = this.rtcClient as AgoraElectronClient;\n    await nativeClient.stopScreenShare();\n  }\n\n  async stopScreenShare() {\n    if (platform === 'web') {\n      await this.stopWebScreenShare()\n    }\n\n    if (platform === 'electron') {\n      await this.stopNativeScreenShare()\n    }\n  }\n\n  lockRecording() {\n    if (!this.state) return\n    this.state={\n      ...this.state,\n      recordLock: true\n    }\n    this.commit(this.state)\n  }\n\n  unlockRecording() {\n    if (!this.state) return\n    this.state={\n      ...this.state,\n      recordLock: false\n    }\n    this.commit(this.state)\n  }\n  async startRecording () {\n    this.lockRecording()\n    try {\n      const {data: recordId} = await eduApi.startRecording()\n      this.state = {\n        ...this.state,\n        course: {\n          ...this.state.course,\n          recordId,\n          isRecording: true\n        }\n      }\n      this.commit(this.state)\n    } catch(err) {\n      throw err;\n    } finally {\n      this.unlockRecording()\n    }\n  }\n\n  async stopRecording () {\n    this.lockRecording()\n    try {\n      await eduApi.stopRecording(this.state.course.recordId)\n      const roomId = this.state.course.roomId\n      const {data: roomInfo} = await eduApi.getRoomInfoBy(roomId)\n      const recordId = roomInfo.room.recordId\n      this.state = {\n        ...this.state,\n        course: {\n          ...this.state.course,\n          recordId: recordId,\n          isRecording: false\n        }\n      }\n      this.commit(this.state)\n    } catch(err) {\n      throw err\n    } finally {\n      this.unlockRecording()\n    }\n  }\n\n  updateCoVideoUsers(rawUsers: any) {\n    const coVideoUids: any[] = []\n    let users = rawUsers.reduce((acc: Map<string, AgoraUser>, it: any) => {\n      if (+it.role === 2) {\n        coVideoUids.push(+it.uid)\n      }\n      \n      return acc.set(`${it.uid}`, {\n        role: it.role,\n        account: it.userName,\n        uid: it.uid,\n        video: it.enableVideo,\n        audio: it.enableAudio,\n        chat: it.enableChat,\n        grantBoard: it.grantBoard,\n        userId: it.userId,\n        screenId: it.screenId,\n      });\n    }, Map<string, AgoraUser>());\n\n    let meState = this.state.me\n\n    let newMe = users.find((user: AgoraUser) => +this.state.me.uid === +user.uid)\n\n    if (newMe) {\n      meState = this.compositeMe({...newMe, coVideo: 1})\n    } else {\n      meState = {\n        ...meState,\n        coVideo: 0\n      }\n    }\n\n    let courseState: any = {\n      screenId: this.state.course.screenId,\n      teacherId: this.state.course.teacherId,\n    }\n\n    let newCourse = users.find((user: AgoraUser) => +user.role === 1)\n\n    if (newCourse) {\n      courseState.screenId = newCourse.screenId\n      courseState.teacherId = newCourse.uid\n    }\n\n    let applyUser = this.state.applyUser;\n    if (applyUser && applyUser.userId) {\n      const foundUser = users.find((user: AgoraUser) => user.userId === applyUser.userId)\n      if (!foundUser) {\n        applyUser = {\n          userId: '',\n          account: ''\n        }\n      }\n    }\n\n    this.state = {\n      ...this.state,\n      users: users,\n      me: {\n        ...this.state.me,\n        ...meState\n      },\n      course: {\n        ...this.state.course,\n        ...courseState,\n        coVideoUids,\n      },\n      applyUser\n    }\n    this.commit(this.state)\n  }\n\n  updateRoomInfo(data: any) {\n    this.state = {\n      ...this.state,\n      course: {\n        ...this.state.course,\n        lockBoard: data.lockBoard,\n        muteChat: data.muteAllChat,\n        courseState: data.courseState,\n      }\n    }\n    this.commit(this.state)\n  }\n\n  updateRoomMember(memberCount: number) {\n    this.state = {\n      ...this.state,\n      course: {\n        ...this.state.course,\n        memberCount\n      }\n    }\n    this.commit(this.state)\n  }\n\n  updateScreenShare(payload: any) {\n    this.state = {\n      ...this.state,\n      course: {\n        ...this.state.course,\n        screenId: payload.screenId,\n      }\n    }\n\n    this.commit(this.state)\n  }\n}\n\nexport const roomStore = new RoomStore();\n\n// TODO: Please remove it before release in production\n// 备注：请在正式发布时删除操作的window属性\n//@ts-ignore\nwindow.roomStore = roomStore;","import React from 'react'\nimport './index.scss';\n\nexport const GithubIcon: React.FC<{}> = (props) => {\n  return (\n    <a href=\"https://github.com/AgoraIO-Usecase/eEducation\" target=\"_blank\" rel=\"noopener noreferrer\" >\n    <span className=\"agora-github-pin\">\n    </span>\n    </a>\n  )\n}","import uuidv4 from 'uuid/v4';\n\nexport { RTMRestful } from './rtm-restful';\nexport { WhiteboardAPI } from './whiteboard-api';\nexport function genUUID (): string {\n  let uuid = localStorage.getItem('demo_edu_uuid');\n  if (uuid) {\n    return uuid;\n  }\n  uuid = uuidv4();\n  localStorage.setItem('demo_edu_uuid', uuid);\n  return uuid;\n}","import Dexie from 'dexie';\n\nconst db = new Dexie('webdemo_agora_edu');\n\ndb.version(1).stores({\n  logs: 'content'\n});\n\nexport default db;\n","import { isElectron } from './../platform';\nimport { roomStore } from './../../stores/room';\nimport { eduApi } from '../../services/edu-api';\nimport Dexie from 'dexie';\n// eslint-disable-next-line\nimport LogWorker from 'worker-loader!./log.worker';\nimport db from './db';\nimport UAParser from 'ua-parser-js';\nimport {get} from 'lodash';\n\nconst parser = new UAParser();\n\nconst userAgentInfo = parser.getResult();\n\nexport const isSafari = () => {\n  return (\n    userAgentInfo.browser.name === 'Safari' ||\n    userAgentInfo.browser.name === 'Mobile Safari'\n  );\n};\n\nexport const isChrome = () => {\n  return userAgentInfo.browser.name === 'Chrome';\n};\n\nexport const isFirefox = () => {\n  return userAgentInfo.browser.name === 'Firefox';\n};\n\nexport const isMobile = () => {\n  return userAgentInfo.device.type === 'mobile';\n};\n\n// const getUserAgent = () => {\n//   return isSafari()\n//     ? 'safari'\n//     : isChrome()\n//     ? 'chrome'\n//     : isFirefox()\n//     ? 'firefox'\n//     : navigator.userAgent;\n// };\n\nconst flat = (arr: any[]) => {\n  return arr.reduce((arr, elem) => arr.concat(elem), []);\n};\n\nexport default class Log {\n  static originConsole = window.console;\n\n  static thread = null;\n\n  static init() {\n    if (!this.thread) {\n      //@ts-ignore\n      this.thread = new LogWorker()\n      this.debugLog();\n    }\n  }\n\n  static debugLog() {\n    const thread = this.thread as any;\n    function proxy(context: any, method: any) {\n      return function() {\n        let args = [...arguments];\n        flat(args).join('');\n        thread.postMessage({\n          type: 'log',\n          data: JSON.stringify([flat(args).join('')])\n        });\n        method.apply(context, args);\n      };\n    }\n\n    Object.keys(console)\n      .filter(e => ['info', 'error', 'warn', 'log', 'debug'].indexOf(e) >= 0)\n      .forEach((method: any, _) => {\n        //@ts-ignore\n        console[method] = proxy(console, console[method]);\n      });\n    //@ts-ignore\n    window.console = console;\n  }\n\n  static async uploadElectronLog(roomId: any) {\n    //@ts-ignore\n    let file = await window.doGzip();\n    const res = await eduApi.uploadZipLogFile(\n      roomId,\n      file\n    )\n    return get(res, 'data.data', -1);\n  }\n\n  static async doUpload() {\n    const ids = [];\n    // Upload Electron log\n    if (isElectron) {\n      ids.push(await this.uploadElectronLog(roomStore.state.course.roomId))\n    }\n    // Web upload log\n    ids.push(await this.uploadLog(roomStore.state.course.roomId))\n    return ids.join(\"#\")\n  }\n\n  static async uploadLog(roomId: string) {\n    // let ua = getUserAgent();\n    //@ts-ignore\n    let logs = await db.logs.toArray();\n    const logsStr = logs\n      .reverse()\n      .map((e: any) => JSON.parse(e.content))\n      .map((e: any) => (Array.isArray(e) ? e[0] : e))\n      .join('\\n');\n\n    //@ts-ignore\n    window.logsStr = logsStr\n\n    const file = await new File([logsStr], `${+Date.now()}`)\n\n    //@ts-ignore\n    window.file = file\n\n    let res = await eduApi.uploadLogFile(\n      roomId,\n      file,\n    )\n    await db.delete();\n    if (!(await Dexie.exists(db.name))) {\n      db.version(1).stores({\n        logs: 'content'\n      });\n    }\n    await db.open();\n    console.log(\"res \", res)\n    return get(res, 'data.data', -1);\n  }\n}\n","import React, { useState, useEffect, useRef } from 'react';\nimport { Theme, FormControl, Tooltip } from '@material-ui/core';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Button from '../components/custom-button';\nimport RoleRadio from '../components/role-radio';\nimport Icon from '../components/icon';\nimport FormInput from '../components/form-input';\nimport FormSelect from '../components/form-select';\nimport LangSelect from '../components/lang-select';\nimport { isElectron } from '../utils/platform';\nimport { usePlatform } from '../containers/platform-container';\nimport {useHistory} from 'react-router-dom';\nimport { roomStore } from '../stores/room';\nimport {GithubIcon} from '../components/github-icon';\nimport { globalStore, roomTypes } from '../stores/global';\nimport { t } from '../i18n';\nimport GlobalStorage from '../utils/custom-storage';\nimport { genUUID } from '../utils/api';\nimport Log from '../utils/LogUploader';\n\nconst useStyles = makeStyles ((theme: Theme) => ({\n  formControl: {\n    minWidth: '240px',\n    maxWidth: '240px',\n  }\n}));\n\ntype SessionInfo = {\n  roomName: string\n  roomType: number\n  yourName: string\n  role: string\n}\n\nconst defaultState: SessionInfo = {\n  roomName: '',\n  roomType: 0,\n  role: '',\n  yourName: '',\n}\n\nfunction HomePage() {\n  document.title = t(`home.short_title.title`)\n\n  const classes = useStyles();\n\n  const history = useHistory();\n\n  const handleSetting = (evt: any) => {\n    history.push({pathname: `/device_test`});\n  }\n\n  const [lock, setLock] = useState<boolean>(false);\n\n  const handleUpload = (evt: any) => {\n    setLock(true)\n    Log.doUpload().then((resultCode: any) => {\n      globalStore.showDialog({\n        type: 'uploadLog',\n        message: t('toast.show_log_id', {reason: `${resultCode}`})\n      });\n    }).finally(() => {\n      setLock(false)\n    })\n  }\n\n  const {\n    HomeBtn\n  } = usePlatform();\n\n  const ref = useRef<boolean>(false);\n\n  useEffect(() => {\n    return () => {\n      ref.current = true;\n    }\n  }, []);\n\n  const [session, setSessionInfo] = useState<SessionInfo>(defaultState);\n\n  const [required, setRequired] = useState<any>({} as any);\n\n  const handleSubmit = () => {\n    if (!session.roomName) {\n      setRequired({...required, roomName: t('home.missing_room_name')});\n      return;\n    }\n\n    if (!session.yourName) {\n      setRequired({...required, yourName: t('home.missing_your_name')});\n      return;\n    }\n\n    if (!session.role) {\n      setRequired({...required, role: t('home.missing_role')});\n      return;\n    }\n    \n    if (!roomTypes[session.roomType]) return;\n    const path = roomTypes[session.roomType].path\n    globalStore.showLoading()\n    roomStore.LoginToRoom({\n      userName: session.yourName,\n      roomName: session.roomName,\n      role: session.role === 'teacher' ? 1 : 2,\n      type: session.roomType,\n      uuid: genUUID()\n    }).then(() => {\n      history.push(`/classroom/${path}`)\n    }).catch((err: any) => {\n      if (err.hasOwnProperty('api_error')) {\n        return\n      }\n      if (err.reason) {\n        globalStore.showToast({\n          type: 'rtmClient',\n          message: t('toast.rtm_login_failed_reason', {reason: err.reason}),\n        })\n      } else {\n        globalStore.showToast({\n          type: 'rtmClient',\n          message: t('toast.rtm_login_failed'),\n        })\n      }\n      console.warn(err)\n    }).finally(() => {\n      globalStore.stopLoading();\n    })\n  }\n\n  return (\n    <div className={`flex-container ${isElectron ? 'draggable' : 'home-cover-web' }`}>\n      {isElectron ? null : \n      <div className=\"web-menu\">\n        <div className=\"web-menu-container\">\n          <div className=\"short-title\">\n            <span className=\"title\">{t('home.short_title.title')}</span>\n            <span className=\"subtitle\">{t('home.short_title.subtitle')}</span>\n            <span className=\"build-version\">{t(\"build_version\")}</span>\n          </div>\n          <div className=\"setting-container\">\n            <div className=\"flex-row\">\n              <Tooltip title={t(\"icon.upload-log\")} placement=\"top\">\n                <span>\n                  <Icon className={lock ? \"icon-loading\" : \"icon-upload\"} onClick={handleUpload}></Icon>\n                </span>\n              </Tooltip>\n              <Tooltip title={t(\"icon.setting\")} placement=\"top\">\n                <span>\n                  <Icon className=\"icon-setting\" onClick={handleSetting}/>\n                </span>\n              </Tooltip>\n            </div>\n            <Tooltip title={t(\"icon.lang-select\")} placement=\"top\">\n              <span>\n                <LangSelect\n                value={GlobalStorage.getLanguage().language.match(/^zh/) ? 0 : 1}\n                onChange={(evt: any) => {\n                  const value = evt.target.value;\n                  if (value === 0) {\n                    globalStore.setLanguage('zh-CN');\n                  } else {\n                    globalStore.setLanguage('en');\n                  }\n                }}\n                items={[\n                  {text: '中文', name: 'zh-CN'},\n                  {text: 'En', name: 'en'}\n                ]}></LangSelect>\n              </span>\n            </Tooltip>\n          </div>\n        </div>\n      </div>\n      }\n      <div className=\"custom-card\">\n        {!isElectron ? <GithubIcon /> : null}\n        <div className=\"flex-item cover\">\n          {isElectron ? \n          <>\n          <div className={`short-title ${globalStore.state.language}`}>\n            <span className=\"title\">{t('home.short_title.title')}</span>\n            <span className=\"subtitle\">{t('home.short_title.subtitle')}</span>\n          </div>\n          <div className={`cover-placeholder ${t('home.cover_class')}`}></div>\n          <div className='build-version'>{t(\"build_version\")}</div>\n          </>\n          : <div className={`cover-placeholder-web ${t('home.cover_class')}`}></div>\n          }\n        </div>\n        <div className=\"flex-item card\">\n          <div className=\"position-top card-menu\">\n            <HomeBtn handleSetting={handleSetting}/>\n          </div>\n          <div className=\"position-content flex-direction-column\">\n            <FormControl className={classes.formControl}>\n              <FormInput Label={t('home.room_name')} value={session.roomName} onChange={\n                (val: string) => {\n                  setSessionInfo({\n                    ...session,\n                    roomName: val\n                  });\n                }}\n                requiredText={required.roomName}\n              />\n            </FormControl>\n            <FormControl className={classes.formControl}>\n              <FormInput Label={t('home.nickname')} value={session.yourName} onChange={\n                (val: string) => {\n                  setSessionInfo({\n                    ...session,\n                    yourName: val\n                  });\n                }}\n                requiredText={required.yourName}\n              />\n            </FormControl>\n            <FormControl className={classes.formControl}>\n              <FormSelect \n                Label={t('home.room_type')}\n                value={session.roomType}\n                onChange={(evt: any) => {\n                  setSessionInfo({\n                    ...session,\n                    roomType: evt.target.value\n                  });\n                }}\n                items={roomTypes.map((it: any) => ({\n                  value: it.value,\n                  text: t(`${it.text}`),\n                  path: it.path\n                }))}\n              />\n            </FormControl>\n            <FormControl className={classes.formControl}>\n              <RoleRadio value={session.role} onChange={(evt: any) => {\n                 setSessionInfo({\n                   ...session,\n                   role: evt.target.value\n                 });\n              }} requiredText={required.role}></RoleRadio>\n            </FormControl>\n            <Button name={t('home.room_join')} onClick={handleSubmit}/>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\nexport default React.memo(HomePage);","import React, {useEffect} from 'react';\nimport Icon from '../icon';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Slider from '@material-ui/core/Slider';\n\nimport './index.scss';\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'flex',\n    marginTop: '8px',\n  },\n  sliderClass: {\n    color: '#44A2FC',\n    minWidth: '210px',\n    marginLeft: '6px'\n  }\n});\n\ninterface SliderProps {\n  volume: number\n  onChange: (volume: number) => void\n}\n\nexport default function ContinuousSlider(props: SliderProps) {\n  const classes = useStyles(props);\n  const [value, setValue] = React.useState<number>(props.volume);\n\n  const handleChange = (event: any, newValue: any) => {\n    setValue(newValue);\n  };\n\n  useEffect(() => {\n    props.onChange(value);\n  }, [value]);\n\n  return (\n    <div className=\"volume-container\">\n      <div className={classes.root}>\n        <Icon className=\"icon-speaker\" disable/>\n        <Slider className={classes.sliderClass} value={value} onChange={handleChange} aria-labelledby=\"continuous-slider\" />\n      </div>\n    </div>\n  );\n}","import React from 'react';\nimport Icon from '../icon';\nimport {makeStyles} from '@material-ui/core/styles';\n\nimport './index.scss';\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'flex',\n    marginTop: '8px',\n  },\n  sliderClass: {\n    color: '#44A2FC',\n    minWidth: '210px',\n    marginLeft: '6px',\n  },\n  sliderRailClass: {\n    height: '12px',\n    color: '#44A2FC'\n  },\n  sliderMarkClass: {\n    height: '12px',\n    color: '#CCCCCC'\n  }\n});\n\nconst totalVolumes = 52;\n\nfunction CustomSlider(props: any) {\n  return (\n    <div className=\"voice-sliders\">\n      {[...Array(totalVolumes)].map((e: any, key: number) => <span className={props.volume > key ? \"active\" : \"\"} key={key}></span>)}\n    </div>\n  )\n}\n\nfunction VoiceSlider(props: any) {\n  const classes = useStyles(props);\n  const volume = props.volume;\n\n  return (\n    <div className={classes.root}>\n      <Icon className=\"icon-voice\" disable />\n      <CustomSlider volume={volume * totalVolumes} className={classes.sliderClass} />\n    </div>\n  );\n}\n\nexport default function (props: any) {\n  return (\n    <div className=\"volume-container\">\n      <VoiceSlider volume={props.volume}/>\n    </div>\n  )\n}","import { BehaviorSubject } from \"rxjs\"\n\nexport interface ErrorState {\n  reason: string | null,\n  errors: {[key: string]: any}[] | []\n}\n\nexport class ErrorStore {\n  public readonly defaultState: ErrorState = {\n    reason: null,\n    errors: [] \n  }\n\n  private subject: BehaviorSubject<ErrorState> = new BehaviorSubject<ErrorState>(this.defaultState);\n\n  constructor() {\n    // console.log(\"defaultValue\", this.subject.getValue());\n  }\n\n  set state(newState: Partial<ErrorState>) {\n    this.subject.next({...this.subject.getValue(), ...newState});\n  }\n\n  get state() {\n    return this.subject.getValue();\n  }\n\n  subscribe(updateState: any) {\n    this.subject.subscribe(updateState);\n  }\n\n  unsubscribe() {\n    this.subject.unsubscribe();\n    this.state = this.defaultState;\n  }\n}\n\nexport const errorStore = new ErrorStore();","import { EventEmitter } from 'events';\nimport { videoPlugin } from '@netless/white-video-plugin';\nimport { audioPlugin } from '@netless/white-audio-plugin';\nimport { Room, WhiteWebSdk, DeviceType, SceneState, createPlugins, RoomPhase } from 'white-web-sdk';\nimport { Subject } from 'rxjs';\nimport GlobalStorage from '../utils/custom-storage';\nimport { isEmpty, get } from 'lodash';\nimport { roomStore } from './room';\nimport { globalStore } from './global';\nimport { t } from '../i18n';\n\nconst ENABLE_LOG = process.env.REACT_APP_AGORA_LOG === 'true';\n\ninterface SceneFile {\n  name: string\n  type: string\n}\n\nexport interface CustomScene {\n  path: string\n  rootPath: string\n  file: SceneFile\n  type: string\n}\n\nexport interface SceneResource {\n  path: string\n  rootPath: string\n  file: SceneFile\n}\n\nconst pathName = (path: string): string => {\n  const reg = /\\/([^\\/]*)\\//g;\n  reg.exec(path);\n  if (RegExp.$1 === \"aria\") {\n    return \"\";\n  } else {\n    return RegExp.$1;\n  }\n}\n\nexport const plugins = createPlugins({\"video\": videoPlugin, \"audio\": audioPlugin});\n\nplugins.setPluginContext(\"video\", {identity: 'guest'});\nplugins.setPluginContext(\"audio\", {identity: 'guest'});\n\nexport type WhiteboardState = {\n  loading: boolean\n  joined: boolean\n  scenes: CustomScene[]\n  currentScenePath: string\n  currentHeight: number\n  currentWidth: number\n  dirs: SceneResource[]\n  zoomRadio: number\n  scale: number\n  room: Room | null\n  recording: boolean\n  startTime: number\n  endTime: number\n\n  totalPage: number\n  currentPage: number\n  type: string\n}\n\ntype JoinParams = {\n  rid: string\n  uuid: string\n  roomToken: string\n  location?: string\n  userPayload: {\n    userId: string,\n    identity: string\n  }\n}\n\nclass Whiteboard extends EventEmitter {\n  public state: WhiteboardState;\n  public subject: Subject<WhiteboardState> | null;\n  public defaultState: WhiteboardState = {\n    joined: false,\n    scenes: [],\n    currentScenePath: '',\n    currentHeight: 0,\n    currentWidth: 0,\n    dirs: [],\n    zoomRadio: 0,\n    scale: 0,\n    recording: false,\n    startTime: 0,\n    endTime: 0,\n    room: null,\n    loading: true,\n    // isWritable: false,\n    ...GlobalStorage.read('mediaDirs'),\n    totalPage: 0,\n    currentPage: 0,\n    type: 'static'\n  }\n\n  public readonly client: WhiteWebSdk = new WhiteWebSdk({\n    deviceType: DeviceType.Surface,\n    // handToolKey: \" \",\n    plugins,\n    loggerOptions: {\n      disableReportLog: ENABLE_LOG ? false : true,\n      reportLevelMask: \"debug\",\n      printLevelMask: \"debug\",\n    }\n  });\n\n  constructor() {\n    super();\n    this.subject = null;\n    this.state = this.defaultState;\n  }\n\n  initialize() {\n    this.subject = new Subject<WhiteboardState>();\n    this.state = {\n      ...this.defaultState,\n    }\n    this.subject.next(this.state);\n  }\n\n  subscribe(updateState: any) {\n    this.initialize();\n    this.subject && this.subject.subscribe(updateState);\n  }\n\n  unsubscribe() {\n    this.subject && this.subject.unsubscribe();\n    this.subject = null;\n  }\n\n  commit (state: WhiteboardState) {\n    this.subject && this.subject.next(state);\n  }\n\n  updateState(newState: WhiteboardState) {\n    this.state = {\n      ...this.state,\n      ...newState,\n    }\n    this.commit(this.state);\n  }\n\n  getNameByScenePath(scenePath: string) {\n    const sceneMap = get(this.state.room, `state.globalState.sceneMap`, {})\n    console.log(\"sceneMap\", sceneMap)\n    return get(sceneMap, scenePath, 'default name')\n  }\n\n  updateRoomState() {\n    if (!this.state.room) return;\n    console.log(\"current room state\", this.state.room.state);\n    const roomState = this.state.room.state;\n\n    const path = roomState.sceneState.scenePath;\n    const ppt = roomState.sceneState.scenes[0].ppt;\n\n    const type = isEmpty(ppt) ? 'static' : 'dynamic';\n    const currentPage = roomState.sceneState.index;\n    const totalPage = roomState.sceneState.scenes.length;\n\n    if (type !== 'dynamic') {\n      this.state = {\n        ...this.state,\n        currentHeight: 0,\n        currentWidth: 0\n      }\n    } else {\n      this.state = {\n        ...this.state,\n        currentHeight: get(ppt, 'height', 0),\n        currentWidth: get(ppt, 'width', 0)\n      }\n    }\n\n    const entrieScenes = this.state.room ? this.state.room.entireScenes() : {};\n\n    const paths = Object.keys(entrieScenes);\n\n    let scenes: CustomScene[] = [];\n    for (let dirPath of paths) {\n      const sceneInfo = {\n        path: dirPath,\n        file: {\n          name: this.getNameByScenePath(dirPath),\n          type: 'whiteboard'\n        },\n        type: 'static',\n        rootPath: '',\n      }\n      if (entrieScenes[dirPath]) {\n        sceneInfo.rootPath = ['/', '/init'].indexOf(dirPath) !== -1 ? '/init' : `${dirPath}/${entrieScenes[dirPath][0].name}`\n        sceneInfo.type = entrieScenes[dirPath][0].ppt ? 'dynamic' : 'static'\n        if (sceneInfo.type === 'dynamic') {\n          sceneInfo.file.type = 'ppt';\n        }\n      }\n      scenes.push(sceneInfo);\n    }\n\n    const _dirPath = pathName(path);\n    const currentScenePath = _dirPath === \"\" ? \"/\" : `/${_dirPath}`;\n\n    const _dirs: SceneResource[] = [];\n    scenes.forEach((it: CustomScene) => {\n      _dirs.push({\n        path: it.path,\n        rootPath: it.rootPath,\n        file: it.file\n      });\n    });\n\n    this.state = {\n      ...this.state,\n      scenes: scenes,\n      currentScenePath: currentScenePath,\n      dirs: _dirs,\n      totalPage,\n      currentPage,\n      type,\n    }\n    this.commit(this.state);\n  }\n\n  setCurrentScene(dirPath: string) {\n    const currentDirIndex = this.state.dirs.findIndex((it: SceneResource) => it.path === dirPath);\n    this.state = {\n      ...this.state,\n      currentScenePath: dirPath,\n    }\n    this.commit(this.state);\n  }\n\n  updateSceneState(sceneState: SceneState) {\n    const path = sceneState.scenePath;\n    const ppt = sceneState.scenes[0].ppt;\n    const type = isEmpty(ppt) ? 'static' : 'dynamic';\n    const currentPage = sceneState.index;\n    const totalPage = sceneState.scenes.length;\n\n    this.state = {\n      ...this.state,\n      currentPage,\n      totalPage,\n      type,\n    }\n\n    this.commit(this.state);\n  }\n\n  updateScale(scale: number) {\n    this.state = {\n      ...this.state,\n      scale: scale\n    }\n    \n    this.commit(this.state);\n  }\n\n  updateLoading(value: boolean) {\n    this.state = {\n      ...this.state,\n      loading: value\n    }\n    this.commit(this.state);\n  }\n\n  async join({rid, uuid, roomToken, location, userPayload}: JoinParams) {\n    await this.leave();\n    const identity = userPayload.identity === 'host' ? 'host' : 'guest';\n\n    plugins.setPluginContext(\"video\", {identity});\n    plugins.setPluginContext(\"audio\", {identity});\n\n    const disableDeviceInputs: boolean = location!.match(/big-class/) && identity !== 'host' ? true : false;\n    const disableOperations: boolean = location!.match(/big-class/) && identity !== 'host' ? true : false;\n    const isWritable: boolean = location!.match(/big-class/) && identity !== 'host' ? false : true;\n\n    console.log(`[White] isWritable, ${isWritable}, disableDeviceInputs, ${disableDeviceInputs}, disableOperations, ${disableOperations}, location: ${location}`);\n\n    const roomParams = {\n      uuid,\n      roomToken,\n      disableBezier: true,\n      disableDeviceInputs,\n      disableOperations,\n      isWritable,\n      // rejectWhenReadonlyErrorLevel: RoomErrorLevel.Ignore,\n    }\n\n    const room = await this.client.joinRoom(roomParams, {\n      onPhaseChanged: (phase: RoomPhase) => {\n        if (phase === RoomPhase.Connected) {\n          this.updateLoading(false);\n        } else {\n          this.updateLoading(true);\n        }\n        console.log(\"[White] onPhaseChanged phase : \", phase);\n      },\n      onRoomStateChanged: state => {\n        console.log(\"onRoomStateChanged\", state)\n        if (state.zoomScale) {\n          whiteboard.updateScale(state.zoomScale);\n        }\n        if (state.sceneState || state.globalState) {\n          whiteboard.updateRoomState();\n        }\n      },\n      onDisconnectWithError: error => {},\n      onKickedWithReason: reason => {},\n      onKeyDown: event => {},\n      onKeyUp: event => {},\n      onHandToolActive: active => {},\n      onPPTLoadProgress: (uuid: string, progress: number) => {},\n    });\n\n    this.state = {\n      ...this.state,\n      room,\n    }\n    this.commit(this.state);\n  }\n\n  cleanRoom () {\n    this.state = {\n      ...this.state,\n      room: null\n    }\n    this.commit(this.state);\n  }\n\n  async leave() {\n    if (!this.state.room) return;\n    try {\n      await this.state.room.disconnect();\n    } catch(err) {\n      console.warn('disconnect whiteboard failed', err);\n    } finally {\n      this.cleanRoom();\n      console.log(\"cleanRoom\");\n    }\n    this.updateLoading(true);\n  }\n\n  async destroy() {\n    await this.leave();\n    this.state = {\n      ...this.defaultState,\n    }\n    this.commit(this.state);\n    this.removeAllListeners();\n  }\n\n  private operator: any = null;\n\n  async lock() {\n    const lockBoardStatus = Boolean(roomStore.state.course.lockBoard)\n    const lockBoard = lockBoardStatus ? 0 : 1\n    await roomStore.updateCourse({\n      lockBoard\n    })\n    if (lockBoard) {\n      globalStore.showToast({\n        type: 'notice-board',\n        message: t('toast.whiteboard_lock')\n      })\n    } else {\n      globalStore.showToast({\n        type: 'notice-board',\n        message: t('toast.whiteboard_unlock')\n      })\n    }\n  }\n}\n\nexport const whiteboard = new Whiteboard();\n// TODO: Please remove it before release in production\n// 备注：请在正式发布时删除操作的window属性\n//@ts-ignore\nwindow.netlessStore = whiteboard;\n","import React, { useEffect, useRef } from 'react';\nimport {historyStore} from '../stores/history';\nimport { GlobalState, globalStore} from '../stores/global';\nimport { RoomState, roomStore} from '../stores/room';\nimport {ErrorState, errorStore} from '../pages/error-page/state';\nimport { WhiteboardState, whiteboard } from '../stores/whiteboard';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { resolvePeerMessage, jsonParse } from '../utils/helper';\nimport GlobalStorage from '../utils/custom-storage';\nimport {fetchI18n} from '../services/edu-api';\nimport { t } from '../i18n';\nimport { ChatCmdType } from '../utils/agora-rtm-client';\nimport Log from '../utils/LogUploader';\n\nexport type IRootProvider = {\n  globalState: GlobalState\n  roomState: RoomState\n  whiteboardState: WhiteboardState\n  errorState: ErrorState\n  historyState: any\n}\n\nexport interface IObserver<T> {\n  subscribe: (setState: (state: T) => void) => void\n  unsubscribe: () => void\n  defaultState: T\n}\n\nfunction useObserver<T>(store: IObserver<T>) {\n  const [state, setState] = React.useState<T>(store.defaultState);\n  React.useEffect(() => {\n    store.subscribe((state: any) => {\n      setState(state);\n    });\n    return () => {\n      store.unsubscribe();\n    }\n  }, []);\n\n  return state;\n}\n\n\nexport const RootContext = React.createContext({} as IRootProvider);\n\nexport const useStore = () => {\n  const context = React.useContext(RootContext)\n  if (context === undefined) {\n    throw new Error('useStore must be used within a RootProvider');\n  }\n  return context;\n}\n\nexport const useGlobalState = () => {\n  return useStore().globalState;\n}\n\nexport const useRoomState = () => {\n  return useStore().roomState;\n}\n\nexport const useWhiteboardState = () => {\n  return useStore().whiteboardState;\n}\n\nexport const useErrorState = () => {\n  return useStore().errorState;\n}\n\nconst initLogWorker = () => {\n  Log.init();\n};\n\nexport const RootProvider: React.FC<any> = ({children}) => {\n  const globalState = useObserver<GlobalState>(globalStore);\n  const roomState = useObserver<RoomState>(roomStore);\n  const whiteboardState = useObserver<WhiteboardState>(whiteboard);\n  const errorState = useObserver<ErrorState>(errorStore);\n  const historyState = useObserver<any>(historyStore);\n  const history = useHistory();\n\n  const ref = useRef<boolean>(false);\n\n  useEffect(() => {\n    return () => {\n      ref.current = true;\n    }\n  }, []);\n\n  const value = {\n    globalState,\n    roomState,\n    whiteboardState,\n    errorState,\n    historyState,\n  }\n\n  useEffect(() => {\n    initLogWorker()\n    fetchI18n()\n    historyStore.setHistory(history)\n  }, [])\n\n  useEffect(() => {\n    if (!roomStore.state.rtm.joined) return;\n    const rtmClient = roomStore.rtmClient;\n    rtmClient.on('ConnectionStateChanged', ({ newState, reason }: { newState: string, reason: string }) => {\n      console.log(`newState: ${newState} reason: ${reason}`);\n      if (reason === 'LOGIN_FAILURE') {\n        globalStore.showToast({\n          type: 'rtmClient',\n          message: t('toast.login_failure'),\n        });\n        history.push('/');\n        return;\n      }\n      if (reason === 'REMOTE_LOGIN' || newState === 'ABORTED') {\n        globalStore.showToast({\n          type: 'rtmClient',\n          message: t('toast.kick'),\n        });\n        history.push('/');\n        return;\n      }\n    });\n    rtmClient.on(\"MessageFromPeer\", ({ message: { text }, peerId, props }: { message: { text: string }, peerId: string, props: any }) => {\n      const body = resolvePeerMessage(text);\n      console.log(\"message\", text, body)\n\n      // resolveMessage(peerId, body);\n      roomStore\n      .handlePeerMessage(body, peerId)\n      .then(() => {\n      }).catch(console.warn);\n    });\n    rtmClient.on(\"ChannelMessage\", ({ memberId, message }: { message: { text: string }, memberId: string }) => {\n      const {cmd, data} = jsonParse(message.text);\n      console.log(\"ChannelMessage cmd:  \", message, cmd, JSON.stringify(data))\n      // TODO: chat message\n      // TODO: 更新即时聊天\n      if (cmd === ChatCmdType.chat) {\n        if (data.userId === roomStore.state.me.userId) return\n        const isChatroom = globalStore.state.active === 'chatroom';\n        if (!isChatroom) {\n          globalStore.setMessageCount(globalStore.state.newMessageCount+1);\n        } else {\n          globalStore.setMessageCount(0);\n        }\n        const chatMessage = {\n          account: data.userName,\n          text: data.message,\n          ts: +Date.now(),\n          id: memberId,\n        }\n        roomStore.updateChannelMessage(chatMessage);\n        console.log(\"[rtmClient] chatMessage \", chatMessage, \" raw Data: \", data);\n      }\n\n      // TODO: update room member changed\n      // TODO: 更新人员进出\n      if (cmd === ChatCmdType.roomMemberChanged) {\n        const memberCount = data.total\n        roomStore.updateRoomMember(memberCount)\n      }\n\n      // TODO: update course state\n      // TODO: 更新房间信息\n      if (cmd === ChatCmdType.roomInfoChanged) {\n        roomStore.updateRoomInfo({\n          muteAllChat: data.muteAllChat,\n          lockBoard: data.lockBoard,\n          courseState: data.courseState\n        })\n      }\n\n      // TODO: update room co-video-users\n      // TODO: 更新连麦用户\n      if (cmd === ChatCmdType.coVideoUsersChanged) {\n        const users = data;\n        roomStore.updateCoVideoUsers(users);\n      }\n\n      // TODO: replay message\n      // TODO: 更新录制回放\n      if (cmd === ChatCmdType.replay) {\n        const isChatroom = globalStore.state.active === 'chatroom';\n        if (!isChatroom) {\n          globalStore.setMessageCount(globalStore.state.newMessageCount+1);\n        } else {\n          globalStore.setMessageCount(0);\n        }\n        const replayMessage = {\n          account: data.userName,\n          text: 'recording',\n          link: data.recordId,\n          ts: +Date.now(),\n          id: data.uid,\n        }\n        roomStore.updateChannelMessage(replayMessage);\n        console.log(\"[rtmClient] replayMessage\", replayMessage, \" raw Data: \", data);\n      }\n\n      if (cmd === ChatCmdType.screenShare) {\n        roomStore.updateScreenShare({\n          state: data.state,\n          screenId: data.screenId,\n          userId: data.userId\n        })\n      }\n    });\n    return () => {\n      rtmClient.removeAllListeners();\n    }\n  }, [roomStore.state.rtm.joined]);\n\n  const location = useLocation();\n\n  useEffect(() => {\n    if (location.pathname === '/') {\n      return;\n    }\n\n    const room = value.roomState;\n    GlobalStorage.save('agora_room', {\n      me: room.me,\n      course: room.course,\n      mediaDevice: room.mediaDevice,\n      applyUser: room.applyUser,\n    });\n    GlobalStorage.setLanguage(value.globalState.language);\n    // TODO: Please remove it before release in production\n    // 备注：请在正式发布时删除操作的window属性\n    //@ts-ignore\n    window.errorState = errorState;\n    //@ts-ignore\n    window.room = roomState;\n    //@ts-ignore\n    window.globalState = globalState;\n    //@ts-ignore\n    window.whiteboard = whiteboardState;\n  }, [value, location]);\n  return (\n    <RootContext.Provider value={value}>\n      {children}\n    </RootContext.Provider>\n  )\n}","import React, { useRef, useEffect, useState, useMemo } from 'react';\nimport Icon from './icon';\nimport './video-player.scss';\nimport { AgoraElectronStream, StreamType, AgoraRtcEngine } from '../utils/agora-electron-client';\nimport { useRoomState } from '../containers/root-container';\nimport { platform } from '../utils/platform';\n\nconst fillContentMode = 0;\nconst fitContentMode = 1;\n\ninterface VideoPlayerProps {\n  domId?: string\n  id?: string\n  streamID: number\n  preview?: boolean\n  account?: any\n  stream?: any\n  role?: string\n  audio?: boolean\n  video?: boolean\n  className?: string\n  showProfile?: boolean\n  local?: boolean\n  handleClick?: (type: string, streamID: number, uid: string) => Promise<any>\n  close?: boolean\n  handleClose?: (uid: string, streamID: number) => void\n  autoplay?: boolean\n}\n\nconst VideoPlayer: React.FC<VideoPlayerProps> = ({\n  preview,\n  role,\n  account,\n  stream,\n  className,\n  domId,\n  streamID,\n  audio,\n  id,\n  video,\n  handleClick,\n  local,\n  handleClose,\n  close,\n  autoplay\n}) => {\n  const loadVideo = useRef<boolean>(false);\n  const loadAudio = useRef<boolean>(false);\n\n  const lockPlay = useRef<boolean>(false);\n\n  const [resume, setResume] = useState<boolean>(false);\n\n  // TODO: 根据组件autoplay属性，仅判断远端流autoplay失败时触发\n  // TODO: only trigger resume when play remote stream\n  const needResume = useMemo(() => {\n    return resume === true &&\n      autoplay === false &&\n      local === false\n  }, [resume, autoplay, local])\n\n  useEffect(() => {\n    if (!domId || !stream || !AgoraRtcEngine) return;\n    if (platform === 'electron') {\n      const _stream = stream as AgoraElectronStream;\n      const dom = document.getElementById(domId);\n      if (!dom) return;\n      console.log(\"[agora-electron] video player\", dom, streamID, fillContentMode);\n      if (preview) {\n        // set for preview\n        AgoraRtcEngine.setupLocalVideo(dom);\n        AgoraRtcEngine.setupViewContentMode(streamID, fillContentMode);\n        AgoraRtcEngine.setClientRole(1);\n        // preview mode required you become host\n        AgoraRtcEngine.startPreview();\n        // AgoraRtcEngine.muteLocalVideoStream(nativeClient.published);\n        // AgoraRtcEngine.muteLocalAudioStream(nativeClient.published);\n        return () => {\n          console.log(\"[agora-electron] stop preview\", dom, streamID, fillContentMode);\n          AgoraRtcEngine.stopPreview();\n          AgoraRtcEngine.setClientRole(2);\n        }\n      }\n      if (_stream.type === StreamType.local) {\n        console.log(\"[agora-electron] video-player play \", AgoraRtcEngine.setupViewContentMode(streamID, fillContentMode));\n        console.log(\"[agora-electron] video-player setupLocalVideo \", AgoraRtcEngine.setupLocalVideo(dom));\n        return () => {\n          // AgoraRtcEngine.destroyRenderView(streamID, dom, (err: any) => { console.warn(err.message) });\n        }\n      }\n\n      if (_stream.type === StreamType.localVideoSource) {\n        AgoraRtcEngine.setupLocalVideoSource(dom);\n        AgoraRtcEngine.setupViewContentMode('videosource', fitContentMode);\n        // AgoraRtcEngine.setupViewContentMode(streamID, fitContentMode);\n        return () => {\n          // AgoraRtcEngine.destroyRenderView('videosource');\n          // AgoraRtcEngine.destroyRenderView(streamID, dom, (err: any) => { console.warn(err.message) });\n        }\n      }\n\n      if (_stream.type === StreamType.remote) {\n        AgoraRtcEngine.subscribe(streamID, dom);\n        AgoraRtcEngine.setupViewContentMode(streamID, fillContentMode);\n        return () => {\n          // AgoraRtcEngine.destroyRenderView(streamID, dom, (err: any) => { console.warn(err.message) });\n        }\n      }\n\n      if (_stream.type === StreamType.remoteVideoSource) {\n        AgoraRtcEngine.subscribe(streamID, dom);\n        // AgoraRtcEngine.setupViewContentMode('videosource', fitContentMode);\n        AgoraRtcEngine.setupViewContentMode(streamID, fitContentMode);\n        return () => {\n          // AgoraRtcEngine.destroyRenderView('videosource');\n          // AgoraRtcEngine.destroyRenderView(streamID, dom, (err: any) => { console.warn(err.message) });\n        }\n      }\n    }\n  }, [domId, stream, AgoraRtcEngine]);\n\n  useEffect(() => {\n    if (platform === 'web') {\n      if (!stream || !domId || lockPlay.current && stream.isPlaying()) return;\n      lockPlay.current = true;\n      stream.play(`${domId}`, { fit: 'cover' }, (err: any) => {\n        lockPlay.current = false;\n        console.warn('[video-player] ', JSON.stringify(err), id, stream.isPaused(), stream.isPlaying(), ' isLocal: ', local);\n        if (!autoplay && err && err.audio && err.audio.status !== \"aborted\" && !local) {\n          stream.isPaused() && setResume(true);\n          console.warn('[video-player] play failed ', JSON.stringify(err), id, stream.isPaused(), stream.isPlaying());\n        }\n      })\n      return () => {\n        if (stream.isPlaying()) {\n          stream.stop();\n        }\n      }\n    }\n  }, [domId, stream]);\n\n\n  useEffect(() => {\n    if (stream && platform === 'web') {\n      // prevent already muted audio\n      if (!loadAudio.current) {\n        if (!audio) {\n          stream.muteAudio();\n          console.log('stream mute audio');\n        }\n        loadAudio.current = true;\n        return;\n      }\n\n      if (audio) {\n        console.log('stream unmute audio');\n        stream.unmuteAudio();\n      } else {\n        console.log('stream mute audio');\n        stream.muteAudio();\n      }\n    }\n\n    if (stream && platform === 'electron') {\n      if (stream.type !== StreamType.local) return;\n      // prevent already muted video\n      if (!loadAudio.current) {\n        if (!audio) {\n          const res = AgoraRtcEngine.muteLocalAudioStream(true);\n          console.log(\"[agora-electron] muteLocalAudioStream(true); \", res);\n        }\n        loadAudio.current = true;\n        return;\n      }\n\n      if (audio) {\n        const res = AgoraRtcEngine.muteLocalAudioStream(false);\n        console.log(\"[agora-electron] muteLocalAudioStream(false); \", res);\n      } else {\n        const res = AgoraRtcEngine.muteLocalAudioStream(true);\n        console.log(\"[agora-electron] muteLocalAudioStream(true); \", res);\n      }\n    }\n  }, [stream, audio, AgoraRtcEngine]);\n\n  useEffect(() => {\n    if (stream && platform === 'web') {\n      // prevent already muted video\n      if (!loadVideo.current) {\n        if (!video) {\n          console.log('stream mute video');\n          stream.muteVideo();\n        }\n        loadVideo.current = true;\n        return;\n      }\n\n      if (video) {\n        console.log('stream unmute video');\n        stream.unmuteVideo();\n      } else {\n        console.log('stream mute video');\n        stream.muteVideo();\n      }\n    }\n\n    if (stream && platform === 'electron') {\n      if (stream.type !== StreamType.local) return;\n      // prevent already muted video\n      if (!loadVideo.current) {\n        if (!video) {\n          // const res = AgoraRtcEngine.muteLocalVideoStream(true);\n          const res = AgoraRtcEngine.enableLocalVideo(false);\n          console.log(\"[agora-electron] enableLocalVideo(false); \", res);\n        }\n        loadVideo.current = true;\n        return;\n      }\n\n      if (video) {\n        // const res = AgoraRtcEngine.muteLocalVideoStream(false);\n        const res2 = AgoraRtcEngine.enableLocalVideo(true);\n        console.log(\"[agora-electron] enableLocalVideo(true); \", res2);\n      } else {\n        // const res = AgoraRtcEngine.muteLocalVideoStream(true);\n        const res2 = AgoraRtcEngine.enableLocalVideo(false);\n        console.log(\"[agora-electron] enableLocalVideo(false); \", res2);\n      }\n    }\n  }, [stream, video, AgoraRtcEngine]);\n\n  const onAudioClick = (evt: any) => {\n    if (handleClick && id) {\n      handleClick('audio', streamID, id);\n    }\n  }\n\n  const onVideoClick = (evt: any) => {\n    if (handleClick && id) {\n      handleClick('video', streamID, id);\n    }\n  }\n\n  const onClose = (evt: any) => {\n    if (handleClose && id) {\n      handleClose('close', streamID);\n    }\n  }\n\n  const roomState = useRoomState()\n\n  const me = roomState.me;\n\n  return (\n    <div className={`${className ? className : (preview ? 'preview-video rotateY180deg' : `agora-video-view ${Boolean(video) === false && stream ? 'show-placeholder' : ''}`)}`}>\n      {close ? <div className=\"icon-close\" onClick={onClose}></div> : null}\n      {className !== 'screen-sharing' ? <div className={role === 'teacher' ? 'teacher-placeholder' : 'student-placeholder'}></div> : null}\n      {preview ? null :\n        account ?\n          <div className=\"video-profile\">\n            <span className=\"account\">{account}</span>\n            {`${me.uid}` === `${id}` || me.role === 1 ?\n              <span className=\"media-btn\">\n                <Icon onClick={onAudioClick} className={audio ? \"icon-speaker-on\" : \"icon-speaker-off\"} data={\"audio\"} />\n                <Icon onClick={onVideoClick} className={video ? \"icons-camera-unmute-s\" : \"icons-camera-mute-s\"} data={\"video\"} />\n              </span> : null}\n          </div>\n          : null\n      }\n      <div id={`${domId}`} className={`agora-rtc-video ${local ? 'rotateY180deg' : ''}`}></div>\n      {needResume ? <div className=\"clickable\" onClick={() => {\n        stream.resume().then(() => {\n          setResume(false);\n          console.log(\"clickable\");\n        }).catch(console.warn);\n      }}></div> : null}\n    </div>\n  )\n}\n\nexport default React.memo(VideoPlayer);","import React from 'react';\nimport { FormControl } from '@material-ui/core';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Button from './custom-button';\nimport FormSelect from './form-select';\nimport SpeakerVolume from './volume/speaker';\nimport useSettingControl from '../hooks/use-setting-control';\nimport {t} from '../i18n';\n\nimport { usePlatform } from '../containers/platform-container';\n\nconst useStyles = makeStyles ({\n  formControl: {\n    minWidth: '240px',\n    maxWidth: '240px',\n  }\n});\n\ninterface SettingProps {\n  className?: string\n  handleFinish: (evt: any) => void\n}\n\nexport default function (props: SettingProps) {\n  const classes = useStyles();\n\n  const {SettingBtn} = usePlatform();\n  const {\n    cameraList,\n    microphoneList,\n    speakerList,\n    camera,\n    microphone,\n    speaker,\n    setCamera,\n    setMicrophone,\n    setSpeaker,\n    // volume,\n    speakerVolume,\n    setSpeakerVolume,\n    save,\n    PreviewPlayer,\n    MicrophoneVolume\n  } = useSettingControl();\n\n  const changeCamera = (evt: any) => {\n    console.log('changeCamera ', evt.target.value);\n    setCamera(evt.target.value);\n  }\n\n  const changeMicrophone = (evt: any) => {\n    console.log('changeMicrophone ', evt.target.value);\n    setMicrophone(evt.target.value);\n  }\n\n  const changeSpeaker = (evt: any) => {\n    console.log('changeSpeaker ', evt.target.value);\n    setSpeaker(evt.target.value);\n  }\n\n  const changeSpeakerVolume = (volume: number) => {\n    console.log('changeSpeaker ', volume);\n    setSpeakerVolume(volume);\n  }\n\n  return (\n    <div className={props.className ? props.className : \"flex-container\"}>\n      <div className=\"custom-card\">\n        <div className=\"flex-item cover\">\n          <PreviewPlayer />\n        </div>\n        <div className=\"flex-item card\">\n          <div className=\"position-top card-menu\">\n            <div></div>\n            <div className=\"icon-container\">\n              <SettingBtn />\n            </div>\n          </div>\n          <div className=\"position-content flex-direction-column\">\n            <FormControl className={classes.formControl}>\n              <FormSelect \n                Label={t(\"device.camera\")}\n                value={camera}\n                onChange={changeCamera}\n                items={cameraList}\n              />\n            </FormControl>\n            <FormControl className={classes.formControl}>\n              <FormSelect \n                Label={t(\"device.microphone\")}\n                value={microphone}\n                onChange={changeMicrophone}\n                items={microphoneList}\n              />\n              <MicrophoneVolume />\n            </FormControl>\n            <FormControl className={classes.formControl}>\n              <FormSelect \n                Label={t(\"device.speaker\")}\n                value={speaker}\n                onChange={changeSpeaker}\n                items={speakerList}\n              />\n              <SpeakerVolume volume={speakerVolume} onChange={changeSpeakerVolume} />\n            </FormControl>\n            <Button name={t(\"device.finish\")} onClick={(evt: any) => {\n              save({\n                speakerVolume,\n                camera,\n                microphone,\n                speaker,\n              })\n              props.handleFinish(evt);\n            }}/>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}","import { usePlatform } from '../containers/platform-container';\nimport React, { useState, useEffect, useMemo, useRef, useCallback } from 'react';\nimport VoiceVolume from '../components/volume/voice';\nimport AgoraWebClient from '../utils/agora-rtc-client';\nimport { AgoraElectronClient } from '../utils/agora-electron-client';\nimport VideoPlayer from '../components/video-player';\nimport { useRoomState } from '../containers/root-container';\nimport { roomStore, MediaDeviceState } from '../stores/room';\n\nexport default function useSettingControl () {\n\n  const [devices, setDevices] = useState<any[]>([]);\n\n  const {platform} = usePlatform();\n\n  const cameraList = useMemo(() => {\n    return devices\n    .filter((it: Device) => \n      it.kind === 'videoinput');\n  }, [devices]);\n\n  const microphoneList = useMemo(() => {\n    return devices\n    .filter((it: Device) => \n      it.kind === 'audioinput');\n  }, [devices]);\n\n  const speakerList = useMemo(() => {\n    return devices\n    .filter((it: Device) => \n      it.kind === 'audiooutput');\n  }, [devices]);\n\n  const roomState = useRoomState();\n\n  const mediaDevice = useMemo(() => {\n    return roomState.mediaDevice;\n  }, [roomState.mediaDevice]);\n\n  const [camera, setCamera] = useState(mediaDevice.camera);\n  const [microphone, setMicrophone] = useState(mediaDevice.microphone);\n  const [speaker, setSpeaker] = useState(mediaDevice.speaker);\n  const [speakerVolume, setSpeakerVolume] = useState<number>(mediaDevice.speakerVolume);\n  const [volume, setVolume] = useState<number>(0);\n\n  let mounted = false;\n\n  useEffect(() => {\n    const rtcClient: AgoraWebClient | AgoraElectronClient = roomStore.rtcClient;\n    if (!platform || !rtcClient) return;\n\n    if (platform === 'web' && !mounted) {\n      const webClient = rtcClient as AgoraWebClient;\n      const onChange = async () => {\n        const devices: Device[] = await webClient.getDevices();\n        setDevices(devices.map((item: Device) => ({\n          value: item.deviceId,\n          text: item.label,\n          kind: item.kind\n        })));\n      }\n      window.addEventListener('devicechange', onChange);\n      onChange().then(() => {\n      }).catch(console.warn);\n      mounted = true;\n      return () => {\n        window.removeEventListener('devicechange', onChange);\n      }\n    }\n\n    if (platform === 'electron' && !mounted) {\n      const nativeClient = rtcClient as AgoraElectronClient;\n\n      const onChange = async () => {\n        let microphoneIds = await nativeClient.rtcEngine.getAudioRecordingDevices();\n        let speakerIds = await nativeClient.rtcEngine.getAudioPlaybackDevices();\n        let cameraIds = await nativeClient.rtcEngine.getVideoDevices();\n\n        const microphones = microphoneIds.map((it: any) => (\n          {\n            kind: 'audioinput',\n            text: it.devicename,\n            value: it.deviceid\n          }\n        ));\n        const speakers = speakerIds.map((it: any) => ({\n          kind: 'audiooutput',\n          text: it.devicename,\n          value: it.deviceid,\n        }));\n        const cameras = cameraIds.map((it: any) => ({\n          kind: 'videoinput',\n          text: it.devicename,\n          value: it.deviceid,\n        }));\n        setDevices([].concat(microphones).concat(speakers).concat(cameras));\n      }\n      onChange().then(() => console.log('electron devices changed'))\n        .catch(console.warn);\n\n      nativeClient.on('videodevicestatechanged', onChange);\n      nativeClient.on('audiodevicestatechanged', onChange);\n      mounted = true;\n      return () => {\n        nativeClient.off('videodevicestatechanged', onChange);\n        nativeClient.off('audiodevicestatechanged', onChange);\n      }\n    }\n  }, [platform]);\n\n  const cameraId: string = useMemo(() => {\n    return cameraList[camera] ? cameraList[camera].value : '';\n  }, [cameraList, camera]);\n\n  const microphoneId: string = useMemo(() => {\n    return microphoneList[microphone] ? microphoneList[microphone].value : '';\n  }, [microphoneList, microphone]);\n\n  const speakerId: string = useMemo(() => {\n    return speakerList[speaker] ? speakerList[speaker].value : '';\n  }, [speakerList, speaker]);\n\n  const [stream, setStream] = useState<any>(null);\n\n  const ref = useRef<boolean>(false);\n\n  useEffect(() => {\n    return () => {\n      ref.current = true;\n    }\n  }, []);\n\n  const lock = useRef<boolean>(false);\n\n  useEffect(() => {\n    return () => {\n      lock.current = true;\n    }\n  }, []);\n  useEffect(() => {\n    if (lock.current || !speakerId || !cameraId || !microphoneId) return;\n    const rtcClient: AgoraWebClient | AgoraElectronClient = roomStore.rtcClient;\n    lock.current = true;\n    if (platform === 'web') {\n      const webClient = rtcClient as AgoraWebClient;\n      !ref.current &&\n      webClient.createPreviewStream({\n        cameraId,\n        microphoneId,\n        speakerId,\n      }).then((stream: any) => {\n        !ref.current && setStream(stream);\n      }).finally(() => {\n        lock.current = false;\n      })\n    }\n\n    if (platform === 'electron') {\n      const nativeClient = rtcClient as AgoraElectronClient;\n      const stream = nativeClient.createStream({\n        streamID: 0,\n        cameraId,\n        microphoneId,\n        speakerId,\n      })\n      setStream(stream);\n      lock.current = false;\n    }\n  }, [platform, speakerId, cameraId, microphoneId]);\n\n  const interval = useRef<any>(null);\n\n  useEffect(() => {\n    if (!stream || !stream.getAudioLevel) return;\n    interval.current = setInterval(() => {\n      !ref.current && setVolume(stream.getAudioLevel())\n    }, 300);\n    return () => {\n      interval.current && clearInterval(interval.current);\n      interval.current = null;\n    }\n  }, [stream]);\n\n  useEffect(() => {\n    if (!stream) return;\n    if (platform === 'electron') {\n      console.log(\"[electron-client] add volume event listener\");\n      const onVolumeChange = (speakers: any[], speakerNumber: number, totalVolume: number)=> {\n        setVolume(Number((totalVolume / 255).toFixed(3)))\n      }\n      const rtcClient: AgoraWebClient | AgoraElectronClient = roomStore.rtcClient;\n      const nativeClient = rtcClient as AgoraElectronClient;\n      nativeClient.rtcEngine.setClientRole(1);\n      const res = nativeClient.rtcEngine.enableAudioVolumeIndication(1000, 3, true);\n      console.log(\"enableAudioVolumeIndication(1000, 3, true), \", res)\n      nativeClient.rtcEngine.on('groupAudioVolumeIndication', onVolumeChange);\n      console.log('startplayback on result', nativeClient.rtcEngine.startAudioRecordingDeviceTest(300));\n      return () => {\n        nativeClient.rtcEngine.off(\"groupAudioVolumeIndication\", onVolumeChange);\n        console.log('startplayback off result', nativeClient.rtcEngine.stopAudioPlaybackDeviceTest());\n      }\n    }\n  }, [stream]);\n\n  const PreviewPlayer = useCallback(() => {\n    if (!stream) return null;\n    return (\n      <VideoPlayer\n        domId={\"local\"}\n        preview={true}\n        stream={stream}\n        streamID={0}\n        video={true}\n        audio={true}\n        local={true}\n      />\n    )\n\n  }, [stream]);\n\n  const MicrophoneVolume = useCallback(() => {\n    return (<VoiceVolume volume={volume}/>)\n  }, [volume]);\n\n  const handleSave = (args: {camera: number, microphone: number, speaker: number, speakerVolume: number}) => {\n    const { camera, microphone, speaker, speakerVolume } = args;\n    const cameraId = cameraList[camera] ? cameraList[camera].value : '';\n    const microphoneId = microphoneList[microphone] ? microphoneList[microphone].value : '';\n    const speakerId = speakerList[speaker] ? speakerList[speaker].value : '';\n    const mediaInfo: MediaDeviceState = {\n      cameraId,\n      microphoneId,\n      speakerId,\n      camera,\n      microphone,\n      speaker,\n      speakerVolume,\n    }\n    ref.current = true;\n    roomStore.updateDevice(mediaInfo);\n    if (stream && stream.close) {\n      stream.close();\n    }\n  }\n\n  return {\n    volume,\n    cameraList,\n    microphoneList,\n    speakerList,\n    camera,\n    microphone,\n    speaker,\n    setCamera,\n    setMicrophone,\n    setSpeaker,\n    speakerVolume,\n    setSpeakerVolume,\n    PreviewPlayer,\n    MicrophoneVolume,\n    save: handleSave,\n  }\n}\n","import React, { useEffect } from 'react';\nimport {useHistory} from 'react-router-dom';\nimport SettingCard from '../components/setting-card';\nimport { isElectron } from '../utils/platform';\nimport { roomStore } from '../stores/room';\nimport AgoraWebClient from '../utils/agora-rtc-client';\nimport {platform} from '../utils/platform';\n\nfunction DeviceTest() {\n  const history = useHistory();\n\n  const handleClick = (evt: any) => {\n    history.push('/')\n  }\n\n  useEffect(() => {\n    if (platform === 'web') {\n      const webClient = roomStore.rtcClient as AgoraWebClient;\n      return () => {\n        if (webClient.tmpStream) {\n          webClient.tmpStream.isPlaying() && webClient.tmpStream.stop();\n          webClient.tmpStream.close();\n        }\n      }\n    }\n  }, []);\n\n  return (\n    <div className={`flex-container ${isElectron ? 'draggable' : 'home-cover-web'}`}>\n      <SettingCard handleFinish={handleClick} />\n    </div>\n  )\n}\n\nexport default React.memo(DeviceTest);","export interface ChatMessage {\n  account: string\n  text: string\n  link?: string\n  ts: number\n  id: string\n}\nexport enum ClassState {\n  CLOSED = 0,\n  STARTED = 1\n}\n\nexport interface AgoraMediaStream {\n  streamID: number\n  local: boolean\n  account?: string\n  stream?: any\n  video?: boolean\n  audio?: boolean\n  playing?: boolean\n}\n\nexport class AgoraStream {\n  constructor(\n    public readonly stream: any = stream,\n    public readonly streamID: number = streamID,\n    public readonly local: boolean = local,\n  ) {\n  }\n}","import React, { useState, useEffect, useRef } from 'react';\nimport Icon from './icon';\nimport SettingCard from '../components/setting-card';\nimport './nav.scss';\nimport Button from './custom-button';\nimport * as moment from 'moment';\nimport { ClassState } from '../utils/types';\nimport { NetworkQualityEvaluation } from '../utils/helper';\nimport { usePlatform } from '../containers/platform-container';\nimport AgoraWebClient from '../utils/agora-rtc-client';\nimport { AgoraElectronClient } from '../utils/agora-electron-client';\nimport { isElectron, platform } from '../utils/platform';\nimport { useRoomState } from '../containers/root-container';\nimport { roomStore } from '../stores/room';\nimport { globalStore } from '../stores/global';\nimport { t } from '../i18n';\nimport Log from '../utils/LogUploader';\nimport { Tooltip } from '@material-ui/core';\n\ninterface NavProps {\n  delay: string\n  network: string\n  cpu: string\n  role: number\n  roomName: string\n  time: number\n  showSetting: boolean\n  classState: boolean\n  onCardConfirm: (type: string) => void\n  handleClick: (type: string) => void\n}\n\nconst networkQualityIcon: {[key: string]: string} = {\n  'excellent': 'network-good',\n  'good': 'network-good',\n  'poor': 'network-normal',\n  'bad': 'network-normal',\n  'very bad': 'network-bad',\n  'down': 'network-bad',\n  'unknown': 'network-bad',\n}\n\nexport function Nav ({\n  delay,\n  network,\n  cpu,\n  role,\n  roomName,\n  time,\n  handleClick,\n  showSetting,\n  classState,\n  onCardConfirm,\n}: NavProps) {\n\n  const {NavBtn} = usePlatform();\n    \n  const handleFinish = (evt: any) => {\n    onCardConfirm('setting');\n  }\n\n  return (\n    <>\n    <div className={`nav-container ${isElectron ? 'draggable' : ''}`}>\n      <div className=\"class-title\">\n        <span className=\"room-name\">{roomName}</span>\n        {+role === 1 ? \n          <Button className={`nav-button ${classState ? \"stop\" : \"start\"}`} name={classState ? t('nav.class_end') : t('nav.class_start')} onClick={(evt: any) => {\n            handleClick(\"classState\")\n          }} /> : null}\n      </div>\n      <div className=\"network-state\">\n        {platform === 'web' ? <span className=\"net-field\">{t('nav.delay')}<span className=\"net-field-value\">{delay}</span></span> : null}\n        {/* <span className=\"net-field\">Packet Loss Rate: <span className=\"net-field-value\">{lossPacket}</span></span> */}\n        <span className=\"net-field net-field-container\">\n          {t('nav.network')}\n          <span className={`net-field-value ${networkQualityIcon[network]}`} style={{marginLeft: '.2rem'}}>\n          </span>\n        </span>\n        {platform === 'electron' ? <span className=\"net-field\">{t('nav.cpu')}<span className=\"net-field-value\">{cpu}</span></span> : null}\n      </div>\n      <div className=\"menu\">\n        <div className=\"timer\">\n          <Icon className=\"icon-time\" disable />\n          <span className=\"time\">{moment.utc(time).format('HH:mm:ss')}</span>\n        </div>\n        <span className=\"menu-split\" />\n        <div className={platform === 'web' ? \"btn-group\" : 'electron-btn-group' }>\n          {platform === 'web' ?\n            <>\n            <Tooltip title={t(\"icon.setting\")} placement=\"bottom\">\n              <span>\n                <Icon className=\"icon-setting\" onClick={(evt: any) => {\n                  handleClick(\"setting\");\n                }}/>\n              </span>\n            </Tooltip>\n\n            </> : null\n          }\n          <Tooltip title={t(\"icon.upload-log\")} placement=\"bottom\">\n            <span>\n              <Icon className={globalStore.state.lock ? \"icon-loading\" : \"icon-upload\"} onClick={(evt: any) => {\n                handleClick('uploadLog')\n              }}></Icon>\n            </span>\n          </Tooltip>\n          <Tooltip title={t(\"icon.exit-room\")} placement=\"bottom\">\n            <span>\n              <Icon className=\"icon-exit\" onClick={(evt: any) => {\n                handleClick(\"exit\");\n              }} />\n            </span>\n          </Tooltip>\n        </div>\n        <NavBtn />\n      </div>\n    </div>\n    {showSetting ? \n      <SettingCard className=\"internal-card\"\n        handleFinish={handleFinish} /> : null\n    }\n    </>\n  )\n}\n\nexport default function NavContainer() {\n  const {\n    platform\n  } = usePlatform();\n\n  const ref = useRef<boolean>(false);\n\n  const [time, updateTime] = useState<number>(0);\n\n  const [timer, setTimer] = useState<any>(null);\n\n  const calcDuration = (time: number) => {\n    return setInterval(() => {\n      !ref.current && updateTime(+Date.now() - time);\n    }, 150, time)\n  }\n\n  const [card, setCard] = useState<boolean>(false);\n\n  const [rtt, updateRtt] = useState<number>(0);\n  const [quality, updateQuality] = useState<string>('unknown');\n  const [cpuUsage, updateCpuUsage] = useState<number>(0);\n\n  useEffect(() => {\n    return () => {\n      ref.current = true;\n      if (timer) {\n        clearInterval(timer);\n        setTimer(null);\n      }\n    }\n  }, []);\n\n  const roomState = useRoomState();\n\n  const me = roomState.me;\n\n  useEffect(() => {\n    const rtcClient = roomStore.rtcClient;\n    if (platform === 'web') {\n      const webClient = rtcClient as AgoraWebClient;\n      webClient.rtc.on('watch-rtt', (rtt: number) => {\n        !ref.current && updateRtt(rtt);\n      });\n      webClient.rtc.on('network-quality', (evt: any) => {\n        const quality = NetworkQualityEvaluation(evt);\n        !ref.current && updateQuality(quality);\n      })\n      return () => {\n        webClient.rtc.off('watch-rtt', () => {});\n        webClient.rtc.off('network-quality', () => {});\n      }\n    }\n    if (platform === 'electron') {\n      const nativeClient = rtcClient as AgoraElectronClient;\n      nativeClient.on('rtcStats', ({cpuTotalUsage}: any) => {\n        !ref.current && updateCpuUsage(cpuTotalUsage);\n      });\n      nativeClient.on('networkquality', (\n        uid: number,\n        txquality: number,\n        rxquality: number) => {\n        if (uid === 0) {\n          const quality = NetworkQualityEvaluation({\n            downlinkNetworkQuality: rxquality,\n            uplinkNetworkQuality: txquality,\n          });\n          !ref.current && updateQuality(quality);\n        }\n      })\n\n      return () => {\n        nativeClient.off('rtcStats', () => {});\n        nativeClient.off('networkquality', () => {});\n        nativeClient.off('audioquality', () => {});\n      }\n    }\n  }, []);\n\n  const courseState = roomState.course.courseState;\n  const course = roomState.course;\n\n  useEffect(() => {\n    if (courseState === ClassState.STARTED\n      && timer === null) {\n        const now: number = +Date.now();\n        setTimer(calcDuration(now));\n    }\n    if (timer && courseState === ClassState.CLOSED) {\n      clearInterval(timer);\n      setTimer(null);\n    }\n  }, [courseState]);\n\n  const lock = useRef<boolean>(false);\n\n  useEffect(() => {\n    return () => {\n      lock.current = true;\n    }\n  }, []);\n\n  const updateClassState = () => {\n    if (!lock.current) {\n      lock.current = true;\n      roomStore.updateCourse({\n        courseState: +!Boolean(roomStore.state.course.courseState)\n      }).then(() => {\n        console.log(\"update success\");\n      }).catch(console.warn)\n      .finally(() => {\n        lock.current = false;\n      })\n    }\n  };\n\n  const handleClick = (type: string) => {\n    if (type === 'setting') {\n      setCard(true);\n    } else if (type === 'exit') {\n      globalStore.showDialog({\n        type: 'exitRoom',\n        message: t('toast.quit_room'),\n      });\n    } else if (type === 'classState') {\n      updateClassState();\n    } else if (type === 'uploadLog') {\n      globalStore.lock()\n      Log.doUpload().then((resultCode: any) => {\n        globalStore.showDialog({\n          type: 'uploadLog',\n          message: t('toast.show_log_id', {reason: `${resultCode}`})\n        });\n      }).finally(() => {\n        globalStore.unlock()\n      })\n    }\n  }\n\n  const handleCardConfirm = (type: string) => {\n    switch (type) {\n      case 'setting':\n        setCard(false);\n        return;\n      case 'exitRoom':\n        globalStore.removeDialog();\n        return;\n    }\n  }\n\n  return (\n    <Nav \n      role={me.role}\n      roomName={course.roomName}\n      classState={Boolean(course.courseState)}\n      delay={`${rtt}ms`}\n      time={time}\n      network={`${quality}`}\n      cpu={`${cpuUsage}%`}\n      showSetting={card}\n      onCardConfirm={handleCardConfirm}\n      handleClick={handleClick}\n    />\n  )\n}","import React, {useMemo} from 'react';\nimport Button from '../custom-button';\nimport {Dialog, DialogContent, DialogContentText} from '@material-ui/core';\n\nimport './dialog.scss';\nimport { useGlobalState } from '../../containers/root-container';\nimport { roomStore } from '../../stores/room';\nimport { globalStore } from '../../stores/global';\nimport { useHistory } from 'react-router-dom';\n// import { RoomMessage } from '../../utils/agora-rtm-client';\nimport { t } from '../../i18n';\nimport { isElectron } from '../../utils/platform';\nimport { eduApi } from '../../services/edu-api';\n\ninterface RoomProps {\n  onConfirm: (type: string) => void\n  onClose: (type: string) => void\n  desc: string\n  type: string\n}\n\nfunction RoomDialog(\n{\n  onConfirm,\n  onClose,\n  desc,\n  type\n}: RoomProps) {\n\n  const handleClose = () => {\n    onClose(type)\n  };\n\n  const handleConfirm = () => {\n    onConfirm(type)\n  }\n\n  return (\n    <div>\n      <Dialog\n        disableBackdropClick\n        open={true}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogContent\n          className=\"modal-container\"\n        >\n          <DialogContentText className=\"dialog-title\">\n            {desc}\n          </DialogContentText>\n          <div className=\"button-group\">\n            <Button name={t(\"toast.confirm\")} className=\"confirm\" onClick={handleConfirm} color=\"primary\" />\n            <Button name={t(\"toast.cancel\")} className=\"cancel\" onClick={handleClose} color=\"primary\" />\n          </div>\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n}\n\nconst DialogContainer = () => {\n\n  const history = useHistory();\n  const {dialog} = useGlobalState();\n\n  const visible = useMemo(() => {\n    if (!dialog.type) return false;\n    return true;\n  }, [dialog]);\n\n  const onClose = (type: string) => {\n    if (type === 'exitRoom') {\n      globalStore.removeDialog();\n    }\n    else if (type === 'apply') {\n      eduApi\n      .teacherRejectApply(\n        roomStore.state.course.roomId,\n        roomStore.state.applyUser.userId,\n      )\n      .then(() => {\n        globalStore.showToast({\n          type: 'peer_hands_up', \n          message: t('toast.reject_co_video')\n        });\n        globalStore.removeNotice();\n        globalStore.removeDialog();\n      })\n      .catch((err: any) => {\n        console.warn(err)\n      })\n    } else if (type === 'uploadLog') {\n      globalStore.removeDialog()\n    }\n  }\n\n  const onConfirm = (type: string) => {\n    if (type === 'exitRoom') {\n      globalStore.showLoading()\n      roomStore.exitRoom().finally(() => {\n        globalStore.removeDialog();\n        globalStore.stopLoading()\n        if (isElectron) {\n          history.push('/')\n        } else {\n          history.goBack()\n        }\n      })\n    }\n    else if (type === 'apply') {\n      // p2p message accept coVideo\n      // 老师同意学生连麦申请\n      eduApi.teacherAcceptApply(roomStore.state.course.roomId, roomStore.state.applyUser.userId)\n        .then(() => {\n          globalStore.showToast({\n            type: 'peer_hands_up', \n            message: t('toast.accept_co_video')\n          });\n          globalStore.removeNotice();\n          globalStore.removeDialog();\n        })\n        .catch((err: any) => {\n          console.warn(err)\n        })\n    }\n    else if (type === 'uploadLog') {\n      globalStore.removeDialog()\n    }\n\n    return;\n  }\n\n  return (\n    visible ? \n      <RoomDialog \n        type={dialog.type}\n        desc={dialog.message}\n        onClose={onClose}\n        onConfirm={onConfirm}\n      /> : \n      null\n  )\n}\n\n\nexport default React.memo(DialogContainer);","import React from 'react';\nimport './native-shared-window.scss';\nimport Button from './custom-button';\nimport { usePlatform } from '../containers/platform-container';\nimport { AgoraElectronClient } from '../utils/agora-electron-client';\nimport { AgoraStream } from '../utils/types';\nimport { globalStore } from '../stores/global';\nimport { roomStore } from '../stores/room';\nimport { useGlobalState } from '../containers/root-container';\nimport { eduApi } from '../services/edu-api';\nimport { t } from '../i18n';\n\nexport const WindowItem: React.FC<any> = ({\n  ownerName,\n  name,\n  className,\n  windowId,\n  image,\n}) => {\n\n  return (\n    <div className={className ? className : ''} >\n      <div className=\"screen-image\">\n        <div className=\"content\" style={{ backgroundImage: `url(data:image/png;base64,${image})` }}>\n        </div>\n      </div>\n      <div className=\"screen-meta\">{name}</div>\n    </div>\n  )\n}\n\nexport interface WindowListProps {\n  title: string\n  items: any[]\n  windowId: number\n  selectWindow: (windowId: any) => void\n  confirm: (evt: any) => void\n  cancel: (evt: any) => void\n}\n\nexport const WindowList: React.FC<WindowListProps> = ({\n  title,\n  items,\n  windowId,\n  selectWindow,\n  confirm,\n  cancel\n}) => {\n  return (\n    <div className=\"window-picker-mask\">\n      <div className=\"window-picker\">\n        <div className=\"header\">\n          <div className=\"title\">{title}</div>\n          <div className=\"cancelBtn\" onClick={cancel}></div>\n        </div>\n        <div className='screen-container'>\n          {\n            items.map((it: any, key: number) =>\n              <div className=\"screen-item\" \n                key={key}\n                onClick={() => {\n                  selectWindow(it.windowId);\n                }}\n                onDoubleClick={confirm}\n                >\n                <WindowItem\n                  ownerName={it.ownerName}\n                  name={it.name}\n                  className={`window-item ${it.windowId === windowId ? 'active' : ''}`}\n                  windowId={it.windowId}\n                  image={it.image}\n                />\n              </div>\n            )\n          }\n        </div>\n        <div className='footer'>\n          <Button className={'share-confirm-btn'} name={\"start\"}\n            onClick={confirm} />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default function NativeSharedWindowContainer() {\n\n  const {\n    platform\n  } = usePlatform();\n\n  const globalState = useGlobalState();\n  const nativeWindowInfo = globalState.nativeWindowInfo;\n  const [windowId, setWindowId] = React.useState<any>('');\n\n  return (\n    nativeWindowInfo.visible ? \n    <WindowList\n      windowId={windowId}\n      title={'Please select and click window for share'}\n      items={nativeWindowInfo.items}\n      cancel={() => {\n        globalStore.setNativeWindowInfo({visible: false, items: []});\n      }}\n      selectWindow={(windowId: any) => {\n        setWindowId(windowId)\n      }}\n      confirm={async (evt: any) => {\n        if (!windowId) {\n          console.warn(\"windowId is empty\");\n          return;\n        }\n        try {\n          if (platform === 'electron') {\n            globalStore.showLoading();\n            const rtcClient = roomStore.rtcClient;\n            const nativeClient = rtcClient as AgoraElectronClient;\n            // screen share token\n            let {screenToken} = await eduApi.refreshToken();\n            let electronStream = await nativeClient.startScreenShare(\n              windowId,\n              +roomStore.state.course.screenId,\n              roomStore.state.course.rid,\n              screenToken,\n              roomStore.state.appID,\n            );\n            roomStore.addLocalSharedStream(new AgoraStream(electronStream, electronStream.uid, true));\n          }\n        } catch(err) {\n          const rtcClient = roomStore.rtcClient;\n          const nativeClient = rtcClient as AgoraElectronClient;\n          nativeClient.releaseScreenShare()\n          globalStore.showToast({\n            type: 'nativeScreenShare',\n            message: t(\"electron.start_screen_share_failed\")\n          })\n          console.warn(JSON.stringify(err))\n          throw err;\n        } finally {\n          globalStore.stopLoading();\n          globalStore.setNativeWindowInfo({visible: false, items: []});\n        }\n      }}\n    />\n    : null\n  )\n}","import React, { useEffect, useMemo, useRef } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport Nav from '../../components/nav';\nimport RoomDialog from '../../components/dialog';\nimport { AgoraStream } from '../../utils/types';\nimport './room.scss';\nimport NativeSharedWindow from '../../components/native-shared-window';\nimport { roomStore } from '../../stores/room';\nimport { useRoomState } from '../../containers/root-container';\nimport { globalStore } from '../../stores/global';\nimport { platform } from '../../utils/platform';\nimport AgoraWebClient, { AgoraStreamSpec } from '../../utils/agora-rtc-client';\nimport { AgoraElectronClient, StreamType } from '../../utils/agora-electron-client';\nimport { t } from '../../i18n';\nimport { eduApi } from '../../services/edu-api';\nimport { genUUID } from '../../utils/api';\n// import { useInterval } from 'react-use';\n\nexport const roomTypes = [\n  {value: 0, path: 'one-to-one'},\n  {value: 1, path: 'small-class'},\n  {value: 2, path: 'big-class'},\n];\n\n// const delay = 5000\n\nexport function RoomPage({ children }: any) {\n\n  const history = useHistory();\n\n  const lock = useRef<boolean>(false);\n\n  // useInterval(() => {\n  //   roomStore.fetchRoomState()\n  // }, delay)\n\n  useEffect(() => {\n    const me = roomStore.state.me;\n    const course = roomStore.state.course;\n\n    if (!me.account || !course.roomName) {\n      history.push('/');\n    }\n\n    lock.current = true;\n    if (roomStore.state.rtm.joined) return;\n    globalStore.showLoading();\n    roomStore.fetchCurrentRoom().then(() => {\n    }).catch((err: any) => {\n      if (err.reason) {\n        globalStore.showToast({\n          type: 'rtmClient',\n          message: t('toast.rtm_login_failed_reason', {reason: err.reason}),\n        })\n      } else {\n        globalStore.showToast({\n          type: 'rtmClient',\n          message: t('toast.rtm_login_failed'),\n        })\n      }\n      console.warn(err)\n    }).finally(() => {\n      globalStore.stopLoading()\n    })\n  }, []);\n\n  const roomType = roomTypes[roomStore.state.course.roomType];\n\n  const location = useLocation();\n\n  const roomState = useRoomState();\n  const me = roomStore.state.me;\n  // const course = roomStore.state.course;\n  const classroom = Boolean(location.pathname.match(/classroom/));\n  // const isBigClass = Boolean(location.pathname.match(/big-class/));\n  const isSmallClass = Boolean(location.pathname.match(/small-class/));\n  \n  useEffect(() => {\n    return () => {\n      globalStore.removeUploadNotice();\n      roomStore.exitAll()\n      .then(() => {\n      })\n      .catch(console.warn)\n      .finally(() => {\n      });\n    }\n  }, [location]);\n\n  const rtc = useRef<boolean>(false);\n  \n  const canPublish = useMemo(() => {\n    return me.coVideo;\n  }, [me.coVideo]);\n\n  useEffect(() => {\n    return () => {\n      rtc.current = true\n    }\n  },[]);\n\n  const publishLock = useRef<boolean>(false);\n\n  const {rtcJoined, uid, role, mediaDevice} = useMemo(() => {\n    return {\n      rtcJoined: roomState.rtc.joined,\n      uid: roomState.me.uid,\n      role: roomState.me.role,\n      mediaDevice: roomState.mediaDevice,\n    }\n  }, [roomState]);\n\n  useEffect(() => {\n    if (!location.pathname.match(/big-class/) || me.role === 1) return\n    // if (course.linkId) return;\n    const rtcClient = roomStore.rtcClient;\n    if (platform === 'web') {\n      const webClient = rtcClient as AgoraWebClient;\n      if (!webClient.published) return;\n      Promise.all([\n        webClient\n        .unpublishLocalStream()\n      ])\n        .then(() => {\n          console.log(\"[agora-web] unpublish local stream\");\n        }).catch(console.warn)\n    }\n\n    if (platform === 'electron') {\n      const nativeClient = rtcClient as AgoraElectronClient;\n      if (!nativeClient.published) return;\n      nativeClient.unpublish();\n    }\n\n  }, [me.role, location.pathname, canPublish]);\n\n  useEffect(() => {\n    if (!rtcJoined || rtc.current) return;\n\n    if (platform === 'web') {\n      const webClient = roomStore.rtcClient as AgoraWebClient;\n      const uid = +roomStore.state.me.uid as number;\n      const streamSpec: AgoraStreamSpec = {\n        streamID: uid,\n        video: true,\n        audio: true,\n        mirror: false,\n        screen: false,\n        microphoneId: mediaDevice.microphoneId,\n        cameraId: mediaDevice.cameraId,\n        audioOutput: {\n          volume: mediaDevice.speakerVolume,\n          deviceId: mediaDevice.speakerId\n        }\n      }\n      console.log(\"canPb>>> \", canPublish, roomStore.state.me.uid);\n      if (canPublish && !publishLock.current) {\n        publishLock.current = true;\n        Promise.all([\n          webClient\n          .publishLocalStream(streamSpec)\n        ])\n        .then((res: any[]) => {\n          console.log(\"[agora-web] any: \", res[0], res[1]);\n          console.log(\"[agora-web] publish local stream\");\n        }).catch(console.warn)\n        .finally(() => {\n          publishLock.current = false;\n        })\n      }\n    }\n\n    if (platform === 'electron' && rtcJoined) {\n      const nativeClient = roomStore.rtcClient as AgoraElectronClient;\n      if (canPublish && !publishLock.current) {\n        publishLock.current = true;\n        console.log(\"board updateLocal\")\n        nativeClient.publish();\n        publishLock.current = false;\n      }\n    }\n  }, [\n    rtcJoined,\n    uid,\n    role,\n    mediaDevice,\n    canPublish,\n  ]);\n\n  useEffect(() => {\n    if (!roomState.me.uid || !roomState.course.rid ||!roomState.appID) return;\n    if (classroom) {\n      if (platform === 'web') {\n        const webClient = roomStore.rtcClient as AgoraWebClient;\n        if (webClient.joined || rtc.current) {\n          return;\n        }\n        console.log(\"[agora-rtc] add event listener\");\n        webClient.rtc.on('onTokenPrivilegeWillExpire', (evt: any) => {\n          // you need obtain the `newToken` token from server side \n          eduApi.refreshToken().then((res: any) => {\n            const newToken = res.rtcToken\n            webClient.rtc.renewToken(newToken);\n            console.log('[agora-web] onTokenPrivilegeWillExpire', evt);\n          })\n        });\n        webClient.rtc.on('onTokenPrivilegeDidExpire', (evt: any) => {\n          // you need obtain the `newToken` token from server side \n          eduApi.refreshToken().then((res: any) => {\n            const newToken = res.rtcToken\n            webClient.rtc.renewToken(newToken);\n            console.log('[agora-web] onTokenPrivilegeDidExpire', evt);\n          })\n        });\n        webClient.rtc.on('error', (evt: any) => {\n          console.log('[agora-web] error evt', evt);\n        });\n        webClient.rtc.on('stream-published', ({ stream }: any) => {\n          const _stream = new AgoraStream(stream, stream.getId(), true);\n          roomStore.addLocalStream(_stream);\n          roomStore.addRTCUser(stream.getId())\n        });\n        webClient.rtc.on('stream-subscribed', ({ stream }: any) => {\n          const streamID = stream.getId();\n          // when streamID is not share_id use switch high or low stream in dual stream mode\n          if (location.pathname.match(/small-class/)) {\n            if (roomStore.state.course.teacherId\n              && roomStore.state.course.teacherId === `${streamID}`) {\n              webClient.setRemoteVideoStreamType(stream, 0);\n              console.log(\"[agora-web] dual stream set high for teacher\");\n            }\n            else {\n              webClient.setRemoteVideoStreamType(stream, 1);\n              console.log(\"[agora-web] dual stream set low for student\");\n            }\n          }\n          const _stream = new AgoraStream(stream, stream.getId(), false);\n          console.log(\"[agora-web] subscribe remote stream, id: \", stream.getId());\n          roomStore.addRemoteStream(_stream);\n        });\n        webClient.rtc.on('stream-added', ({ stream }: any) => {\n          console.log(\"[agora-web] added remote stream, id: \", stream.getId());\n          webClient.subscribe(stream);\n        });\n        webClient.rtc.on('stream-removed', ({ stream }: any) => {\n          console.log(\"[agora-web] removed remote stream, id: \", stream.getId());\n          // const id = stream.getId();\n          roomStore.removeRemoteStream(stream.getId());\n        });\n        webClient.rtc.on('peer-online', ({uid}: any) => {\n          console.log(\"[agora-web] peer-online, id: \", uid);\n          roomStore.addRTCUser(uid);\n        });\n        webClient.rtc.on('peer-leave', ({ uid }: any) => {\n          console.log(\"[agora-web] peer-leave, id: \", uid);\n          roomStore.removePeerUser(uid);\n          roomStore.removeRemoteStream(uid);\n\n          if (roomStore.state.me.role === 1 && roomStore.state.course.roomType === 2) {\n            if (roomStore.state.applyUser.account) {\n              globalStore.showToast({\n                type: 'rtmClient',\n                message: t('toast.student_peer_leave', {reason: roomStore.state.applyUser.account}),\n              })\n            }\n          }\n        });\n        webClient.rtc.on(\"stream-fallback\", ({ uid, attr }: any) => {\n          const msg = attr === 0 ? 'resume to a&v mode' : 'fallback to audio mode';\n          console.info(`[agora-web] stream: ${uid} fallback: ${msg}`);\n        })\n        rtc.current = true;\n        // WARN: IF YOU ENABLED APP CERTIFICATE, PLEASE SIGN YOUR TOKEN IN YOUR SERVER SIDE AND OBTAIN IT FROM YOUR OWN TRUSTED SERVER API\n        webClient\n          .joinChannel({\n            uid: +roomState.me.uid, \n            channel: roomState.course.rid,\n            token: roomState.me.rtcToken,\n            dual: isSmallClass,\n            appId: roomState.appID,\n          }).then(() => {\n            \n          }).catch(console.warn).finally(() => {\n            rtc.current = false;\n          });\n        return () => {\n          const events = [\n            'onTokenPrivilegeWillExpire',\n            'onTokenPrivilegeDidExpire',\n            'error',\n            'stream-published',\n            'stream-subscribed',\n            'stream-added',\n            'stream-removed',\n            'peer-online',\n            'peer-leave',\n            'stream-fallback'\n          ]\n          for (let eventName of events) {\n            webClient.rtc.off(eventName, () => {});\n          }\n          console.log(\"[agora-web] remove event listener\");\n          !rtc.current && webClient.exit().then(() => {\n            console.log(\"[agora-web] do remove event listener\");\n          }).catch(console.warn)\n            .finally(() => {\n              rtc.current = true;\n              roomStore.removeLocalStream();\n            });\n        }\n      }\n\n      if (platform === 'electron') {\n        const rtcClient = roomStore.rtcClient;\n        const nativeClient = rtcClient as AgoraElectronClient;\n        if (nativeClient.joined) {\n          console.log(\"[agora-electron] electron joined \", nativeClient.joined);\n          return;\n        }\n        nativeClient.on('executefailed', (...args: any[]) => {\n          console.warn(\"[agora-electron] executefailed\", ...args);\n        });\n        nativeClient.on('error', (evt: any) => {\n          console.warn('[agora-electron] error evt', evt);\n        });\n        // when trigger `joinedchannel` it means publish rtc stream success\n        nativeClient.on('joinedchannel', (evt: any) => {\n          console.log(\"[agora-electron stream-published\")\n          const stream = evt.stream;\n          const _stream = new AgoraStream(stream, stream.uid, true);\n          roomStore.addLocalStream(_stream);\n        });\n        // when trigger `userjoined` it means peer user & peer stream is online\n        nativeClient.on('userjoined', (evt: any) => {\n          const stream = evt.stream;\n          const _stream = new AgoraStream(stream, stream.uid, false);\n          if (location.pathname.match(/small-class/) && +stream.uid !== +roomStore.state.course.screenId) {\n            if (roomStore.state.course.teacherId\n              && roomStore.state.course.teacherId === `${stream.uid}`) {\n              const res = nativeClient.rtcEngine.setRemoteVideoStreamType(stream, 0);\n              console.log(\"[agora-electron] dual stream set high for teacher, \", res);\n            }\n            else {\n              const res = nativeClient.rtcEngine.setRemoteVideoStreamType(stream, 1);\n              console.log(\"[agora-electron] dual stream set low for student, \", res);\n            }\n          }\n          if (_stream && _stream.stream && +roomStore.state.course.screenId === +stream.uid) {\n            if (+roomStore.state.course.screenId === +roomStore.state.me.screenId) {\n              _stream.stream.type = StreamType.localVideoSource\n            } else {\n              _stream.stream.type = StreamType.remoteVideoSource\n            }\n          }\n          roomStore.addRTCUser(stream.uid);\n          roomStore.addRemoteStream(_stream);\n        });\n        // when trigger `removestream` it means peer user & peer stream is offline\n        nativeClient.on('removestream', ({ uid }: any) => {\n          roomStore.removePeerUser(uid);\n          roomStore.removeRemoteStream(uid);\n        });\n        // WARN: IF YOU ENABLED APP CERTIFICATE, PLEASE SIGN YOUR TOKEN IN YOUR SERVER SIDE AND OBTAIN IT FROM YOUR OWN TRUSTED SERVER API\n        nativeClient.joinChannel({\n          uid: +roomState.me.uid, \n          channel: roomState.course.rid,\n          token: roomState.me.rtcToken,\n          dual: isSmallClass\n        });\n        roomStore.setRTCJoined(true);\n        return () => {\n          const events = [\n            'executefailed',\n            'error',\n            'joinedchannel',\n            'userjoined',\n            'removestream',\n          ]\n          for (let eventName of events) {\n            nativeClient.off(eventName, () => {})\n          }\n          !rtc.current && nativeClient.exit();\n          !rtc.current && roomStore.setRTCJoined(false);\n          !rtc.current && roomStore.removeLocalStream();\n        }\n      }\n    }\n  }, [JSON.stringify([roomState.me.uid, roomState.course.rid, roomState.appID])]);\n\n  return (\n    <div className={`classroom ${roomType.path}`}>\n      <NativeSharedWindow />\n      <Nav />\n      {children}\n      <RoomDialog />\n    </div>\n  );\n}\n\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { useGlobalState } from '../containers/root-container';\n\nconst useStyles = makeStyles(theme => ({\n  progress: {\n    margin: theme.spacing(2),\n    color: '#44A2FC'\n  },\n  container: {\n    position: 'absolute',\n    top: '0px',\n    left: '0px',\n    height: '100%',\n    width: '100%',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    background: '#ffffff',\n    opacity: 0.8,\n    zIndex: 99999\n  }\n}));\n\nexport const Loading: React.FC<{}> = () => {\n  const classes = useStyles();\n  return (\n    <div className={classes.container}>\n      <CircularProgress className={classes.progress} />\n    </div>\n  );\n}\n\nexport default function LoadContainer () {\n\n  const state = useGlobalState();\n\n  const loading = state.loading;\n\n  return (\n    loading ? <Loading /> : null\n  )\n}","import React, { useEffect, useRef, useState } from 'react';\nimport './toast.scss';\nimport {useGlobalState} from '../containers/root-container';\nimport { isEmpty } from 'lodash';\n\nexport interface SnackbarMessage {\n  message: string;\n  key: number;\n}\n\ninterface SnackbarsProps {\n  duration?: number\n}\n\nexport default function ConsecutiveSnackbars({\n  duration = 2500\n}: SnackbarsProps) {\n\n  const globalState = useGlobalState();\n\n  const queueRef = React.useRef<SnackbarMessage[]>([]);\n  const [messages, setMessages] = useState<SnackbarMessage[]>([]);\n  const timerRef = useRef<any>(null);\n\n  useEffect(() => {\n    if (messages.length > 0 && timerRef.current === null) {\n      timerRef.current = setTimeout(() => {\n        queueRef.current.shift()\n        setMessages([...queueRef.current]);\n        timerRef.current = null;\n      }, duration);\n    }\n  }, [messages]);\n\n  useEffect(() => {\n    if (queueRef.current && globalState.toast.message) {\n      queueRef.current.push({\n        message: globalState.toast.message,\n        key: +Date.now()\n      })\n      setMessages([...queueRef.current]);\n    }\n  }, [globalState.toast]);\n\n  return (\n    <div className=\"notice-message-container\">\n      {messages.map((message: any, idx: number) => \n        <div key={`${idx}${message.key}`} className={\"custom-toast\"}>\n          <div className=\"toast-container\">\n            <span className=\"text\">{message.message}</span>\n          </div>\n        </div>\n      )}\n    </div>\n  )\n}\n","import React from 'react';\nimport './progress.scss';\nimport { CircularProgress } from '@material-ui/core';\n\ntype ProgressProps = {\n  title: string\n}\n\nexport const Progress: React.FC<ProgressProps> = ({\n  title,\n}) => {\n  return (\n    <div className=\"progress-cover\">\n      <div className=\"progress\">\n        <div className=\"content\">\n          <CircularProgress className=\"circular\"/>\n          <span className=\"title\">{title}...</span>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default React.memo(Progress);","import React from 'react';\nimport { Subject } from 'rxjs';\nimport { Player, PlayerPhase } from 'white-web-sdk';\nimport { useParams, useLocation, Redirect } from 'react-router';\nimport moment from 'moment';\nimport { Progress } from '../../components/progress/progress';\nimport { globalStore } from '../../stores/global';\nimport { WhiteboardAPI, RTMRestful } from '../../utils/api';\nimport { whiteboard } from '../../stores/whiteboard';\nimport { RtmPlayerState } from '../../components/whiteboard/agora/rtm-player';\nimport { eduApi } from '../../services/edu-api';\n\ninterface IObserver<T> {\n  subscribe: (setState: (state: T) => void) => void\n  unsubscribe: () => void\n  defaultState: T\n}\n\nexport function useObserver<T>(store: IObserver<T>) {\n  const [state, setState] = React.useState<T>(store.defaultState);\n  React.useEffect(() => {\n    store.subscribe((state: any) => {\n      setState(state);\n    });\n    return () => {\n      store.unsubscribe();\n    }\n  }, []);\n\n  return state;\n}\n\n\nexport interface IPlayerState {\n  beginTimestamp: number\n  duration: number\n  roomToken: string\n  mediaURL: string\n  isPlaying: boolean\n  progress: number\n\n  currentTime: number\n  phase: string\n  boardPlayPhase: PlayerPhase\n  isFirstScreenReady: boolean\n  isPlayerSeeking: boolean\n  isChatOpen: boolean\n  isVisible: boolean\n  replayFail: boolean\n  courseRecordData: {\n    startTime: number\n    endTime: number\n    url: string\n    boardId: string\n    status: number\n    statusText: string\n  }\n  player: any\n  timelineScheduler: any\n  videoPlayer: any\n}\n\nexport const defaultState: IPlayerState = {\n  beginTimestamp: 0,\n  duration: 0,\n  roomToken: '',\n  mediaURL: '',\n  isPlaying: false,\n  progress: 0,\n\n  currentTime: 0,\n  phase: 'waiting',\n  boardPlayPhase: PlayerPhase.Pause,\n  isFirstScreenReady: false,\n  isPlayerSeeking: false,\n  isChatOpen: false,\n  isVisible: false,\n  replayFail: false,\n\n  courseRecordData: {\n    startTime: -1,\n    endTime: -1,\n    url: '',\n    boardId: '',\n    status: 0,\n    statusText: '',\n  },\n  player: null,\n  videoPlayer: null,\n  timelineScheduler: null\n}\n\nclass ReplayStore {\n  public subject: Subject<IPlayerState> | null;\n  public state: IPlayerState | null;\n  public defaultState: IPlayerState = defaultState\n\n  constructor() {\n    this.subject = null;\n    this.state = null;\n  }\n\n  initialize() {\n    this.subject = new Subject<IPlayerState>();\n    this.state = defaultState;\n    this.subject.next(this.state);\n  }\n\n  subscribe(setState: any) {\n    this.initialize();\n    this.subject && this.subject.subscribe(setState);\n  }\n\n  unsubscribe() {\n    this.subject && this.subject.unsubscribe();\n    this.state = null;\n    this.subject = null;\n  }\n\n  commit(state: IPlayerState) {\n    this.subject && this.subject.next(state);\n  }\n\n  setPlayer(player: Player) {\n    if (!this.state) return;\n    this.state = {\n      ...this.state,\n      player\n    }\n    this.commit(this.state);\n  }\n\n  setCurrentTime(scheduleTime: number) {\n    if (!this.state) return;\n    this.state = {\n      ...this.state,\n      currentTime: scheduleTime\n    }\n    this.commit(this.state);\n  }\n\n  async getCourseRecordBy(recordId: string, roomId: string, userToken: string) {\n    if (!this.state) return;\n    if (this.state.courseRecordData.status === 2 && this.state.courseRecordData.url) return;\n    const {boardId, startTime, endTime, url, status, statusText} = await eduApi.getCourseRecordBy(recordId as string, roomId as string, userToken)\n    this.state = {\n      ...this.state,\n      courseRecordData: {\n        startTime,\n        endTime,\n        url,\n        boardId,\n        status,\n        statusText\n      }\n    }\n    this.commit(this.state)\n  }\n\n  updatePlayerStatus(isPlaying: boolean) {\n    if (!this.state) return;\n\n    this.state = {\n      ...this.state,\n      isPlaying,\n    }\n    if (!this.state.isPlaying && this.state.player) {\n      this.state.player.seekToScheduleTime(0);\n    }\n    this.commit(this.state);\n  }\n\n  updateProgress(progress: number) {\n    if (!this.state) return\n    this.state = {\n      ...this.state,\n      progress\n    }\n    this.commit(this.state);\n  }\n\n  setReplayFail(val: boolean) {\n    if (!this.state) return\n    this.state = {\n      ...this.state,\n      replayFail: val\n    }\n    this.commit(this.state);\n  }\n\n  updateWhiteboardPhase(boardPlayPhase: PlayerPhase) {\n    if (!this.state) return\n    let isPlaying = this.state.isPlaying;\n\n    if (boardPlayPhase === PlayerPhase.Playing) {\n      isPlaying = true;\n    }\n\n    if (boardPlayPhase === PlayerPhase.Ended || boardPlayPhase === PlayerPhase.Pause) {\n      isPlaying = false;\n    }\n\n    this.state = {\n      ...this.state,\n      boardPlayPhase,\n      isPlaying,\n    }\n    \n    this.commit(this.state);\n  }\n\n  // updatePhase(phase: PlayerPhase) {\n  //   if (!this.state) return\n  //   let isPlaying = this.state.isPlaying;\n\n  //   if (phase === PlayerPhase.Playing) {\n  //     isPlaying = true;\n  //   }\n\n  //   if (phase === PlayerPhase.Ended || phase === PlayerPhase.Pause) {\n  //     isPlaying = false;\n  //   }\n\n  //   this.state = {\n  //     ...this.state,\n  //     phase,\n  //     isPlaying,\n  //   }\n    \n  //   this.commit(this.state);\n  // }\n\n  updatePlayState(phase: any) {\n    if (!this.state) return\n\n    this.state = {\n      ...this.state,\n      phase,\n    }\n    \n    this.commit(this.state);\n  }\n\n  // loadFirstFrame() {\n  //   if (!this.state) return\n  //   this.state = {\n  //     ...this.state,\n  //     isFirstScreenReady: true,\n  //   }\n  //   this.commit(this.state);\n  // }\n\n  addWhiteboardPlayer(player: any) {\n    if (!this.state) return\n    this.state = {\n      ...this.state,\n      player: player\n    }\n    this.commit(this.state)\n  }\n\n  addVideoPlayer(player: any) {\n    if (!this.state) return\n    this.state = {\n      ...this.state,\n      videoPlayer: player\n    }\n    this.commit(this.state)\n  }\n\n  addTimeline(scheduler: any) {\n    if (!this.state) return\n    this.state = {\n      ...this.state,\n      timelineScheduler: scheduler\n    }\n    this.commit(this.state)\n  }\n\n  async joinRoom(roomId: string) {\n    const res = await eduApi.getWhiteboardBy(roomId);\n    return {\n      roomToken: res.boardToken,\n      uuid: res.boardId,\n    }\n  }\n}\n\nexport const replayStore = new ReplayStore();","import { WhiteWebSdk, ReplayRoomParams, PlayerCallbacks } from 'white-web-sdk';\n\nexport const WhiteboardAPI = {\n  async replayRoom(client: WhiteWebSdk, args: ReplayRoomParams, callback: PlayerCallbacks) {\n    let retrying;\n    do {\n      try {\n        let result = await client.replayRoom({\n          beginTimestamp: args.beginTimestamp,\n          duration: args.duration,\n          room: args.room,\n          mediaURL: args.mediaURL,\n          roomToken: args.roomToken,\n        }, callback);\n        retrying = false;\n        return result;\n      } catch (err) {\n        retrying = true;\n      }\n    } while (retrying);\n  }\n}","import {get, isEmpty} from 'lodash';\nimport { AgoraFetch } from '../fetch';\n\nconst url = `${window.location.protocol}//${window.location.host}/dev/v2/project/%s/rtm`;\nconst PREFIX = url.replace('%s', process.env.REACT_APP_AGORA_APP_ID as string);\n\nexport type QueryChannelMessage = {\n  channelName: string,\n  startTime: string,\n  endTime: string\n}\n\nexport type AgoraChannelMessage = {\n  dst: string\n  message_type: string\n  ms: number\n  payload: string\n  src: string\n}\n\nexport class RTMRestful {\n  startTime: number\n  endTime: number\n  source: string\n  destination: string\n  customerId: string\n  appSecret: string\n  totalCount: number\n  offset: number\n  limit: number\n\n  constructor(customerId: string, appSecret: string) {\n    this.startTime = 0\n    this.endTime = 0\n    this.source = ''\n    this.destination = ''\n    this.customerId = customerId\n    this.appSecret = appSecret\n    this.totalCount = 0\n    this.offset = 0\n    this.limit = 100\n    // this.agoraAppId = appId\n  }\n\n  private basicAuthorization(): string {\n    const plainCredentials = `${this.customerId}:${this.appSecret}`;\n    return `Basic ${btoa(plainCredentials)}`;\n  }\n\n  async fetchChannelMessageCount({channelName, startTime, endTime}: QueryChannelMessage) {\n    const response: Response = await AgoraFetch(`${PREFIX}/message/history/count?destination=${channelName}&start_time=${startTime}&end_time=${endTime}`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: this.basicAuthorization(),\n      },\n    });\n    // const json = await response.json();\n    const json = response;\n    const count = get(json, 'count');\n    this.totalCount = count;\n    this.offset = 0;\n    this.limit = 100;\n    return count;\n  }\n\n  async fetchChannelMessages({\n    channelName, startTime, endTime\n  }: QueryChannelMessage): Promise<AgoraChannelMessage[]> {\n    const responseA: Response = await AgoraFetch(`${PREFIX}/message/history/query`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: this.basicAuthorization(),\n      },\n      body: JSON.stringify({\n          filter: {\n            source: \"\",\n            destination: channelName,\n            start_time: startTime,\n            end_time: endTime\n          },\n          offset: this.offset,\n          limit: this.limit,\n          order: \"asc\"\n        })\n    });\n    const jsonA = responseA;\n    const location = get(jsonA, 'location');\n    if (isEmpty(location)) {\n      throw `location from agora rtm endpoint must be present`\n    }\n    const respB = await AgoraFetch(`${PREFIX}/message/history/query/${location.replace('~/rtm/message/history/query/', '')}`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: this.basicAuthorization(),\n      },\n    });\n    // const jsonB = await respB.json();\n    const jsonB = respB;\n    const messages = get(jsonB, 'messages');\n    return messages;\n  }\n\n  async getAllChannelMessages(params: QueryChannelMessage) {\n    let count = await this.fetchChannelMessageCount(params);\n    if (count === 0) {\n      return undefined;\n    }\n    let totalCount = this.totalCount;\n    let channelMessages: AgoraChannelMessage[] = [];\n    while (totalCount > 0) {\n      const messages = await this.fetchChannelMessages(params);\n      channelMessages = channelMessages.concat(...messages);\n      if (totalCount >= messages.length) {\n        totalCount = totalCount - messages.length;\n        this.offset = channelMessages.length;\n        this.limit = 100;\n      }\n    }\n    return channelMessages;\n  }\n}\n\n//@ts-ignore\nwindow.RTMRestful = new RTMRestful(process.env.REACT_APP_AGORA_CUSTOMER_ID as string, process.env.REACT_APP_AGORA_CUSTOMER_CERTIFICATE as string);","import {useEffect, useState, useRef, useCallback, Fragment, useMemo} from 'react';\nimport {useAsync} from 'react-use';\nimport { RTMRestful, AgoraChannelMessage } from '../../../utils/api/rtm-restful';\nimport moment from 'moment';\nimport React from 'react';\nimport { Message } from '../../chat/message';\n\nexport interface RtmReplayResult {\n  loading: boolean\n  list?: RtmReplayList \n}\n\nexport type RtmReplayList = AgoraChannelMessage[] | undefined;\n\nexport enum RtmPlayerState {\n  pending = 'pending',\n  loading = 'loading',\n  load = 'load',\n};\n\nexport type RtmReplayProps = {\n  channelName: string,\n  startTime: number,\n  endTime: number,\n  currentSeekTime: number,\n  senderId?: string,\n  onPhaseChanged?: (e: RtmPlayerState) => void,\n};\n\nconst RtmPlayer = ({currentSeekTime, senderId, ...props}: RtmReplayProps) => {\n\n  const ref = useRef<any>(null);\n\n  const [state, setState] = useState<RtmPlayerState>(RtmPlayerState.pending);\n\n  useEffect(() => {\n    props.onPhaseChanged && props.onPhaseChanged(state);\n  }, [state]);\n\n  const {value, loading} = useAsync<AgoraChannelMessage[] | undefined>(async (): Promise<AgoraChannelMessage[] | undefined> => {\n    if (!props.channelName || !props.startTime || !props.endTime) {\n      throw new Error(`startTime & endTime & channelName shouldn't be empty`);\n    }\n\n    if (props.startTime > props.endTime) {\n      throw new Error(`startTime > endTime, please check your startTime and endTime`);\n    }\n\n    const rtmRecord = new RTMRestful(process.env.REACT_APP_AGORA_CUSTOMER_ID as string, process.env.REACT_APP_AGORA_CUSTOMER_CERTIFICATE as string);\n    const params = {\n      channelName: props.channelName,\n      startTime: moment(+props.startTime).utc().format('YYYY-MM-DDTHH:mm:ss'),\n      endTime: moment(+props.endTime).utc().format('YYYY-MM-DDTHH:mm:ss'),\n    }\n    return await rtmRecord.getAllChannelMessages(params)\n  }, [JSON.stringify(props)]);\n\n  useEffect(() => {\n    if (!loading) {\n      setState(RtmPlayerState.load);\n    }\n  }, [loading]);\n\n  const serializeMessage = (item: any) => {\n    const {account, content, link} = JSON.parse(item.payload);\n    return {\n      account,\n      content,\n      link,\n      ms: item.ms,\n      uid: item.src\n    }\n  }\n\n  const rtmMessages = useMemo(() => {\n    if (!value) return [];\n    return value\n    .filter((it: any) => it.payload)\n    .map(serializeMessage);\n  }, [value]);\n\n  const replayMessages = useMemo(() => {\n    if (props.startTime && state === RtmPlayerState.load && rtmMessages && rtmMessages.length) {\n      const time = +props.startTime + currentSeekTime;\n      return rtmMessages.filter((it: any) => (time >= it.ms));\n    }\n    return [];\n  }, [JSON.stringify([rtmMessages.length, currentSeekTime, state, props.startTime])]);\n\n  const scrollDown = (current: any) => {\n    current.scrollTop = current.scrollHeight;\n  }\n\n  useEffect(() => {\n    scrollDown(ref.current);\n  }, [replayMessages.length]);\n\n  const MessageList = useCallback(() => {\n    if (replayMessages) {\n      return (\n        <Fragment>\n          {\n          replayMessages\n          .map((item: any, key: number) => \n          (<Message\n              key={key}\n              nickname={item.account}\n              content={item.content}\n              link={item.link}\n              sender={item.uid === senderId}\n            >\n          </Message>)\n          )}\n        </Fragment>\n      )\n    }\n    return null;\n  }, [replayMessages.length, senderId]);\n\n  return (\n    <div className=\"chat-messages\" ref={ref}>\n      {state !== RtmPlayerState.load ? null : \n        <MessageList></MessageList>\n      }\n    </div>\n  )\n}\n\n// Feat: RTM replay \n// 功能: RTM 回放web集成\nexport const RTMReplayer = React.memo(RtmPlayer);","import React from 'react';\nimport './index.scss';\nimport { Link } from 'react-router-dom';\nimport { useRoomState } from '../../containers/root-container';\nimport { t } from '../../i18n';\nimport { eduApi } from '../../services/edu-api';\nimport { roomStore } from '../../stores/room';\ninterface MessageProps {\n  nickname: string\n  content: string\n  link?: string\n  sender?: boolean\n  children?: any\n  ref?: any\n  className?: string\n}\n\nexport const Message: React.FC<MessageProps> = ({\n  nickname,\n  content,\n  link,\n  sender,\n  children,\n  ref,\n  className\n}) => {\n\n  const roomState = useRoomState();\n\n  const text = React.useMemo(() => {\n    if (link && roomState.course.rid) {\n      return (\n        <Link to={`/replay/record/${link}?roomId=${roomState.course.roomId}&token=${eduApi.userToken}&senderId=${roomStore.state.me.uid}&channelName=${roomStore.state.course.rid}`} target=\"_blank\">{t('course_recording')}</Link>\n      )\n    }\n    return link ? link : content;\n  }, [content, link, roomState.course.roomId])\n\n  return (\n  <div ref={ref} className={`message ${sender ? 'sent': 'receive'} ${className ? className : ''}`}>\n    <div className=\"nickname\">\n      {nickname}\n    </div>\n    <div className=\"content\">\n      {text}\n    </div>\n    {children ? children : null}\n  </div>\n  )\n}","export enum LogLevel {\n  DEBUG = 'debug',\n  NONE = 'none'\n}\n\nconst rawLog = console\n\nexport class PlayerLogger {\n  constructor (public readonly level: LogLevel = LogLevel.DEBUG) {\n  }\n\n  prefix(text: string) {\n    return `[${this.level}] ${text}`\n  }\n\n  info (text: string, ...args: any[]) {\n    rawLog.info(this.prefix(text), ...args)\n  }\n\n  warn (text: string, ...args: any[]) {\n    rawLog.info(this.prefix(text), ...args)\n  }\n\n  error (text: string, ...args: any[]) {\n    rawLog.error(this.prefix(text), ...args)\n  }\n}","import React, { useEffect, useMemo, useRef, useCallback, useState } from 'react';\nimport '../replay.scss';\nimport Slider from '@material-ui/core/Slider';\nimport { Player, PlayerPhase } from 'white-web-sdk';\nimport { useParams, useLocation } from 'react-router';\nimport moment from 'moment';\nimport { Progress } from '../../components/progress/progress';\nimport { globalStore } from '../../stores/global';\nimport { replayStore, useObserver, IPlayerState } from './model';\nimport { WhiteboardAPI } from '../../utils/api';\nimport { whiteboard } from '../../stores/whiteboard';\nimport \"video.js/dist/video-js.css\";\nimport { RTMReplayer, RtmPlayerState } from '../../components/whiteboard/agora/rtm-player';\nimport { useInterval } from 'react-use';\nimport { isElectron } from '../../utils/platform';\nimport { t } from '../../i18n';\n\nconst delay = 5000\n\n\nconst ReplayContext = React.createContext({} as IPlayerState);\n\nconst useReplayContext = () => React.useContext(ReplayContext);\n\nconst ReplayContainer: React.FC<{}> = () => {\n  const replayState = useObserver<IPlayerState>(replayStore)\n\n  const {recordId} = useParams();\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const roomId: string = searchParams.get('roomId') as string;\n  const userToken: string = searchParams.get('token') as string;\n  const senderId: string = searchParams.get('senderId') as string;\n  const channelName: string = searchParams.get('channelName') as string;\n\n  useInterval(() => {\n    replayStore.getCourseRecordBy(recordId as string, roomId as string, userToken)\n  }, delay)\n\n  const value = replayState;\n\n  const result = value.courseRecordData;\n\n  return (\n    <ReplayContext.Provider value={value}>\n      {result?.status !== 2 ?\n        <Progress title={t(`replay.${result?.statusText ? result?.statusText : 'loading'}`)} /> : \n        <NetlessAgoraReplay\n          roomId={roomId}\n          senderId={senderId}\n          channelName={channelName}\n          whiteboardUUID={result?.boardId as string}\n          startTime={result?.startTime as number}\n          endTime={result?.endTime as number}\n          mediaUrl={result?.url as string} />\n      }\n    </ReplayContext.Provider>\n  )\n}\n\nexport default ReplayContainer;\n\nexport type NetlessAgoraReplayProps = {\n  whiteboardUUID: string\n  startTime: number\n  endTime: number\n  mediaUrl: string\n  senderId: string\n  channelName: string\n  roomId: string\n}\n\nexport const NetlessAgoraReplay: React.FC<NetlessAgoraReplayProps> = ({\n  whiteboardUUID: uuid,\n  startTime,\n  endTime,\n  mediaUrl,\n  senderId,\n  channelName,\n  roomId\n}) => {\n  const state = useReplayContext();\n\n  const player = useMemo(() => {\n    if (!replayStore.state || !replayStore.state.player) return null;\n    return replayStore.state.player as Player;\n  }, [replayStore.state]);\n\n  const handlePlayerClick = () => {\n    if (!replayStore.state || !player) return;\n\n    if (player.phase === PlayerPhase.Playing) {\n      player.pause();\n      return;\n    }\n    if (player.phase === PlayerPhase.WaitingFirstFrame || player.phase === PlayerPhase.Pause) {\n      player.play();\n      return;\n    }\n\n    if (player.phase === PlayerPhase.Ended) {\n      player.seekToScheduleTime(0);\n      player.play();\n      return;\n    }\n  }\n\n  const handleChange = (event: any, newValue: any) => {\n    replayStore.setCurrentTime(newValue);\n    replayStore.updateProgress(newValue);\n  }\n\n  const onWindowResize = () => {\n    if (state.player) {\n      state.player.refreshViewSize();\n    }\n  }\n\n  const handleSpaceKey = (evt: any) => {\n    if (evt.code === 'Space') {\n      if (state.player) {\n        handleOperationClick(state.player);\n      }\n    }\n  }\n\n  const handleOperationClick = (player: Player) => {\n    switch (player.phase) {\n      case PlayerPhase.WaitingFirstFrame:\n      case PlayerPhase.Pause: {\n        player.play();\n        break;\n      }\n      case PlayerPhase.Playing: {\n        player.pause();\n        break;\n      }\n      case PlayerPhase.Ended: {\n        player.seekToScheduleTime(0);\n        break;\n      }\n    }\n  }\n\n  const duration = useMemo(() => {\n    if (!startTime || !endTime) return 0;\n    const _duration = Math.abs(+startTime - +endTime);\n    return _duration;\n  }, [startTime, endTime]);\n\n  const lock = useRef<boolean>(false);\n\n  useEffect(() => {\n    return () => {\n      lock.current = true;\n    }\n  }, []);\n\n  useEffect(() => {\n    window.addEventListener('resize', onWindowResize);\n    window.addEventListener('keydown', handleSpaceKey);\n    if (roomId && startTime && endTime) {\n        replayStore.joinRoom(roomId).then(({roomToken, uuid}) => {\n          WhiteboardAPI.replayRoom(whiteboard.client,\n          {\n            beginTimestamp: +startTime,\n            duration: duration,\n            room: uuid,\n            mediaURL: mediaUrl,\n            roomToken: roomToken,\n          }, {\n            onCatchErrorWhenRender: error => {\n              error && console.warn(error);\n              globalStore.showToast({\n                message: t('toast.replay_failed'),\n                type: 'notice'\n              });\n            },\n            onCatchErrorWhenAppendFrame: error => {\n              error && console.warn(error);\n              globalStore.showToast({\n                message: t('toast.replay_failed'),\n                type: 'notice'\n              });\n            },\n            onPhaseChanged: phase => {\n              replayStore.updateWhiteboardPhase(phase);\n            },\n            onLoadFirstFrame: () => {\n              // replayStore.loadFirstFrame();\n            },\n            onSliceChanged: () => {\n            },\n            onPlayerStateChanged: (error) => {\n            },\n            onStoppedWithError: (error) => {\n              error && console.warn(error);\n              globalStore.showToast({\n                message: t('toast.replay_failed'),\n                type: 'notice'\n              });\n              replayStore.setReplayFail(true);\n            },\n            onScheduleTimeChanged: (scheduleTime) => {\n              if (lock.current) return;\n              replayStore.setCurrentTime(scheduleTime);\n            }\n          }).then((player: Player | undefined) => {\n            if (player) {\n              replayStore.setPlayer(player);\n              player.bindHtmlElement(document.getElementById(\"whiteboard\") as HTMLDivElement);\n            }\n          })\n        });\n    }\n    return () => {\n      window.removeEventListener('resize', onWindowResize);\n      window.removeEventListener('keydown', onWindowResize);\n    }\n  }, []);\n\n  const totalTime = useMemo(() => {\n    return moment(duration).format(\"mm:ss\");\n  }, [duration]);\n\n  const time = useMemo(() => {\n    return moment(state.currentTime).format(\"mm:ss\");\n  }, [state.currentTime]);\n\n  const PlayerCover = useCallback(() => {\n    if (!player) {\n      return (<Progress title={t(\"replay.loading\")} />)\n    }\n\n    if (player.phase === PlayerPhase.Playing) return null;\n\n    return (\n      <div className=\"player-cover\">\n        {player.phase === PlayerPhase.Buffering ? <Progress title={t(\"replay.loading\")} />: null}\n        {player.phase === PlayerPhase.Pause || player.phase === PlayerPhase.Ended || player.phase === PlayerPhase.WaitingFirstFrame ? \n          <div className=\"play-btn\" onClick={handlePlayerClick}></div> : null}\n      </div>\n    )\n  }, [player, state]);\n\n  return (\n    <div className={`replay`}>\n      <div className={`player-container`} >\n        <PlayerCover />\n        <div className=\"player\">\n          <div className=\"agora-logo\"></div>\n          <div id=\"whiteboard\" className=\"whiteboard\"></div>\n          <div className=\"video-menu\">\n            <div className=\"control-btn\">\n              <div className={`btn ${player && player.phase === PlayerPhase.Playing ? 'paused' : 'play'}`} onClick={handlePlayerClick}></div>\n            </div>\n            <div className=\"progress\">\n              <Slider\n                className='custom-video-progress'\n                value={state.currentTime}\n                onMouseDown={() => {\n                  if (replayStore.state && replayStore.state.player) {\n                    const player = replayStore.state.player as Player;\n                    player.pause();\n                    lock.current = true;\n                  }\n                }}\n                onMouseUp={() => {\n                  if (replayStore.state && replayStore.state.player) {\n                    const player = replayStore.state.player as Player;\n                    player.seekToScheduleTime(state.currentTime);\n                    player.play();\n                    lock.current = false;\n                  }\n                }}\n                onChange={handleChange}\n                min={0}\n                max={duration}\n                aria-labelledby=\"continuous-slider\"\n              />\n              <div className=\"time\">\n                <div className=\"current_duration\">{time}</div>\n                  /\n                <div className=\"video_duration\">{totalTime}</div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"video-container\">\n        <div className=\"video-player\">\n          <video id=\"white-sdk-video-js\" className=\"video-js video-layout\" style={{width: \"100%\", height: \"100%\", objectFit: \"cover\"}}></video>\n        </div>\n        <div className=\"chat-holder chat-board chat-messages-container\">\n          <RTMReplayer\n            senderId={senderId}\n            channelName={channelName}\n            startTime={startTime}\n            endTime={endTime}\n            currentSeekTime={state.currentTime}\n            onPhaseChanged={(e: RtmPlayerState) => {\n              if (e !== RtmPlayerState.load) {\n                player?.stop();\n              }\n            }}\n          ></RTMReplayer>\n        </div>\n      </div>\n    </div>\n  )\n}","import { PlayerLogger } from './logger';\n\nimport { EventEmitter } from 'events'\nimport Videojs, {VideoJsPlayer} from 'video.js'\nimport './index.css';\n\nimport '@videojs/http-streaming'\n\nexport { TimelineScheduler } from './timeline-scheduler';\n\nexport interface AgoraPlayerCallback {\n  onPhaseChanged: (evt: any) => void\n}\n\ntype Player = VideoJsPlayer\n\nexport enum PhaseState {\n  init = 'init',\n  buffering = 'buffering',\n  waiting = 'waiting',\n  playing = 'playing',\n  paused = 'paused',\n  ended = 'ended',\n  loading = 'loading'\n}\n\nexport type PhaseStateType = \n  'init' |\n  'buffering' |\n  'playing' | \n  'paused' | \n  'ended' | \n  'waiting' |\n  'ready' |\n  'loading'\n\nexport class AgoraPlayer extends EventEmitter {\n\n  public player: Player\n\n  type: string\n\n  public cover: string = ''\n\n  private log: PlayerLogger\n\n  public phaseState: PhaseStateType\n\n  private $el: HTMLElement\n  mediaType: string\n\n  constructor(\n    public readonly url: string,\n    public readonly callback: AgoraPlayerCallback,\n  ) {\n    super()\n    this.log = new PlayerLogger()\n\n    this.$el = document.createElement('video')\n    this.$el.id = 'video-player'\n    this.$el.className = \"video-js video-layout\"\n    this.player = Videojs(this.$el, {\n      preload: 'auto',\n      controls: false,\n      autoplay: false,\n      loop: false,\n      html5: {\n        hls: {\n          overrideNative: true\n        }\n      }\n    })\n\n    this.type = this.url.split('.').pop() || 'mp4'\n\n    const mediaTypes: any = {\n      'm3u8': 'application/x-mpegURL',\n      'mp4': 'video/mp4',\n    }\n\n    this.mediaType = mediaTypes[this.type] || 'video/mp4'\n    if (!this.url) {\n      console.error(`URL: invalid ${this.url}`)\n    }\n    this.phaseState = 'init'\n    this.on('phaseChanged', (phaseState: any) => {\n      callback.onPhaseChanged(phaseState)\n      // this.log.info('phaseChanged', phaseState)\n    })\n  }\n\n  initVideo (domId: string) {\n    if (!domId) {\n      throw `DOMException: domId shouldn't empty`\n    }\n\n    const $dom = document.getElementById(domId)\n    if (!$dom) {\n      throw `DOMException: couldn't find ${domId} element`\n    }\n\n    $dom.appendChild(this.$el)\n\n    this.player.src({\n      src: this.url,\n      type: this.mediaType\n    })\n\n    this.player.on('loadeddata', (evt: any) => {\n      this.emit('phaseChanged', this.phaseState = 'ready')\n    })\n\n    this.player.on('loadstart', (evt: any) => {\n      this.emit('phaseChanged', this.phaseState = 'loading')\n    })\n\n    this.player.on('waiting', (evt: any) => {\n      this.emit('phaseChanged', this.phaseState = 'waiting')\n    })\n\n    this.player.on('ended', (evt: any) => {\n      this.emit('phaseChanged', this.phaseState = 'ended')\n    })\n\n    this.player.on('error', (evt: any) => {\n      console.error('error', this.phaseState)\n    })\n\n    this.player.load();\n  }\n\n  get isPlaying () {\n    return this.player.duration() > 0 \n      && !this.player.paused() \n      && !this.player.ended()\n      && this.player.readyState() > 2\n  }\n\n  play () {\n    if (!this.isPlaying && this.player.paused()) {\n      this.player.play()\n    }\n  }\n\n  pause () {\n    if (this.isPlaying && !this.player.paused()) {\n      this.player.pause()\n    }\n  }\n\n  seekTo(seconds: number) {\n    const duration = this.player.duration()\n    if (this.player.ended() && seconds !== 0) return\n    this.player.currentTime(Math.min(seconds, duration))\n  }\n\n  destroy () {\n    this.player.dispose()\n  }\n}\n","import { PlayerLogger } from './logger';\nimport { EventEmitter } from 'events';\nimport raf from 'raf'\n\nconst customClearTimeout = (id: any) => {\n  clearInterval(id)\n}\n\nexport class TimelineScheduler extends EventEmitter {\n\n  _state: string = 'paused'\n  delay: number\n  duration: number\n\n  public rafId: number\n  log: PlayerLogger\n\n  _lastTimeoutId: any\n  _stopTimer: boolean\n  _visibilityHandler: (evt?: any) => void | any\n\n  public currentTime: number\n  public currentDuration: number\n\n  constructor (\n    public readonly fps: number = 15,\n    public readonly callback: (args?: any) => void,\n    public readonly startTime: number,\n    public readonly endTime: number\n  ) {\n    super()\n    this.log = new PlayerLogger()\n    if (this.endTime <= this.startTime) throw `endTime must greater than startTime`\n    this.delay = 1000 / this.fps\n    this.rafId = -1\n    this.duration = this.endTime - this.startTime\n    this.currentTime = this.startTime\n    this.currentDuration = 0\n    this._visibilityHandler = () => {}\n\n    this._lastTimeoutId = -1\n    this._stopTimer = true\n  }\n\n  public start () {\n    this._visibilityHandler = (evt: any) => {\n      if(document.hidden) {\n        this.log.warn('passive paused by browser', Date.now())\n        this.stop();\n      } else {\n        this.log.warn('switch setTimeout back to raf', Date.now())\n      }\n    }\n\n    document.addEventListener('visibilitychange', this._visibilityHandler, false);\n    this.state = 'started'\n    let _time = -1\n    let frame = -1\n    const durationBase = this.currentDuration\n    const nextTick = (timestamp: number, v?: boolean): void => {\n      if (this.state === 'ended' || this.currentTime >= this.endTime) {\n        this.stop()\n        return\n      }\n      if (_time === -1) {\n        _time = timestamp\n      }\n\n      const elapsedTime = Math.ceil(timestamp - _time)\n      const currentDuration = durationBase + elapsedTime\n\n      const progress: number = Math.min(Math.ceil((currentDuration / this.duration) * 100) / 100, 1)\n      const duration = Math.min(currentDuration, this.duration)\n      const time = Math.min(this.startTime + duration, this.endTime)\n      this.currentDuration = duration\n      let currentFrame = Math.floor(elapsedTime / this.delay)\n      if (currentFrame > frame) {\n        const params = {\n          progress,\n          duration,\n          time,\n          startTime: this.startTime,\n          endTime: this.endTime,\n          isTimer: v === true\n        }\n        this.callback(params)\n        this.currentTime = time\n        frame = currentFrame\n      }\n      if (this.state === 'started') {\n        this.rafId = raf(nextTick)\n      }\n    }\n    this.rafId = raf(nextTick)\n  }\n\n  public stop () {\n    this.state = 'paused'\n\n    raf.cancel(this.rafId)\n    customClearTimeout(this._lastTimeoutId)\n    this._stopTimer = true\n    document.removeEventListener('visibilitychange', () => {}, false);\n    this.log.info('this.rafId canceled', this.rafId)\n\n    if (this.currentTime === this.endTime) {\n      this.state = 'ended'\n    }\n  }\n\n  public seekTo (time: number) {\n    if (typeof time !== 'number') {\n      return this.log.warn('time should pass number')\n    }\n\n    this.currentDuration = time\n\n    if (this.state === 'ended') {\n      this.currentTime = this.startTime\n    }\n\n    this.emit('seek-changed', this.currentDuration)\n  }\n\n  public set state (newState: any) {\n    this._state = newState\n    this.emit(\"state-changed\", this._state)\n  }\n\n  public get state () {\n    return this._state\n  }\n\n}","import React, {useEffect, useMemo, useCallback, useRef} from 'react';\nimport {replayStore, useObserver, IPlayerState} from './model';\nimport { useParams, useLocation } from 'react-router-dom';\nimport { useInterval } from 'react-use';\nimport { Progress } from '../../components/progress/progress';\nimport Slider from '@material-ui/core/Slider';\nimport { WhiteboardAPI } from '../../utils/api';\nimport { whiteboard } from '../../stores/whiteboard';\nimport { RTMReplayer, RtmPlayerState } from '../../components/whiteboard/agora/rtm-player';\nimport moment from 'moment';\nimport {AgoraPlayer, TimelineScheduler} from '../../utils/agora-web-player/agora-player';\nimport { t } from '../../i18n';\nimport { globalStore } from '../../stores/global';\nimport { PlayerPhase } from 'white-web-sdk';\n// import {isElectron} from '../../utils/platform';\n\nconst ReplayContext = React.createContext({} as IPlayerState);\n\n//@ts-ignore\nwindow.replayStore = replayStore\n\nconst delay = 5000\n\nconst useReplayContext = () => React.useContext(ReplayContext);\n\nconst ReplayContainer: React.FC<{}> = () => {\n  const replayState = useObserver<IPlayerState>(replayStore);\n\n  const location = useLocation()\n  const {recordId} = useParams()\n  const searchParams = new URLSearchParams(location.search);\n  const roomId: string = searchParams.get('roomId') as string;\n  const userToken: string = searchParams.get('token') as string;\n\n  const value = replayState;\n\n  const result = value.courseRecordData;\n\n  useInterval(() => {\n    replayStore.getCourseRecordBy(recordId as string, roomId as string, userToken)\n  }, delay)\n\n  return (\n    <ReplayContext.Provider value={value}>\n      {result?.status !== 2 ?\n        <Progress title={t(`replay.${result?.statusText ? result?.statusText : 'loading'}`)} /> : \n      <TimelineReplay\n        whiteboardUUID={result?.boardId as string}\n        startTime={result?.startTime as number}\n        endTime={result?.endTime as number}\n        mediaUrl={result?.url as string}\n      />}\n    </ReplayContext.Provider>\n  )\n}\n\nexport default ReplayContainer;\n\nexport const TimelineReplay: React.FC<any> = ({\n  startTime,\n  endTime,\n  mediaUrl,\n  channelName,\n  senderId,\n  whiteboardUUID\n}) => {\n  const state = useReplayContext()\n\n  useEffect(() => {\n    const startTimestamp: number = +(startTime as string)\n    const endTimestamp: number = +(endTime as string)\n    const duration = Math.abs(endTimestamp - startTimestamp)\n\n    const initPlayer = async () => {\n      const videoPlayer = new AgoraPlayer(mediaUrl, {\n        onPhaseChanged: state => {\n          console.log(\"[agore-replay phase] video phase \", state)\n          if (state === 'ready') {\n            replayStore.updatePlayState('ready')\n          }\n\n          if (state !== 'playing') {\n            // replayStore.state?.timelineScheduler.stop();\n            console.log(\"[agore-replay phase] timeline stop in video phase \")\n          }\n        }\n      })\n  \n      //@ts-ignore\n      window.videoPlayer = videoPlayer\n      replayStore.addVideoPlayer(videoPlayer)\n  \n      const timeline = new TimelineScheduler(30, (args: any) => {\n        if (replayStore.state && replayStore.state.phase && replayStore.state.phase === 'playing') {\n          replayStore.setCurrentTime(args.duration)\n          replayStore.updateProgress(args.progress)\n        }\n      }, startTimestamp, endTimestamp)\n  \n      timeline.on('seek-changed', (duration: number) => {\n        if (replayStore.state && replayStore.state.videoPlayer && replayStore.state.player) {\n          if (duration / 1000 < replayStore.state.videoPlayer.player.duration()) {\n            replayStore.state.videoPlayer.seekTo(duration / 1000)\n            replayStore.state.player.seekToScheduleTime(duration)\n          }\n        }\n      })\n  \n      timeline.on(\"state-changed\", async (state: any) => {\n        console.log(\"state-changed\", \"state\", state, replayStore.state)\n        if (replayStore.state && replayStore.state.videoPlayer && replayStore.state.player) {\n          if (state === 'started') {\n            replayStore.state.videoPlayer.play()\n            replayStore.state.player.play()\n            replayStore.updatePlayState('playing')\n          } else if (state === 'ended') {\n            replayStore.state.videoPlayer.pause()\n            replayStore.state.player.pause()\n            replayStore.updatePlayState('ended')\n          } else {\n            replayStore.state.videoPlayer.pause()\n            replayStore.state.player.pause()\n            console.log(\"[agore-replay phase] timeline \" ,state, 'replayStore.is not empty?: ', replayStore.state !== null)\n            replayStore.updatePlayState('paused')\n          }\n        }\n      })\n      replayStore.addTimeline(timeline)\n\n\n      if (whiteboardUUID) {\n        let {roomToken} = await replayStore.joinRoom(whiteboardUUID)\n        let player = await WhiteboardAPI.replayRoom(whiteboard.client, {\n          beginTimestamp: startTimestamp,\n          duration: duration,\n          room: whiteboardUUID,\n          roomToken,\n        },  {\n          onCatchErrorWhenRender: error => {\n            error && console.warn(error);\n            globalStore.showToast({\n              message: t('toast.replay_failed'),\n              type: 'notice'\n            });\n          },\n          onCatchErrorWhenAppendFrame: error => {\n            error && console.warn(error);\n            globalStore.showToast({\n              message: t('toast.replay_failed'),\n              type: 'notice'\n            });\n          },\n          onPhaseChanged: phase => {\n            console.log(\"[agore-replay phase] whiteboard \", phase)\n\n            let whiteboardPlayStatus = 'ready';\n\n            if (phase === PlayerPhase.Playing) {\n              whiteboardPlayStatus = 'playing'\n            } else if (phase === PlayerPhase.Pause ||\n              phase === PlayerPhase.Ended ||\n              phase === PlayerPhase.WaitingFirstFrame) {\n              whiteboardPlayStatus = 'paused'\n              replayStore.state?.timelineScheduler.stop()\n            } else {\n              whiteboardPlayStatus = 'waiting'\n              console.log(\"[agore-replay phase] whiteboard phase transmit\", phase, whiteboardPlayStatus)\n            }\n            console.log(\"[agore-replay phase] whiteboard phase transmit 2\", phase, whiteboardPlayStatus)\n            replayStore.updatePlayState(whiteboardPlayStatus)\n          },\n          onStoppedWithError: (error) => {\n            error && console.warn(error);\n            globalStore.showToast({\n              message: t('toast.replay_failed'),\n              type: 'notice'\n            });\n          }\n        })\n        replayStore.addWhiteboardPlayer(player)\n        console.log(\"[agore-replay phase] join whiteboard\")\n      }\n    }\n\n    initPlayer()\n  }, [])\n\n  const playerElementRef = useRef<any>(null)\n  const whiteboardElementRef = useRef<any>(null)\n\n\n  const onWindowResize = () => {\n    if (state.player) {\n      state.player.refreshViewSize()\n    }\n  }\n\n  useEffect(() => {\n    if (playerElementRef.current) {\n      if (state.videoPlayer) {\n        state.videoPlayer.initVideo(playerElementRef.current.id)\n        return () => {\n          state.videoPlayer.destroy()\n        }\n      }\n    }\n  }, [state.videoPlayer, playerElementRef])\n\n  useEffect(() => {\n    if (whiteboardElementRef.current) {\n      if (state.player) {\n        console.log(\"bind\", state.player)\n        state.player.bindHtmlElement(whiteboardElementRef.current as HTMLDivElement);\n        window.addEventListener('resize', onWindowResize);\n        return () => {\n          window.removeEventListener('resize', onWindowResize);\n        }\n      }\n    }\n  }, [state.player, whiteboardElementRef])\n\n  const handlePlayerClick = () => {\n    if (!replayStore.state || !state.videoPlayer || !state.timelineScheduler) return;\n\n    if (replayStore.state.phase === 'paused' || replayStore.state.phase === 'ready') {\n      state.timelineScheduler.start()\n      return\n    }\n\n    if (replayStore.state.phase === 'started' || replayStore.state.phase === 'playing') {\n      state.timelineScheduler.stop()\n      return\n    }\n\n    if (replayStore.state.phase === 'ended') {\n      state.timelineScheduler.seekTo(0)\n      state.timelineScheduler.start()\n      return\n    }\n  }\n\n  const handleChange = (event: any, newValue: any) => {\n    replayStore.setCurrentTime(newValue);\n    replayStore.updateProgress(newValue);\n  }\n\n  const duration = useMemo(() => {\n    if (!startTime || !endTime) return 0;\n    const _duration = Math.abs(+startTime - +endTime);\n    return _duration;\n  }, [startTime, endTime]);\n\n  const totalTime = useMemo(() => {\n    return moment(duration).format(\"mm:ss\")\n  }, [duration]);\n\n  const time = useMemo(() => {\n    return moment(state.currentTime).format(\"mm:ss\");\n  }, [state.currentTime]);\n\n  const playState = state.phase;\n\n  const PlayerCover = useCallback(() => {\n\n    document.title = playState\n\n    if (!state.videoPlayer || !state.player || playState === 'waiting' || playState === 'loading') {\n      return (<Progress title={t(\"replay.loading\")} />)\n    }\n\n    if (playState === 'playing') return null;\n\n    return (\n      <div className=\"player-cover\">\n        {playState !== 'playing' ? \n          <div className=\"play-btn\" onClick={handlePlayerClick}></div> : null}\n      </div>\n    )\n  }, [state.videoPlayer, state.player, state.phase]);\n\n  const onMouseDown = () => {\n    if (state.timelineScheduler) {\n      console.log(\"seek to replay. down\")\n      state.timelineScheduler.stop()\n      replayStore.updatePlayState('paused')\n    }\n  }\n\n  const onMouseUp = () => {\n    if (state.timelineScheduler) {\n      console.log(\"seek to replay. up\")\n      state.timelineScheduler.seekTo(state.currentTime)\n      state.timelineScheduler.start()\n    }\n  }\n\n  return (\n    <div className={`replay`}>\n      <div className={`player-container`} >\n        <PlayerCover />\n        <div className=\"player\">\n          <div className=\"agora-logo\"></div>\n          <div ref={whiteboardElementRef} id=\"whiteboard\" className=\"whiteboard\"></div>\n          <div className=\"video-menu\">\n            <div className=\"control-btn\">\n              <div className={`btn ${playState === 'playing' ? 'paused' : 'play'}`} onClick={handlePlayerClick}></div>\n            </div>\n            <div className=\"progress\">\n              <Slider\n                className='custom-video-progress'\n                value={state.currentTime}\n                onMouseDown={onMouseDown}\n                onMouseUp={onMouseUp}\n                onChange={handleChange}\n                min={0}\n                max={duration}\n                aria-labelledby=\"continuous-slider\"\n              />\n              <div className=\"time\">\n                <div className=\"current_duration\">{time}</div>\n                  /\n                <div className=\"video_duration\">{totalTime}</div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"video-container\">\n        <div className=\"video-player\">\n          <div ref={playerElementRef} id=\"player\" style={{width: \"100%\", height: \"100%\", objectFit: \"cover\"}}></div>\n        </div>\n        <div className=\"chat-holder chat-board chat-messages-container\">\n          <RTMReplayer\n            senderId={senderId}\n            channelName={channelName}\n            startTime={startTime}\n            endTime={endTime}\n            currentSeekTime={state.currentTime}\n            onPhaseChanged={(e: RtmPlayerState) => {\n              if (e !== RtmPlayerState.load) {\n                state.timelineScheduler?.stop();\n              }\n            }}\n          ></RTMReplayer>\n        </div>\n      </div>\n    </div>\n  )\n}","import { useMemo } from 'react';\nimport { isEmpty } from 'lodash';\nimport { roomStore } from '../stores/room';\nimport { useRoomState } from '../containers/root-container';\n\ntype StreamValue = {\n  teacher: any\n  students: any[]\n  sharedStream: any\n  currentHost: any\n  onPlayerClick: (type: string, streamID: number, uid: string) => Promise<any>\n}\n\n\nexport default function useStream () {\n  const roomState = useRoomState();\n  const me = roomState.me;\n  const course = roomState.course;\n\n  const teacher = useMemo(() => {\n    if (!course.teacherId || !me.uid) return;\n    const teacherInfo = roomStore.state.users.get(`${course.teacherId}`);\n    if (!teacherInfo) return;\n\n    // 当本地流为老师时\n    if (+me.uid === +course.teacherId) {\n      return {\n        ...roomState.rtc.localStream,\n        account: teacherInfo.account,\n        video: teacherInfo.video,\n        audio: teacherInfo.audio,\n        local: true,\n      }\n    } else {\n      // when peer teacher is online\n      // 当远端流为老师时\n      const teacherUid = roomState.rtc.users.get(+course.teacherId);\n      if(!teacherUid) return null;\n      // when peer teacher stream is found\n      // 当找到老师的音视频流时\n      const remoteTeacherStream = roomState.rtc.remoteStreams.get(`${teacherUid}`);\n      if (remoteTeacherStream) {\n        return {\n          ...remoteTeacherStream,\n          account: teacherInfo.account,\n          video: teacherInfo.video,\n          audio: teacherInfo.audio,\n        }\n      }\n      return {\n        streamID: teacherUid,\n        account: teacherInfo.account,\n        video: teacherInfo.video,\n        audio: teacherInfo.audio,\n      }\n    }\n  }, [\n    JSON.stringify(\n      [\n        course.teacherId,\n        me.uid\n      ]\n    ),\n    roomState.users,\n    roomState.rtc.users,\n    roomState.rtc.remoteStreams,\n    roomState.rtc.localStream\n  ]);\n\n  const screenId = useMemo(() => {\n    const teacher = roomState.users.get(`${course.teacherId}`)\n    let id = ''\n    if (teacher) {\n      id = teacher.screenId\n    }\n    return id\n  }, [course.teacherId, roomState.users])\n\n  const students = useMemo(() => {\n    const userAttrs = roomStore.state.users;\n    if (!me.uid || userAttrs.count() === 0) return [];\n    const teacherUid = course.teacherId;\n    const peerUsers = roomState.rtc.users;\n    // exclude teacher and me and screenId\n    // 排除老师，屏幕共享，和自己的uid\n    let studentIds = peerUsers.filter((it: number) => it !== +teacherUid && it !== +me.uid && it !== +screenId);\n\n    const studentStreams: any[] = [];\n    const myAttr = userAttrs.get(`${me.uid}`);\n\n    // when i m student\n    // 当自己是学生流时\n    if (+me.role === 2) {\n      if (myAttr && roomState.rtc.localStream) {\n        const _tmpStream = {\n          ...roomState.rtc.localStream,\n          account: myAttr.account,\n          video: myAttr.video,\n          audio: myAttr.audio,\n          local: true,\n        }\n        studentStreams.push(_tmpStream);\n      }\n    }\n\n    // capture all remote streams\n    // 所有远端的学生流\n    for (let studentId of studentIds) {\n      const studentAttr = userAttrs.get(`${studentId}`);\n      const stream = roomState.rtc.remoteStreams.get(`${studentId}`);\n      if (studentAttr) {\n        let _tmpStream = {\n          streamID: studentId,\n          account: studentAttr.account,\n          video: studentAttr.video,\n          audio: studentAttr.audio,\n        }\n        if (stream) {\n          _tmpStream = {\n            ...stream,\n            streamID: studentId,\n            account: studentAttr.account,\n            video: studentAttr.video,\n            audio: studentAttr.audio,\n          }\n        }\n        studentStreams.push(_tmpStream);\n      }\n    }\n    return studentStreams;\n  }, [\n    JSON.stringify(\n      [\n        course.teacherId,\n        screenId,\n        me.uid\n      ]\n    ),\n    roomState.users,\n    roomState.rtc.users,\n    roomState.rtc.remoteStreams,\n    roomState.rtc.localStream\n  ]);\n\n  const sharedStream = useMemo(() => {\n    if (roomState.rtc.localSharedStream) {\n      const _tmpStream = {\n        ...roomState.rtc.localSharedStream,\n        video: 1,\n        audio: 1,\n        local: true,\n      }\n      return _tmpStream;\n    }\n\n    const remoteStream = roomState.rtc.remoteStreams.get(`${screenId}`);\n\n    if (remoteStream) {\n      const _tmpStream = {\n        ...remoteStream,\n        video: 1,\n        audio: 1,\n      }\n      return _tmpStream;\n    }\n\n    return null;\n  }, [\n    screenId,\n    roomState.rtc.remoteStreams,\n    roomState.rtc.localSharedStream\n  ]);\n\n  const currentHost = useMemo(() => {\n    if (!course.coVideoUids || isEmpty(course.coVideoUids)) return null;\n    const coVideoUid = ''+course.coVideoUids[0];\n    const userAttr = roomState.users.get(`${coVideoUid}`);\n    if (!userAttr) return null;\n    // when i am current broadcaster\n    if (`${me.uid}` === coVideoUid) {\n      if (roomState.rtc.localStream) {\n        let _tmpStream = {\n          ...roomState.rtc.localStream,\n          account: userAttr.account,\n          video: userAttr.video,\n          audio: userAttr.audio,\n          local: true,\n          streamID: +me.uid,\n        }\n        return _tmpStream;\n      }\n    } else {\n      // when remote user is broadcaster\n      const peerUid = coVideoUid;\n      const peerUserAttr = roomState.users.get(`${peerUid}`);\n      if (peerUid && peerUserAttr) {\n        let tmpStream = {\n          account: peerUserAttr.account,\n          video: peerUserAttr.video,\n          audio: peerUserAttr.audio,\n          streamID: +peerUid,\n        }\n        const remoteStream = roomState.rtc.remoteStreams.get(`${peerUid}`);\n        if (remoteStream) {\n          tmpStream = {\n            ...tmpStream,\n            ...remoteStream\n          }\n        }\n        return tmpStream\n      }\n    }\n    return null;\n  }, [\n    course.coVideoUids,\n    me.uid,\n    me.role,\n    roomState.users,\n    roomState.rtc.remoteStreams,\n    roomState.rtc.localStream,\n  ]);\n\n  const value: StreamValue = {\n    teacher: teacher,\n    students: students,\n    sharedStream: sharedStream,\n    currentHost: currentHost,\n    onPlayerClick: async (type: string, streamID: number, uid: string) => {\n      console.log(\"streamID \", streamID, uid);\n      const me = roomStore.state.me;\n      if (!roomStore.state.rtm.joined || !me.uid) return console.warn(\"please confirm joined rtm\");\n      const targetUser = roomStore.state.users.get(`${uid}`);\n      if (!targetUser) return;\n\n      const targetUid = targetUser.uid;\n\n      const video = Boolean(targetUser.video);\n      const audio = Boolean(targetUser.audio);\n      const chat = Boolean(targetUser.chat);\n\n      if (type === 'video') {\n        if (video) {\n          await roomStore.mute(targetUid, 'video');\n        } else {\n          await roomStore.unmute(targetUid, 'video');\n        }\n        return;\n      }\n\n      if (type === 'audio') {\n        if (audio) {\n          await roomStore.mute(targetUid, 'audio');\n        } else {\n          await roomStore.unmute(targetUid, 'audio');\n        }\n        return;\n      }\n\n      if (type === 'chat') {\n        if (chat) {\n          await roomStore.mute(targetUid, 'chat');\n        } else {\n          await roomStore.unmute(targetUid, 'chat');\n        }\n        return;\n      }\n    }\n  }\n  return value;\n}","import React, { useRef, useEffect, useState, useLayoutEffect } from 'react';\nimport VideoPlayer from './video-player';\nimport './video-marquee.scss';\nimport useStream from '../hooks/use-streams';\nimport { AgoraMediaStream } from '../utils/types';\n\nconst showScrollbar = () => {\n  const $marquee = document.querySelector(\".video-marquee .agora-video-view\");\n  if ($marquee) {\n    const clientWidth = $marquee.clientWidth;\n    const marqueeLength: number = document.querySelectorAll(\".video-marquee .agora-video-view\").length;\n    const videoMarqueeMark = document.querySelector('.video-marquee-mask')\n    if (clientWidth && videoMarqueeMark) {\n      const videoMarqueeWidth = videoMarqueeMark.clientWidth;\n      const width: number = clientWidth * marqueeLength;\n      if (videoMarqueeWidth <= width) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\nfunction VideoMarquee() {\n\n  const {teacher, students, onPlayerClick} = useStream();\n\n  const marqueeEl = useRef(null);\n\n  const scrollLeft = (current: any, offset: number) => {\n    current.scrollLeft += (offset * current.childNodes[1].offsetWidth);\n  }\n\n  const handleScrollLeft = (evt: any) => {\n    scrollLeft(marqueeEl.current, 1);\n  }\n\n  const handleScrollRight = (evt: any) => {\n    scrollLeft(marqueeEl.current, -1);\n  }\n\n  const ref = useRef<boolean>(false);\n\n  useEffect(() => {\n    return () => {\n      ref.current = true;\n    }\n  }, []);\n\n  const [scrollBar, setScrollBar] = useState<boolean>(false);\n\n  useLayoutEffect(() => {\n    if (!students.length) return;\n    !ref.current && setScrollBar(showScrollbar());\n  }, [students]);\n\n  useEffect(() => {\n    window.addEventListener('resize', (evt: any) => {\n      !ref.current && setScrollBar(showScrollbar());\n    });\n    return () => {\n      window.removeEventListener('resize', () => {});\n    }\n  }, []);\n\n  return (\n    <div className=\"video-marquee-container\">\n      <div className=\"main\">\n        {teacher ?\n          <VideoPlayer\n            role=\"teacher\"\n            domId={`dom-${teacher.streamID}`}\n            id={`${teacher.streamID}`}\n            streamID={teacher.streamID}\n            stream={teacher.stream}\n            account={teacher.account}\n            audio={Boolean(teacher.audio)}\n            video={Boolean(teacher.video)}\n            local={Boolean(teacher.local)}\n            handleClick={onPlayerClick}\n            autoplay={true}\n          />\n          :\n          <VideoPlayer role=\"teacher\" account={'teacher'} video audio streamID={0} />\n          }\n      </div>\n      <div className=\"video-marquee-mask\">\n        <div className=\"video-marquee\" ref={marqueeEl}>\n        {scrollBar ? \n          <div className=\"scroll-btn-group\">\n            <div className=\"icon icon-left\" onClick={handleScrollLeft}></div>\n            <div className=\"icon icon-right\" onClick={handleScrollRight}></div>\n          </div> : null\n        }\n          {students.map((student: AgoraMediaStream, key: number) => (\n            <VideoPlayer\n              role=\"student\"\n              domId={`dom-${student.streamID}`}\n              key={`${key}${student.streamID}`}\n              id={`${student.streamID}`}\n              account={student.account}\n              streamID={student.streamID}\n              stream={student.stream}\n              video={student.video}\n              audio={student.audio}\n              local={student.local}\n              handleClick={onPlayerClick}\n              autoplay={true}\n            />\n          ))}\n        </div>\n      </div>\n    </div>\n  )\n}\nexport default React.memo(VideoMarquee);","import React, {useEffect, useRef} from 'react';\nimport './whiteboard.scss';\nimport { Room } from 'white-web-sdk';\nimport { whiteboard } from '../stores/whiteboard';\nimport { t } from '../i18n';\nimport { Progress } from '../components/progress/progress';\n\ninterface WhiteBoardProps {\n  room?: Room | null\n  className: string\n  loading: boolean\n}\n\nexport default function Whiteboard ({\n  room,\n  className,\n  loading\n}: WhiteBoardProps) {\n\n  const domRef = useRef(null);\n\n  useEffect(() => {\n    if (!room || !whiteboard.state.room || !domRef.current) return;\n    room.bindHtmlElement(domRef.current);\n    whiteboard.updateRoomState();\n    window.addEventListener(\"resize\", (evt: any) => {\n      if (whiteboard.state.room !== null && whiteboard.state.room.isWritable) {\n        whiteboard.state.room.moveCamera({centerX: 0, centerY: 0});\n        whiteboard.state.room.refreshViewSize();           \n      }\n    });\n    return () => {\n      if (whiteboard.state.room) {\n        whiteboard.state.room.bindHtmlElement(null);\n      }\n      window.removeEventListener(\"resize\", (evt: any) => {});\n    }\n  }, [room, domRef]);\n\n  return (\n    <div className=\"whiteboard\">\n      { loading || !room ? <Progress title={t(\"whiteboard.loading\")}></Progress> : null}\n      <div ref={domRef} id=\"whiteboard\" className={`whiteboard-canvas ${className}`}></div>\n    </div>\n  )\n}","import React, { useRef } from 'react';\nimport Icon from '../icon';\nimport { roomStore } from '../../stores/room';\nimport { whiteboard } from '../../stores/whiteboard';\nimport moment from 'moment';\nimport { globalStore } from '../../stores/global';\nimport { t } from '../../i18n';\nimport { Tooltip } from '@material-ui/core';\nimport { useRoomState } from '../../containers/root-container';\ninterface ControlItemProps {\n  name: string\n  onClick: (evt: any, name: string) => void\n  active: boolean\n  text?: string\n  loading?: boolean\n}\n\nconst ControlItem = (props: ControlItemProps) => {\n  const onClick = (evt: any) => {\n    props.onClick(evt, props.name);\n  }\n  return (\n    props.text ?\n      <div className={`control-btn control-${props.name} ${props.loading ? 'icon-loading' : ''}`} onClick={onClick}>\n        <div className={`btn-icon ${props.name} ${props.active ? 'active' : ''}`}\n          data-name={props.name} />\n        <div className=\"control-text\">{props.text}</div>\n      </div>\n      :\n      <Icon\n        loading={props.loading}\n        data={props.name}\n        onClick={onClick}\n        className={`items ${props.name} ${props.active ? 'active' : ''}`}\n      />\n  )\n}\n\ninterface NoticeProps {\n  reason: string\n  text?: string\n}\n\ninterface ControlProps {\n  sharing: boolean\n  isHost?: boolean\n  current: string\n  currentPage: number\n  totalPage: number\n  role: number\n  notice?: NoticeProps\n  onClick: (evt: any, type: string) => void\n}\n\nexport default function Control({\n  sharing,\n  isHost,\n  current,\n  currentPage,\n  totalPage,\n  onClick,\n  role,\n  notice,\n}: ControlProps) {\n\n  const roomState = useRoomState();\n  const lock = useRef<boolean>(false);\n\n  const canStop = () => {\n    const timeMoment = moment(whiteboard.state.startTime).add(15, 'seconds');\n    if (+timeMoment >= +Date.now()) {\n      globalStore.showToast({\n        type: 'netlessClient',\n        message: t('toast.recording_too_short')\n      })\n      return false;\n    }\n    return true;\n  }\n\n  const onRecordButtonClick = (evt: any, type: string) => {\n    handleRecording(evt, type)\n    .then(() => {}).catch(console.warn);\n  }\n  \n  const handleRecording = async (evt: any, type: string) => {\n    try {\n      const roomState = roomStore.state;\n      const me = roomState.me;\n      if (lock.current || !me.uid) return;\n  \n      if (roomState.course.isRecording) {\n        if (!canStop()) return;\n        await roomStore.stopRecording();\n        globalStore.showToast({\n          type: 'recording',\n          message: t('toast.stop_recording'),\n        });\n      } else {\n        await roomStore.startRecording();\n        globalStore.showToast({\n          type: 'recording',\n          message: t('toast.start_recording'),\n        });\n      }\n    } catch(err) {\n      if (err.recordingErr) {\n        globalStore.showToast({\n          type: 'recordingErr',\n          message: t('toast.recording_failed', {reason: err.recordingErr.message})\n        });\n      }\n    }\n  }\n\n  return (\n    <div className=\"controls-container\">\n      <div className=\"interactive\">\n      {notice && roomState.users.count() <= 1 ?\n          <ControlItem name={notice.reason}\n            onClick={onClick}\n            active={notice.reason === current} />\n        : null}\n      </div>\n      <div className=\"controls\">\n        {!sharing && role === 1 ?\n          <>\n            <Tooltip title={t(`control_items.first_page`)} placement=\"top\">\n              <span>\n                <ControlItem name={`first_page`}\n                  active={'first_page' === current}\n                  onClick={onClick} />\n              </span>\n            </Tooltip>\n            <Tooltip title={t(`control_items.prev_page`)} placement=\"top\">\n              <span>\n                <ControlItem name={`prev_page`}\n                  active={'prev_page' === current}\n                  onClick={onClick} />\n              </span>\n            </Tooltip>\n            <div className=\"current_page\">\n              <span>{currentPage}/{totalPage}</span>\n            </div>\n            <Tooltip title={t(`control_items.next_page`)} placement=\"top\">\n              <span>\n                <ControlItem name={`next_page`}\n                  active={'next_page' === current}\n                  onClick={onClick} />\n              </span>\n            </Tooltip>\n            <Tooltip title={t(`control_items.last_page`)} placement=\"top\">\n              <span>\n                <ControlItem name={`last_page`}\n                  active={'last_page' === current}\n                  onClick={onClick} />\n              </span>\n            </Tooltip>\n            <div className=\"menu-split\" style={{ marginLeft: '7px', marginRight: '7px' }}></div>\n          </> : null\n        }\n        {+role === 1 ?\n          <>\n            <Tooltip title={t(roomStore.state.course.isRecording ? 'control_items.stop_recording' : 'control_items.recording')} placement=\"top\">\n              <span>\n                <ControlItem\n                  loading={Boolean(roomStore.state.recordLock)}\n                  name={Boolean(roomStore.state.recordLock) ? 'icon-loading ' : (roomStore.state.course.isRecording ? 'stop_recording' : 'recording')}\n                  onClick={onRecordButtonClick}\n                  active={false}\n                />\n              </span>\n            </Tooltip>\n            <Tooltip title={t(sharing ? 'control_items.quit_screen_sharing' : 'control_items.screen_sharing')} placement=\"top\">\n              <span>\n                <ControlItem\n                  name={sharing ? 'quit_screen_sharing' : 'screen_sharing'}\n                  onClick={(evt: any) => {\n                    if (sharing) {\n                      roomStore.stopScreenShare()\n                      .then(() => {\n                        console.log(\"stop screen share\")\n                      }).catch(console.warn)\n                    } else {\n                      roomStore.startScreenShare()\n                      .then(() => {\n                        console.log(\"start screen share\")\n                      }).catch(console.warn)\n                    }\n                  }}\n                  active={false}\n                  text={sharing ? 'stop sharing' : ''}\n                />\n              </span>\n            </Tooltip>\n          </> : null }\n        {+role === 2 ?\n          <>\n            <ControlItem\n              name={isHost ? 'hands_up_end' : 'hands_up'}\n              onClick={onClick}\n              active={false}\n              text={''}\n            />\n          </>\n         :null}\n      </div>\n\n    </div>\n  )\n}","import React from 'react';\nimport Icon from '../icon';\nimport { Tooltip } from '@material-ui/core';\nimport {t} from '../../i18n';\n\nconst ToolItem = (props: any) => {\n  const onClick = (evt: any) => {\n    props.onClick(evt, props.name);\n  }\n  return (\n    <Tooltip title={t(`tool.${props.name}`)} placement=\"right\">\n      <span>\n      <Icon data={props.name}\n        onClick={onClick} className={`items ${props.name} ${props.active ? 'active' : ''}`} />\n      </span>\n    </Tooltip>\n  )\n}\n\ninterface ToolsProps {\n  items: any[]\n  currentTool: string\n  handleToolClick: (evt: any, name: string) => void\n};\n\nexport default function Tools (props: ToolsProps) {\n  return (\n    <div className=\"menu\">\n      {props.items.map((item: any, key: number) => (\n        <ToolItem key={key}\n          name={item.name}\n          onClick={props.handleToolClick}\n          active={props.currentTool === item.name}\n        >\n        </ToolItem>\n      ))}\n    </div>\n  )\n}","import { MultipartUploadResult } from 'ali-oss';\nimport uuidv4 from 'uuid/v4';\nimport {Room, PptConverter, PptKind, Ppt} from 'white-web-sdk';\nimport MD5 from 'js-md5';\nimport { resolveFileInfo } from './helper';\n\nexport type imageSize = {\n  width: number\n  height: number\n};\n\nexport type PPTDataType = {\n    active: boolean\n    pptType: PPTType\n    id: string\n    data: any\n    cover?: any\n};\n\nexport enum PPTType {\n    dynamic = \"dynamic\",\n    static = \"static\",\n    init = \"init\",\n}\nexport type NetlessImageFile = {\n  width: number;\n  height: number;\n  file: File;\n  coordinateX: number;\n  coordinateY: number;\n};\n\nexport type TaskType = {\n  uuid: string,\n  imageFile: NetlessImageFile\n};\n\nexport type PPTProgressListener = (phase: PPTProgressPhase, percent: number) => void;\n\nexport enum PPTProgressPhase {\n  Uploading,\n  Converting,\n}\n\nexport class UploadManager {\n\n  private readonly ossClient: any;\n  private readonly room: Room;\n  private readonly ossUploadCallback?: (res: any) => void;\n  public constructor(ossClient: any, room: Room, ossUploadCallback?: (res: any) => void) {\n    this.ossClient = ossClient;\n    this.room = room;\n    this.ossUploadCallback = ossUploadCallback;\n  }\n  \n  public async convertFile(\n    rawFile: File,\n    pptConverter: PptConverter,\n    kind: PptKind,\n    folder: string,\n    uuid: string,\n    onProgress?: PPTProgressListener,\n  ): Promise<void> {\n    const {fileType} = resolveFileInfo(rawFile);\n    const path = `/${folder}/${uuid}${fileType}`;\n    const pptURL = await this.addFile(path, rawFile, onProgress);\n    let res: Ppt;\n    if (kind === PptKind.Static) {\n        res = await pptConverter.convert({\n          url: pptURL,\n          kind: kind,\n          onProgressUpdated: progress => {\n            if (onProgress) {\n              onProgress(PPTProgressPhase.Converting, progress);\n            }\n          },\n        });\n        const documentFile: PPTDataType = {\n          active: true,\n          id: `${uuidv4()}`,\n          pptType: PPTType.static,\n          data: res.scenes,\n        };\n        const scenePath = MD5(`/${uuid}/${documentFile.id}`);\n        this.room.putScenes(`/${scenePath}`, res.scenes);\n        this.room.setScenePath(`/${scenePath}/${res.scenes[0].name}`);\n    } else {\n      console.log(\"convert no static ppt\");\n        res = await pptConverter.convert({\n          url: pptURL,\n          kind: kind,\n          onProgressUpdated: progress => {\n            if (onProgress) {\n              onProgress(PPTProgressPhase.Converting, progress);\n            }\n          },\n        });\n        const documentFile: PPTDataType = {\n          active: true,\n          id: `${uuidv4()}`,\n          pptType: PPTType.dynamic,\n          data: res.scenes,\n        };\n        const scenePath = MD5(`/${uuid}/${documentFile.id}`);\n        this.room.putScenes(`/${scenePath}`, res.scenes);\n        this.room.setScenePath(`/${scenePath}/${res.scenes[0].name}`);\n    }\n    if (onProgress) {\n        onProgress(PPTProgressPhase.Converting, 1);\n    }\n  }\n  private getImageSize(imageInnerSize: imageSize): imageSize {\n    const windowSize: imageSize = {width: window.innerWidth, height: window.innerHeight};\n    const widthHeightProportion: number = imageInnerSize.width / imageInnerSize.height;\n    const maxSize: number = 960;\n    if ((imageInnerSize.width > maxSize && windowSize.width > maxSize) || (imageInnerSize.height > maxSize && windowSize.height > maxSize)) {\n      if (widthHeightProportion > 1) {\n        return {\n          width: maxSize,\n          height: maxSize / widthHeightProportion,\n        };\n      } else {\n        return {\n          width: maxSize * widthHeightProportion,\n          height: maxSize,\n        };\n      }\n    } else {\n      if (imageInnerSize.width > windowSize.width || imageInnerSize.height > windowSize.height) {\n        if (widthHeightProportion > 1) {\n          return {\n            width: windowSize.width,\n            height: windowSize.width / widthHeightProportion,\n          };\n        } else {\n          return {\n            width: windowSize.height * widthHeightProportion,\n            height: windowSize.height,\n          };\n        }\n      } else {\n        return {\n          width: imageInnerSize.width,\n          height: imageInnerSize.height,\n        };\n      }\n    }\n  }\n  public async uploadImageFiles(imageFiles: File[], x: number, y: number, onProgress?: PPTProgressListener): Promise<void> {\n    const newAcceptedFilePromises = imageFiles.map(file => this.fetchWhiteImageFileWith(file, x, y));\n    const newAcceptedFiles = await Promise.all(newAcceptedFilePromises);\n    await this.uploadImageFilesArray(newAcceptedFiles, onProgress);\n  }\n\n  private fetchWhiteImageFileWith(file: File, x: number, y: number): Promise<NetlessImageFile> {\n    return new Promise(resolve => {\n      const image = new Image();\n      const reader = new FileReader();\n      reader.readAsDataURL(file);\n      reader.onload = () => {\n        image.src = reader.result as string;\n        image.onload = async () => {\n          const res = this.getImageSize(image);\n          const imageFile: NetlessImageFile = {\n            width: res.width,\n            height: res.height,\n            file: file,\n            coordinateX: x,\n            coordinateY: y,\n          };\n          resolve(imageFile);\n        };\n      };\n    });\n  }\n  private async uploadImageFilesArray(imageFiles: NetlessImageFile[], onProgress?: PPTProgressListener): Promise<void> {\n    if (imageFiles.length > 0) {\n\n      const tasks: { uuid: string, imageFile: NetlessImageFile }[] = imageFiles.map(imageFile => {\n        return {\n          uuid: uuidv4(),\n          imageFile: imageFile,\n        };\n      });\n\n      for (const {uuid, imageFile} of tasks) {\n        const {x, y} = this.room.convertToPointInWorld({x: imageFile.coordinateX, y: imageFile.coordinateY});\n        this.room.insertImage({\n          uuid: uuid,\n          centerX: x,\n          centerY: y,\n          width: imageFile.width,\n          height: imageFile.height,\n        });\n      }\n      await Promise.all(tasks.map(task => this.handleUploadTask(task, onProgress)));\n      if (this.room.isWritable) {\n        this.room.setMemberState({\n          currentApplianceName: \"selector\",\n        });\n      }\n    }\n  }\n  private async handleUploadTask(task: TaskType, onProgress?: PPTProgressListener): Promise<void> {\n    const fileUrl: string = await this.addFile(`${task.uuid}${task.imageFile.file.name}`, task.imageFile.file, onProgress);\n    if (this.room.isWritable) {\n      this.room.completeImageUpload(task.uuid, fileUrl);\n    }\n  }\n\n  private getFile = (name: string): string => {\n    return this.ossClient.generateObjectUrl(name);\n  }\n  public addFile = async (path: string, rawFile: File, onProgress?: PPTProgressListener): Promise<string> => {\n    const res: MultipartUploadResult = await this.ossClient.multipartUpload(\n      path,\n      rawFile,\n      {\n        progress: (p: any) => {\n          if (onProgress) {\n            onProgress(PPTProgressPhase.Uploading, p);\n          }\n        },\n      });\n      if (this.ossUploadCallback) {\n        this.ossUploadCallback(res);\n      }\n    if (res.res.status === 200) {\n      return this.getFile(path);\n    } else {\n      throw new Error(`upload to ali oss error, status is ${res.res.status}`);\n    }\n  }\n}","import React, { useRef } from 'react';\nimport uuidv4 from 'uuid/v4';\nimport { PPTProgressListener, UploadManager } from \"../../../utils/upload-manager\";\nimport { PptKind, Room } from \"white-web-sdk\";\nimport { ossConfig, ossClient, resolveFileInfo } from '../../../utils/helper';\nimport { whiteboard } from '../../../stores/whiteboard';\nimport {t} from '../../../i18n';\n\nexport type UploadBtnProps = {\n  room: Room,\n  uuid: string,\n  roomToken: string,\n  onProgress?: PPTProgressListener,\n  onFailure?: (err: any) => void,\n  onSuccess?: () => void,\n  didUpload: () => void\n};\n\nexport const UploadBtn: React.FC<UploadBtnProps> = ({\n  room, uuid, roomToken,\n  onProgress, onFailure,\n  onSuccess,\n  didUpload\n}) => {\n\n  const ImageInput = useRef<any>(null);\n  const DynamicInput = useRef<any>(null);\n  const StaticInput = useRef<any>(null);\n  const AudioVideoInput = useRef<any>(null);\n\n  const uploadDynamic = async (event: any) => {\n    try {\n      didUpload();\n      const file = event.currentTarget.files[0];\n      if (file) {\n        const uploadManager = new UploadManager(ossClient, room);\n        const pptConverter = whiteboard.client.pptConverter(roomToken);\n        await uploadManager.convertFile(\n          file,\n          pptConverter,\n          PptKind.Dynamic,\n          ossConfig.folder,\n          uuid,\n          onProgress,\n        );\n        onSuccess && onSuccess();\n      }\n    } catch (err) {\n      onFailure && onFailure(err);\n      console.warn(err)\n    } finally {\n      if (DynamicInput.current) {\n        DynamicInput.current.value = ''\n      }\n    }\n  }\n\n  const uploadStatic = async (event: any) => {\n    try {\n      didUpload();\n      const file = event.currentTarget.files[0];\n      if (file) {\n        const uploadManager = new UploadManager(ossClient, room);\n        const pptConverter = whiteboard.client.pptConverter(roomToken);\n        await uploadManager.convertFile(\n          file,\n          pptConverter,\n          PptKind.Static,\n          ossConfig.folder,\n          uuid,\n          onProgress);\n        onSuccess && onSuccess();\n      }\n    } catch (err) {\n      onFailure && onFailure(err)\n      console.warn(err)\n    } finally {\n      if (StaticInput.current) {\n        StaticInput.current.value = ''\n      }\n    }\n  }\n\n  const uploadImage = async (event: any) => {\n    try {\n      didUpload();\n      const file = event.currentTarget.files[0];\n      if (file) {\n        const uploadFileArray: File[] = [];\n        uploadFileArray.push(file);\n        const uploadManager = new UploadManager(ossClient, room);\n        const $whiteboard = document.getElementById('whiteboard') as HTMLDivElement;\n        if ($whiteboard) {\n          const { clientWidth, clientHeight } = $whiteboard;\n          await uploadManager.uploadImageFiles(uploadFileArray, clientWidth / 2, clientHeight / 2, onProgress);\n        } else {\n          const clientWidth = window.innerWidth;\n          const clientHeight = window.innerHeight;\n          await uploadManager.uploadImageFiles(uploadFileArray, clientWidth / 2, clientHeight / 2, onProgress);\n        }\n        onSuccess && onSuccess();\n      }\n    } catch (err) {\n      onFailure && onFailure(err)\n      console.warn(err)\n    } finally {\n      if (ImageInput.current) {\n        ImageInput.current.value = ''\n      }\n    }\n  }\n\n  const uploadAudioVideo = async (event: any) => {\n    didUpload()\n    const uploadManager = new UploadManager(ossClient, room);\n    const file = event.currentTarget.files[0];\n    if (file) {\n      try {\n        const {fileName, fileType} = resolveFileInfo(file);\n        const path = `/${ossConfig.folder}`\n        const uuid = uuidv4();\n        const res = await uploadManager.addFile(`${path}/video-${fileName}${uuid}`, file,\n          onProgress\n        );\n        const isHttps = res.indexOf(\"https\") !== -1;\n        let url;\n        if (isHttps) {\n          url = res;\n        } else {\n          url = res.replace(\"http\", \"https\");\n        }\n        const type = fileType.split(\".\")[1];\n        if (url && whiteboard.state.room) {\n          if (type.toLowerCase() === 'mp4') {\n            const res = whiteboard.state.room.insertPlugin('video', {\n              originX: 0,\n              originY: 0,\n              width: 480,\n              height: 270,\n              attributes: {\n                  pluginVideoUrl: url,\n              },\n            });\n            console.log(\"[upload-btn] video resource after insert plugin, res: \", res);\n          }\n          if (type.toLowerCase() === 'mp3') {\n            const res = whiteboard.state.room.insertPlugin('audio', {\n              originX: 0,\n              originY: 0,\n              width: 480,\n              height: 86,\n              attributes: {\n                  pluginAudioUrl: url,\n              },\n            });\n            console.log(\"[upload-btn] audio resource after insert plugin, res: \", res);\n          }\n          onSuccess && onSuccess();\n        }\n      } catch(err) {\n        onFailure && onFailure(err);\n      } finally {\n        if (AudioVideoInput.current) {\n          AudioVideoInput.current.value = ''\n        }\n      }\n    }\n  }\n\n  return (\n    <div className=\"upload-btn\">\n      <div className=\"upload-items\">\n        <label htmlFor=\"upload-image\">\n          <div className=\"upload-image-resource\"></div>\n          <div className=\"text-container\">\n            <div className=\"title\">{t('upload_picture')}</div>\n            <div className=\"description\">bmp, jpg, png, gif</div>\n          </div>\n        </label>\n        <input ref={ImageInput} id=\"upload-image\" accept=\"image/*,.bmp,.jpg,.png,.gif\"\n          onChange={uploadImage} type=\"file\"></input>\n      </div>\n      <div className=\"slice-dash\"></div>\n      <div className=\"upload-items\">\n        <label htmlFor=\"upload-dynamic\">\n          <div className=\"upload-dynamic-resource\"></div>\n          <div className=\"text-container\">\n            <div className=\"title\">{t('convert_webpage')}</div>\n            <div className=\"description\">pptx</div>\n          </div>\n        </label>\n        <input ref={DynamicInput} id=\"upload-dynamic\" accept=\".pptx\" onChange={uploadDynamic} type=\"file\"></input>\n      </div>\n      <div className=\"slice-dash\"></div>\n      <div className=\"upload-items\">\n        <label htmlFor=\"upload-static\">\n          <div className=\"upload-static-resource\"></div>\n          <div className=\"text-container\">\n            <div className=\"title\">{t('convert_to_picture')}</div>\n            <div className=\"description\">pptx, word, pdf support</div>\n          </div>\n        </label>\n        <input ref={StaticInput} id=\"upload-static\" accept=\".doc,.docx,.ppt,.pptx,.pdf\" onChange={uploadStatic} type=\"file\"></input>\n      </div>\n      <div className=\"slice-dash\"></div>\n      <div className=\"upload-items\">\n        <label htmlFor=\"upload-video\">\n          <div className=\"upload-static-resource\"></div>\n          <div className=\"text-container\">\n            <div className=\"title\">{t('upload_audio_video')}</div>\n            <div className=\"description\">mp4,mp3</div>\n          </div>\n        </label>\n        <input ref={AudioVideoInput} id=\"upload-video\" accept=\".mp4,.mp3\" onChange={uploadAudioVideo} type=\"file\"></input>\n      </div>\n    </div>\n  )\n}","import React, {useRef, useState, useEffect} from 'react';\nimport { SceneResource, whiteboard } from '../../../stores/whiteboard';\nimport { t } from '../../../i18n';\nimport { Input, Tooltip } from '@material-ui/core';\nimport { useDebounce } from 'react-use';\nimport { globalStore } from '../../../stores/global';\nimport Icon from '../../icon'; \nimport {omit} from 'lodash';\n\ntype ResourceMenuProps = {\n  activeScenePath: string\n  items: SceneResource[]\n  onClose: (evt: any) => void\n  onClick: (rootPath: string) => void\n}\n\nconst debounceDelay = 800\n\nexport const ResourceItem: React.FC<any> = (props: any) => {\n\n  const [name, setName] = useState<string>(props.name);\n\n  const mounted = useRef<boolean>(false);\n\n  // `useDebounce` documentation: https://github.com/streamich/react-use/blob/master/docs/useDebounce.md\n  // `useDebounce` 文档请参考: https://github.com/streamich/react-use/blob/master/docs/useDebounce.md\n  const [, cancel] = useDebounce(\n    () => {\n      if (!mounted.current || !name) return\n      if (whiteboard.state.room) {\n        const globalState: any = whiteboard.state.room.state.globalState as any;\n        const sceneMap: any = globalState['sceneMap'];\n        if (!sceneMap) {\n          whiteboard.state.room?.setGlobalState({\n            sceneMap: {\n              [`${props.item.path}`]: `${name}`\n            }\n          })\n        } else {\n          const blob = new Blob([JSON.stringify(globalState)])\n          const globalStateLength = Object.keys(globalState).length\n          const sceneMapLength = Object.keys(sceneMap).length\n          // WARN: Please do not use too large size with room.setGlobalState api especially in production environment.\n          // 警告: 请不要给room.setGlobalState传递过大的参数，以免造成网络问题\n          if (\n            globalStateLength <= 30 \n            && sceneMapLength <= 30\n            && blob.size <= (1000 * 50)) {\n            whiteboard.state.room?.setGlobalState({sceneMap: {\n              ...sceneMap,\n              [`${props.item.path}`]: `${name}`\n            }})\n          } else {\n            globalStore.showToast({\n              type: 'whiteboard',\n              message: t(\"whiteboard.global_state_limit\")\n            })\n          }\n        }\n      }\n    },\n    debounceDelay,\n    [name]\n  );\n\n  useEffect(() => {\n    mounted.current = true;\n    return () => {\n      mounted.current = false;\n      cancel()\n    }\n  }, [cancel])\n\n  const onChange = (evt: any) => {\n    setName(evt.target.value)\n  }\n\n  const isMainScene = [\"/\", \"/init\"].indexOf(props.item.path) !== -1\n\n  return (\n    <>\n    <div className={`item ${props.activeClass} relative`}>\n      <Tooltip title={isMainScene ? t(\"control_items.delete_all\") : t(\"control_items.delete_current\")} placement=\"bottom\">\n        <span>\n          <Icon className=\"icon-delete\" onClick={() => {\n            const room = whiteboard.state.room\n            if (room) {\n              room.removeScenes(props.item.path)\n              const roomGlobalState = room.state.globalState as any;\n              const sceneMap = roomGlobalState['sceneMap'];\n              const newSceneMap = omit(sceneMap, [`${props.item.path}`])\n              if (isMainScene) {\n                room.setGlobalState({\n                  sceneMap: ''\n                })\n              } else {\n                room.setGlobalState({\n                  sceneMap: newSceneMap\n                })\n              }\n            }\n          }} />\n        </span>\n      </Tooltip>\n      <div className={`cover-item ${props.coverType}`}\n        onClick={() => {\n          props.handleClick(props.item.rootPath);\n        }}\n      ></div>\n      <span>\n        <Input className=\"title\"\n          onChange={onChange}\n          defaultValue={props.name}\n        />\n      </span>\n    </div>\n  </>\n  )\n}\n\nexport const ResourcesMenu: React.FC<ResourceMenuProps> = (\n  {\n    onClose,\n    items,\n    activeScenePath,\n    onClick\n  }\n) => {\n  return (\n    <div className=\"resource-menu-container\">\n      <div className=\"menu-header\">\n      <div className=\"menu-title\">{t('doc_center')}</div>\n        <div className=\"menu-close\" onClick={onClose}></div>\n      </div>\n      <div className=\"menu-body\">\n        <div className=\"menu-items\">\n          {items.map((item: any, key: number) => (\n            <ResourceItem\n              activeClass={activeScenePath === item.path ? 'active' : ''}\n              coverType={item.file.type.match(/ppt/) ? 'ppt-cover' : 'doc-cover'}\n              item={item}\n              name={item.file.name}\n              key={key+item.path+item.file.name}\n              handleClick={onClick}\n            ></ResourceItem>\n          ))}\n        </div>\n      </div>\n    </div>\n  )\n}","import React from 'react';\nimport { Tooltip } from '@material-ui/core';\nimport {t} from '../../i18n';\nimport {roomStore} from '../../stores/room';\n\nexport type ScaleControllerProps = {\n  zoomScale: number\n  zoomChange: (scale: number) => void\n  onClick: () => void\n  onClickBoardLock: () => void\n};\n\nexport default class ScaleController extends React.Component<ScaleControllerProps, {}> {\n\n  private static readonly syncDuration: number = 200;\n\n  private static readonly dividingRule: ReadonlyArray<number> = Object.freeze(\n      [\n          0.10737418240000011,\n          0.13421772800000012,\n          0.16777216000000014,\n          0.20971520000000016,\n          0.26214400000000015,\n          0.3276800000000002,\n          0.4096000000000002,\n          0.5120000000000001,\n          0.6400000000000001,\n          0.8,\n          1,\n          1.26,\n          1.5876000000000001,\n          2.000376,\n          2.5204737600000002,\n          3.1757969376000004,\n          4.001504141376,\n          5.041895218133761,\n          6.352787974848539,\n          8.00451284830916,\n          10,\n      ],\n  );\n\n  private tempRuleIndex?: number;\n  private syncRuleIndexTimer: any = null;\n\n  public constructor(props: ScaleControllerProps) {\n      super(props);\n  }\n\n  private delaySyncRuleIndex(): void {\n      if (this.syncRuleIndexTimer !== null) {\n          clearTimeout(this.syncRuleIndexTimer);\n          this.syncRuleIndexTimer = null;\n      }\n      this.syncRuleIndexTimer = setTimeout(() => {\n          this.syncRuleIndexTimer = null;\n          this.tempRuleIndex = undefined;\n\n      }, ScaleController.syncDuration);\n  }\n\n  private static readRuleIndexByScale(scale: number): number {\n      const {dividingRule} = ScaleController;\n\n      if (scale < dividingRule[0]) {\n          return 0;\n      }\n      for (let i = 0; i < dividingRule.length; ++i) {\n          const prePoint = dividingRule[i - 1];\n          const point = dividingRule[i];\n          const nextPoint = dividingRule[i + 1];\n\n          const begin = prePoint === undefined ? Number.MIN_SAFE_INTEGER : (prePoint + point) / 2;\n          const end = nextPoint === undefined ? Number.MAX_SAFE_INTEGER : (nextPoint + point) / 2;\n\n          if (scale >= begin && scale <= end) {\n              return i;\n          }\n      }\n      return dividingRule.length - 1;\n  }\n\n  private moveTo100(): void {\n      this.tempRuleIndex = ScaleController.readRuleIndexByScale(1);\n      this.delaySyncRuleIndex();\n      this.props.zoomChange(1);\n  }\n\n\n  private moveRuleIndex(deltaIndex: number): void {\n\n      if (this.tempRuleIndex === undefined) {\n          this.tempRuleIndex = ScaleController.readRuleIndexByScale(this.props.zoomScale);\n      }\n      this.tempRuleIndex += deltaIndex;\n\n      if (this.tempRuleIndex > ScaleController.dividingRule.length - 1) {\n          this.tempRuleIndex = ScaleController.dividingRule.length - 1;\n\n      } else if (this.tempRuleIndex < 0) {\n          this.tempRuleIndex = 0;\n      }\n      const targetScale = ScaleController.dividingRule[this.tempRuleIndex];\n\n      this.delaySyncRuleIndex();\n      this.props.zoomChange(targetScale);\n  }\n\n  public render(): React.ReactNode {\n      return (\n        <div className=\"zoom-controls\">\n          <Tooltip title={t(\"zoom_control.folder\")} placement=\"top\">\n            <div className=\"zoom-icon\" onClick={() => this.props.onClick()}>\n            </div>\n          </Tooltip>\n          <div className=\"zoom-hold\"></div>\n          <div className=\"zoom-size\">{Math.ceil(this.props.zoomScale * 100)} %</div>\n          <div className=\"zoom-items\">\n            <div className=\"item zoom-in\" onClick={() => this.moveRuleIndex(-1)}>-</div>\n            <div className=\"item zoom-out\" onClick={() => this.moveRuleIndex(+1)}>+</div>\n          </div>\n          <Tooltip title={!roomStore.state.course.lockBoard ? t(\"zoom_control.lock_board\") : t(\"zoom_control.unlock_board\")} placement=\"top\">\n            <div className=\"lock-board\" onClick={() => this.props.onClickBoardLock() }></div>\n          </Tooltip>\n        </div>\n      );\n  }\n}","import React, { useRef, useEffect, useState } from 'react';\n\nimport './upload-notice.scss';\nimport { useGlobalState } from '../../../containers/root-container';\n\ntype UploadNoticeProps = {\n  title: string\n  type: string\n}\n\nconst UploadNotice: React.FC<UploadNoticeProps> = ({\n  type,\n  title\n}) => {\n  return (\n    <div className={`notice-container ${type}`}>\n      <span className={`icon-${type}`}></span>\n      <span className=\"title\">{title}</span>\n    </div>\n  )\n}\n\nexport interface NoticeMessage {\n  title: string\n  key?: number\n  type: string\n}\n\ntype NoticeContext = {\n  state: NoticeMessage\n  Notice: (state: NoticeMessage) => any\n}\n\nconst UploadNoticeContext = React.createContext({} as NoticeContext);\n\nexport const useUploadNotice = () => React.useContext(UploadNoticeContext);\n\nconst duration = 2500;\n\nexport const UploadNoticeContainer: React.FC<{}> = () => {\n\n  const globalState = useGlobalState();\n\n  const uploadNotice = globalState.uploadNotice;\n\n  const queueRef = React.useRef<NoticeMessage[]>([]);\n  const [messages, setMessages] = useState<NoticeMessage[]>([]);\n  const timerRef = useRef<any>(null);\n\n  useEffect(() => {\n    if (messages.length > 0 && timerRef.current === null) {\n      timerRef.current = setTimeout(() => {\n        queueRef.current.shift()\n        setMessages([...queueRef.current]);\n        timerRef.current = null;\n      }, duration);\n    }\n  }, [messages]);\n\n  useEffect(() => {\n    if (!uploadNotice.title || !uploadNotice.type) return;\n    if (queueRef.current) {\n      queueRef.current.push({\n        ...uploadNotice,\n        key: +Date.now()\n      })\n      setMessages([...queueRef.current]);\n    }\n  }, [uploadNotice]);\n\n  return (\n    <div className=\"upload-notice\">\n      {messages.map((it: any, idx: number) => \n        <UploadNotice key={`${idx}${it.key}`}\n          type={it.type}\n          title={it.title}\n        />\n      )}\n    </div>\n  )\n}\n\nexport const UploadNoticeView = React.memo(UploadNoticeContainer);","import React, { useMemo, useEffect, useState, useRef, useCallback } from 'react';\nimport Whiteboard from './whiteboard';\nimport VideoPlayer from '../components/video-player';\nimport Control from './whiteboard/control';\nimport { AgoraStream } from '../utils/types';\nimport useStream from '../hooks/use-streams';\nimport { useLocation } from 'react-router';\nimport Tools from './whiteboard/tools';\nimport { SketchPicker, RGBColor } from 'react-color';\nimport { AgoraElectronClient } from '../utils/agora-electron-client';\nimport { UploadBtn } from './whiteboard/upload/upload-btn';\nimport { ResourcesMenu } from './whiteboard/resources-menu';\nimport ScaleController from './whiteboard/scale-controller';\nimport { PPTProgressPhase } from '../utils/upload-manager';\nimport { UploadNoticeView } from '../components/whiteboard/upload/upload-notice';\nimport Progress from '../components/progress/progress';\nimport { useRoomState, useWhiteboardState, useGlobalState } from '../containers/root-container';\nimport { roomStore } from '../stores/room';\nimport { whiteboard } from '../stores/whiteboard';\nimport { globalStore } from '../stores/global';\nimport { platform } from '../utils/platform';\nimport \"white-web-sdk/style/index.css\";\nimport { ViewMode } from 'white-web-sdk';\nimport { t } from '../i18n';\nimport { Collapse, Paper} from '@material-ui/core';\n\nconst pathName = (path: string): string => {\n  const reg = /\\/([^/]*)\\//g;\n  reg.exec(path);\n  if (RegExp.$1 === \"aria\") {\n      return \"\";\n  } else {\n      return RegExp.$1;\n  }\n}\n\ninterface MediaBoardProps {\n  handleClick?: (type: string) => void\n  children?: any\n}\n\nconst MediaBoard: React.FC<MediaBoardProps> = ({\n  handleClick,\n  children\n}) => {\n\n  const location = useLocation()\n\n  const roomState = useRoomState();\n\n  const whiteboardState = useWhiteboardState();\n  \n  const role = roomState.me.role;\n  const room = whiteboardState.room;\n  const me = roomState.me;\n  const course = roomState.course;\n  const rtmState = roomState.rtm;\n  \n  const ref = useRef<any>(false);\n\n  const [pageTool, setPageTool] = useState<string>('');\n\n  const {sharedStream} = useStream();\n\n  const handlePageTool: any = (evt: any, type: string) => {\n    setPageTool(type);\n    console.log(\"[page-tool] click \", type);\n    if (type === 'first_page') {\n      changePage(1, true);\n    }\n\n    if (type === 'last_page') {\n      changePage(totalPage, true);\n    }\n\n    if (type === 'prev_page') {\n      changePage(currentPage-1);\n    }\n\n    if (type === 'next_page') {\n      changePage(currentPage+1);\n    }\n\n    if (type === 'peer_hands_up') {\n      globalStore.showDialog({\n        type: 'apply',\n        message: `${globalStore.state.notice.text}`,\n      })\n      setPageTool('');\n    }\n\n    if (handleClick) {\n      handleClick(type);\n    }\n  }\n\n  const studentIsHost = useMemo(() => {\n    if (\n      location.pathname.match(/big-class/) \n      && me.role === 2 && me.coVideo) {\n      return true\n    }\n    return false\n  }, [me.role, me.coVideo, location])\n\n  \n  const current = useMemo(() => {\n    return {\n      totalPage: whiteboardState.totalPage,\n      currentPage: whiteboardState.currentPage,\n      type: whiteboardState.type\n    }\n  }, [whiteboardState.currentPage, whiteboardState.totalPage, whiteboardState.type]);\n\n  const totalPage = useMemo(() => {\n    if (!current) return 0;\n    return current.totalPage;\n  }, [current]);\n\n  const currentPage = useMemo(() => {\n    if (!current) return 0;\n    return current.currentPage + 1;\n  }, [current]);\n\n  const addNewPage: any = (evt: any) => {\n    if (!current || !room) return;\n    // const newIndex = netlessClient.state.sceneState.scenes.length;\n    const newIndex = room.state.sceneState.index + 1;\n    const scenePath = room.state.sceneState.scenePath;\n    const currentPath = `/${pathName(scenePath)}`;\n    if (room.isWritable) {\n      room.putScenes(currentPath, [{}], newIndex);\n      room.setSceneIndex(newIndex);\n    }\n\n    whiteboard.updateRoomState();\n  }\n\n  const changePage = (idx: number, force?: boolean) => {\n    if (ref.current || !current || !room || !room.isWritable) return;\n    const _idx = idx -1;\n    if (_idx < 0 || _idx >= current.totalPage) return;\n    if (force) {\n      room.setSceneIndex(_idx);\n      whiteboard.updateRoomState();\n      return\n    }\n    if (current.type === 'dynamic') {\n      if (_idx > current.currentPage) {\n        room.pptNextStep();\n        console.log(\"room.pptNextStep\");\n      } else {\n        room.pptPreviousStep();\n        console.log(\"room.pptPreviousStep\");\n      }\n    } else {\n      room.setSceneIndex(_idx);\n      console.log(\"room.setSceneIndex\", _idx);\n    }\n    whiteboard.updateRoomState();\n  }\n\n  const showControl: boolean = useMemo(() => {\n    if (+me.role === 1) return true;\n    if (location.pathname.match(/big-class/)) {\n      if (+me.role === 2) {\n        return true;\n      }\n    }\n    return false;\n  }, []);\n\nconst items = [\n  {\n    name: 'selector'\n  },\n  {\n    name: 'pencil'\n  },\n  {\n    name: 'rectangle',\n  },\n  {\n    name: 'ellipse'\n  },\n  {\n    name: 'text'\n  },\n  {\n    name: 'eraser'\n  },\n  {\n    name: 'color_picker'\n  },\n  {\n    name: 'add'\n  },\n  {\n    name: 'upload'\n  },\n  {\n    name: 'hand_tool'\n  }\n];\n\n  const toolItems = useMemo(() => {\n    return items.filter((item: any) => {\n      if (+role === 1) return item;\n      if (['add', 'folder', 'upload'].indexOf(item.name) === -1) {\n        if (item.name === 'hand_tool') {\n          if (course.lockBoard) {\n            return false;\n          } else {\n            return true;\n          }\n        }\n        return item;\n      }\n    });\n  }, [course.lockBoard]);\n\n  const drawable: string = useMemo(() => {\n    if (location.pathname.match('small-class|big-class')) {\n      if (+me.role === 1) {\n        return 'drawable';\n      }\n      if (+me.role === 2) {\n        if (Boolean(me.grantBoard)) {\n          return 'drawable';\n        } else {\n          return 'panel';\n        }\n      }\n    }\n    return 'drawable';\n  }, [me.role, me.grantBoard, location]);\n\n  const [tool, setTool] = useState<string | any>(drawable === 'drawable' ? 'pencil' : '');\n  \n  const [selector, updateSelector] = useState<string>('');\n\n  const handleToolClick = (evt: any, name: string) => {\n    if (!room || !room.isWritable) return;\n    if (['upload', 'color_picker', 'hand_tool'].indexOf(name) !== -1 && name === tool) {\n      setTool('');\n      if (name === 'hand_tool') {\n        room.handToolActive = false;\n        updateSelector('');\n      }\n      return;\n    }\n    if (name !== 'hand_tool') {\n      room.handToolActive = false;\n      updateSelector('');\n    }\n    setTool(name);\n    if (name === 'upload'\n      || name === 'folder'\n      || name === 'color_picker'\n      || name === 'add'\n      || name === 'hand_tool'\n    ) {\n      if (name === 'hand_tool') {\n        room.handToolActive = true;\n        updateSelector('hand');\n        room.setMemberState({currentApplianceName: 'selector'});\n      } else {\n        if (name === 'add' && addNewPage) {\n          addNewPage();\n        }\n      }\n      return;\n    }\n    room.setMemberState({currentApplianceName: name});\n  }\n\n  const onColorChanged = (color: any) => {\n    if (!room || !room.isWritable) return;\n    const {rgb} = color;\n    const {r, g, b} = rgb;\n    room.setMemberState({\n      strokeColor: [r, g, b]\n    });\n  }\n\n  const lock = useRef<boolean>(false);\n\n  useEffect(() => {\n    return () => {\n      lock.current = true;\n      whiteboard.destroy()\n      .then(() => {\n        console.log(\"destroy whiteboard\");\n      }).catch(console.warn);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (!rtmState.joined) return;\n    if (!lock.current && !whiteboard.state.room) {\n      lock.current = true;\n      whiteboard.join({\n        rid: roomStore.state.course.rid,\n        uuid: course.boardId,\n        roomToken: course.boardToken,\n        location: location.pathname,\n        userPayload: {\n          userId: roomStore.state.me.uid,\n          identity: +roomStore.state.me.role === 1 ? 'host' : 'guest'\n        }\n      })\n      .then(() => {\n        console.log(\"join whiteboard success\");\n      }).catch((err: any) => {\n        console.warn(err)\n      })\n      .finally(() => {\n        lock.current = false;\n      })\n    }\n\n  }, [JSON.stringify([rtmState.joined, course.boardId, course.boardToken])]);\n\n  const [uploadPhase, updateUploadPhase] = useState<string>('');\n  const [convertPhase, updateConvertPhase] = useState<string>('');\n\n  useEffect(() => {\n    console.log(\"uploading [mediaboard] uploadPhase: \", uploadPhase, \" convertPhase: \", convertPhase);\n  }, [uploadPhase, convertPhase]);\n\n  const UploadPanel = useCallback(() => {\n    if (tool !== 'upload' || !room) return null;\n    return (<UploadBtn \n      room={room}\n      uuid={room.uuid}\n      roomToken={room.roomToken}\n      didUpload={() => {\n        setTool('')\n      }}\n      onProgress={(phase: PPTProgressPhase, percent: number) => {\n        console.log(\"uploading [onProgress] phase: \", phase, \" percent: \", percent, \"uploadPhase: \", uploadPhase, \"convertPhase: \", convertPhase);\n        if (phase === PPTProgressPhase.Uploading) {\n          if (percent < 1) {\n            uploadPhase !== 'uploading' && updateUploadPhase('uploading');\n          } else {\n            updateUploadPhase('upload_success');\n          }\n          return;\n        }\n\n        if (phase === PPTProgressPhase.Converting) {\n          if (percent < 1) {\n            convertPhase !== 'converting' && updateConvertPhase('converting');\n          } else {\n            updateConvertPhase('convert_success');\n          }\n          return;\n        }\n      }}\n      onSuccess={() => {\n        uploadPhase && updateUploadPhase('');\n        updateConvertPhase && updateConvertPhase('');\n        console.log(\"uploading [onSuccess]\", uploadPhase, convertPhase);\n      }}\n      onFailure={(err: any) => {\n        // WARN: capture exception\n        if (uploadPhase === 'uploading') {\n          updateUploadPhase('upload_failure');\n          return;\n        }\n        if (convertPhase === 'converting') {\n          updateConvertPhase('convert_failure');\n          return;\n        }\n      }}\n    />)\n  }, [tool, room]);\n\n  useEffect(() => {\n    if (uploadPhase === 'upload_success') {\n      globalStore.showUploadNotice({\n        title: t('room.upload_success'),\n        type: 'ok',\n      });\n    }\n    if (uploadPhase === 'convert_failure') {\n      globalStore.showUploadNotice({\n        title: t('room.upload_failure'),\n        type: 'error',\n      });\n    }\n  }, [uploadPhase]);\n\n  useEffect(() => {\n    if (convertPhase === 'convert_success') {\n      globalStore.showUploadNotice({\n        title: t('room.convert_success'),\n        type: 'ok',\n      });\n    }\n    if (convertPhase === 'convert_failure') {\n      globalStore.showUploadNotice({\n        title: t('room.convert_failure'),\n        type: 'error',\n      });\n    }\n  }, [convertPhase]);\n\n  useMemo(() => {\n    if (+roomState.me.role === 2 && +roomState.course.lockBoard === 1) {\n      globalStore.showToast({\n        type: \"whiteboard\",\n        message: t(\"whiteboard.locked_board\")\n      })\n    }\n  }, [roomState.course.lockBoard, roomState.me.role])\n\n  useEffect(() => {\n    if (!me.role || !room) return;\n    if (+me.role === 1) {\n      if (roomStore.state.course.lockBoard) {\n        room.setViewMode(ViewMode.Broadcaster);\n      } else {\n        room.setViewMode(ViewMode.Freedom);\n      }\n    }\n    if (+me.role === 2) {\n      if (roomStore.state.course.lockBoard) {\n        room.handToolActive = false;\n        room.disableCameraTransform = true;\n        room.disableDeviceInputs = true;\n      } else {\n        room.disableCameraTransform = false;\n        room.disableDeviceInputs = false;\n      }\n    }\n  }, [room, roomStore.state.course.lockBoard, roomStore.state.me.role]);\n\n  const globalState = useGlobalState();\n\n  const scale = whiteboardState.scale ? whiteboardState.scale : 1;\n\n  const UploadProgressView = useCallback(() => {\n    if (uploadPhase === 'uploading') {\n      return (\n        <Progress title={t(\"room.uploading\")} />\n      )\n    } else \n    if (convertPhase === 'converting') {\n      return (\n        <Progress title={t(\"room.converting\")} />\n      )\n    }\n    return null;\n  }, [uploadPhase, convertPhase]);\n\n  let strokeColor: RGBColor | undefined = undefined;\n\n  if (whiteboardState.room && whiteboardState.room.state.memberState.strokeColor) {\n    const color = whiteboardState.room.state.memberState.strokeColor;\n    strokeColor = {\n      r: color[0],\n      g: color[1],\n      b: color[2],\n    }\n  }\n\n  // useEffect(() => {\n  //   if (!room) return;\n  //   if (drawable === 'panel') {\n  //     room.disableDeviceInputs = true;\n  //     room.disableCameraTransform = true;\n  //     return;\n  //   }\n  //   room.disableDeviceInputs = false;\n  //   room.disableCameraTransform = false;\n  // }, [drawable, room]);\n\n  const showTools = drawable === 'drawable';\n  \n  return (\n    <div className={`media-board ${drawable}`}>\n      {sharedStream ? \n        <VideoPlayer\n          id={`${sharedStream.streamID}`}\n          domId={`shared-${sharedStream.streamID}`}\n          className={'screen-sharing'}\n          streamID={sharedStream.streamID}\n          stream={sharedStream.stream}\n          video={true}\n          audio={true}\n          local={sharedStream.local}\n        />\n        :\n        <Whiteboard\n          loading={whiteboardState.loading}\n          className={selector}\n          room={room}\n        />\n      }\n      <div className=\"layer\">\n        {!sharedStream ? \n        <>\n          {showTools ? <Tools\n          items={toolItems}\n          currentTool={tool}\n          handleToolClick={handleToolClick} /> : null}\n          {tool === 'color_picker' && strokeColor ?\n            <SketchPicker\n              color={strokeColor}\n              onChangeComplete={onColorChanged} />\n          : null}\n        </> : null}\n        <UploadPanel />\n        {children ? children : null}\n      </div>\n      {me.role === 1 && room ?\n        <ScaleController\n          zoomScale={scale}\n          onClick={() => {\n            setTool('folder');\n          }}\n          onClickBoardLock={() => {\n            whiteboard.lock()\n              .then(console.log)\n              .catch(console.warn);\n          }}\n          zoomChange={(scale: number) => {\n            room.moveCamera({scale});\n            whiteboard.updateScale(scale);\n          }}\n        />\n        :\n        null\n      }\n      { showControl ?\n      <Control\n        notice={globalState.notice}\n        role={role}\n        sharing={Boolean(sharedStream)}\n        current={pageTool}\n        currentPage={currentPage}\n        totalPage={totalPage}\n        isHost={studentIsHost}\n        onClick={handlePageTool}/> : null }\n        {tool === 'folder' && whiteboardState.room ? \n        <ResourcesMenu\n          activeScenePath={whiteboardState.currentScenePath}\n          items={whiteboardState.dirs}\n          onClick={(rootPath: string) => {\n            if (room) {\n              room.setScenePath(rootPath);\n              room.setSceneIndex(0);\n              whiteboard.updateRoomState();\n            }\n          }}\n          onClose={(evt: any) => {\n            setTool('')\n          }}\n        />\n        : null}\n      <UploadNoticeView />\n      <UploadProgressView />\n    </div>\n  )\n} \n\nexport default React.memo(MediaBoard);","import React, { useRef, useEffect } from 'react';\nimport {Message} from './message';\nimport { Input } from '@material-ui/core';\nimport Button from '../custom-button';\nimport './panel.scss';\nimport { List } from 'immutable';\nimport { ChatMessage } from '../../utils/types';\nimport { useRoomState } from '../../containers/root-container';\nimport useChatControl from '../../hooks/use-chat-control';\nimport { t } from '../../i18n';\n\ninterface ChatPanelProps {\n  messages: List<ChatMessage>\n  value: string\n  sendMessage: (evt: any) => void\n  handleChange: (evt: any) => void\n}\n\nconst regexPattern = /^\\s+/;\n\nconst truncateBlank: (m: string) => string = (message: string) => message.replace(regexPattern, '');\n\nexport default function ChatPanel ({\n  messages,\n  value,\n  sendMessage,\n  handleChange,\n}: ChatPanelProps) {\n  \n  const {handleMute, disableChat, muteControl, muteChat} = useChatControl();\n\n  const ref = useRef(null);\n\n  const scrollDown = (current: any) => {\n    current.scrollTop = current.scrollHeight;\n  }\n\n  useEffect(() => {\n    scrollDown(ref.current);\n  }, [messages]);\n\n  const roomState = useRoomState();\n\n  return (\n    <>\n      <div className=\"chat-messages-container\">\n        <div className=\"chat-messages\" ref={ref}>\n          {messages.map((item: ChatMessage, key: number) => (\n            <Message key={key} nickname={item.account} content={item.text} link={item.link} sender={item.id === roomState.me.uid} />\n          ))}\n        </div>   \n      </div>\n      <div className=\"message-panel\">\n        {muteControl ?\n          <div className={`icon ${muteChat ? 'icon-chat-off' : 'icon-chat-on' }`}\n            onClick={() => {\n              handleMute(muteChat ? 'unmute' : 'mute')\n            }}></div> : null}\n        <Input\n          disabled={disableChat}\n          value={value}\n          placeholder={disableChat ? t(\"chat.banned\") : t(\"chat.placeholder\")}\n          disableUnderline\n          className={\"message-input\"}\n          onKeyPress={async (evt: any) => {\n            if (evt.key === 'Enter') {\n              const val = truncateBlank(value)\n              val.length > 0 && await sendMessage(val);\n            }\n          }}\n          onChange={handleChange}/>\n        <Button className={'chat-panel-btn'} name={t(\"chat.send\")}\n          onClick={async (evt: any) => {\n            const val = truncateBlank(value)\n            val.length > 0 && await sendMessage(val);\n          }} />\n      </div>\n    </>\n  )\n}","import { roomStore } from './../stores/room';\nimport {useEffect, useRef, useMemo} from 'react';\n\nexport default function useChatControl () {\n\n  const lock = useRef<boolean>(false);\n\n  useEffect(() => {\n    lock.current = false;\n    return () => {\n      lock.current = true;\n    }\n  }, []);\n\n  const me = roomStore.state.me;\n  const course = roomStore.state.course;\n\n  const muteControl = me.role === 1;\n\n  const muteChat = Boolean(course.muteChat);\n\n  const chat =  Boolean(me.chat);\n\n  const disableChat: boolean = useMemo(() => {\n    if (+me.role === 2 && (muteChat || !chat)) return true;\n    return false;\n  }, [muteChat, chat, me.role]);\n\n  return {\n    chat,\n    disableChat,\n    muteControl,\n    muteChat,\n    handleMute (type: string) {\n      if (!lock.current) {\n        lock.current = true;\n        roomStore.updateCourse({\n          muteChat: type === 'mute' ? 1 : 0\n        }).then(() => {\n          console.log(\"update success\");\n        }).catch(console.warn)\n        .finally(() => {\n          lock.current = false;\n        })\n      }\n\n    }\n  }\n}","import React, {useRef } from 'react';\nimport './student-list.scss';\nimport Icon from './icon';\nimport { useRoomState } from '../containers/root-container';\nimport {roomStore, AgoraUser} from '../stores/room';\nimport { get } from 'lodash';\n\ninterface CustomIconProps {\n  value: boolean\n  type: string\n  icon: string\n  id: string\n  onClick: (evt: any, id: string, type: string) => any\n}\n\nfunction CustomIcon ({\n  value,\n  icon,\n  id,\n  type,\n  onClick\n}: CustomIconProps) {\n  const handleClick = (evt: any) => {\n    onClick(evt, id, type);\n  }\n  return (\n    <div className=\"items\">\n        {/* {value ? */}\n          <Icon className={`icon-${icon}-${value ? \"on\" : \"off\"}`}\n            onClick={handleClick}\n            />\n             {/* : null } */}\n    </div>\n  )\n}\n\ninterface UserProps {\n  uid: string\n  account: string\n  video: number\n  audio: number\n  chat: number\n}\n\ninterface StudentListProps {\n  list: AgoraUser[]\n  role: number\n}\n\nexport default function StudentList ({\n  list,\n  role\n}: StudentListProps) {\n\n  const state = useRoomState();\n\n  const me = state.me;\n\n  const lock = useRef<any>(false);\n\n  const handleClick = (evt: any, id: string, type: string) => {\n    if (!roomStore.state || !me) return;\n    const targetUser = roomStore.state.users.get(`${id}`);\n    if (!targetUser) return;\n    if (!lock.current) {\n      const val = Boolean(get(targetUser, type));\n      lock.current = true;\n      if (val) {\n        roomStore.mute(targetUser.uid, type)\n        .then(() => {\n        }).catch(console.warn)\n        .finally(() => {\n          lock.current = false;\n        });\n      } else {\n        roomStore.unmute(targetUser.uid, type)\n        .then(() => {\n        }).catch(console.warn)\n        .finally(() => {\n          lock.current = false;\n        });\n      }\n    }\n  }\n\n  return (\n    <div className=\"student-list\">\n      {list.map((item: AgoraUser, key: number) => (\n        <div key={key} className=\"item\">\n          <div className=\"nickname\">{item.account}</div>\n          <div className=\"attrs-group\">\n            <CustomIcon type=\"grantBoard\" id={item.uid} value={Boolean(item.grantBoard)} icon=\"connect\" onClick={handleClick} />\n            <CustomIcon type=\"chat\" id={item.uid} value={Boolean(item.chat)} icon=\"chat\" onClick={handleClick} />\n            <CustomIcon type=\"audio\" id={item.uid} value={Boolean(item.audio)} icon=\"audio\" onClick={handleClick} />\n            <CustomIcon type=\"video\" id={item.uid} value={Boolean(item.video)} icon=\"video\" onClick={handleClick} />\n          </div>\n        </div>\n      ))}\n    </div>\n  )\n}","import { useState, useMemo } from 'react';\nimport { useRoomState } from '../containers/root-container';\nimport { roomStore, AgoraUser } from '../stores/room';\n\nexport default function useChatText () {\n  const [value, setValue] = useState('');\n\n  const roomState = useRoomState();\n\n  const roomName = roomState.course.roomName;\n\n  const me = roomState.me;\n\n  const role = me.role;\n\n  const messages = useMemo(() => {\n    return roomState.messages;\n  }, [roomState.messages]);\n\n  const rtmClient = roomStore.rtmClient;\n\n  const sendMessage = async (content: string) => {\n    if (rtmClient &&  me.uid) {\n      if (me.role !== 1 && (!me.chat || Boolean(roomState.course.muteChat))) return console.warn(\"chat already muted\");\n      if (me.role === 1 && !me.chat) return console.warn(\"chat already muted\");\n      await roomStore.sendChannelMessage({\n        message: content,\n      });\n      const message = {\n        account: me.account,\n        id: me.uid,\n        text: content,\n        ts: +Date.now()\n      }\n      roomStore.updateChannelMessage(message);\n      setValue('');\n    }\n  }\n\n  const handleChange = (evt: any) => {\n    setValue(evt.target.value.slice(0, 100));\n  }\n  const list = useMemo(() => {\n    if (!roomState.me.uid || !roomState.rtc.users.count() && !roomState.rtc.localStream) return [];\n    const my = roomState.users.get(roomState.me.uid);\n    const users = [];\n    if (my) {\n      users.push(my);\n    }\n    for (let id of roomState.rtc.users) {\n      const user = roomState.users.get(''+id);\n      if (user) {\n        users.push(user);\n      }\n    }\n    return users.filter((user: AgoraUser) => +user.role === 2);\n  }, [roomState.me.uid, roomState.rtc.users, roomState.users, roomState.rtc.localStream]);\n\n  return {\n    list,\n    role,\n    messages,\n    sendMessage,\n    value,\n    handleChange,\n    roomName\n  }\n}","import React, {useState} from 'react';\nimport ChatPanel from './chat/panel';\nimport StudentList from './student-list';\nimport useChatText from '../hooks/use-chat-text';\nimport { t } from '../i18n';\nimport { useGlobalState } from '../containers/root-container';\nimport { globalStore } from '../stores/global';\n\nexport default function Roomboard (props: any) {\n  const {\n    role, list, value,\n    messages, sendMessage, handleChange\n  } = useChatText();\n\n  const {active} = useGlobalState();\n\n  const [visible, setVisible] = useState(true);\n\n  const toggleCollapse = (evt: any) => {\n    setVisible(!visible);\n  }\n\n  const count = active !== 'chatroom' ? globalStore.state.newMessageCount : 0;\n\n  return (\n    <>\n    <div className={`${visible ? \"icon-collapse-off\" : \"icon-collapse-on\" } fixed`} onClick={toggleCollapse}></div>\n    {visible ? \n    <div className={`small-class chat-board`}>\n      <div className=\"menu\">\n        <div onClick={() => { globalStore.setActive('chatroom') }} className={`item ${active === 'chatroom' ? 'active' : ''}`}>\n          {t('room.chat_room')}\n          {active !== 'chatroom' && count > 0 ? <span className={`message-count ${globalStore.state.language}`}>{count}</span> : null}\n        </div>\n        <div onClick={() => { globalStore.setActive('studentList') }} className={`item ${active === 'studentList' ? 'active' : ''}`}>{t('room.student_list')}</div>\n      </div>\n      <div className={`chat-container ${active === 'chatroom' ? '' : 'hide'}`}>\n        <ChatPanel\n          messages={messages}\n          value={value}\n          sendMessage={sendMessage}\n          handleChange={handleChange} />\n      </div>\n      <div className={`student-container ${active !== 'chatroom' ? '' : 'hide'}`}>\n        <StudentList\n          role={role}\n          list={list}\n        />\n      </div>\n    </div>\n    : null}\n    </>\n  )\n}","import React from 'react';\nimport VideoMarquee from '../../components/video-marquee';\nimport MediaBoard from '../../components/mediaboard';\nimport Roomboard from '../../components/roomboard';\nimport './small-class.scss';\n\nexport default function SmallClass() {\n  return (\n    <div className=\"room-container\">\n      <VideoMarquee />\n      <div className=\"container\">\n        <MediaBoard />\n        <Roomboard currentActive={'media'} />\n      </div>\n    </div>\n  )\n}","import React from 'react';\nimport ChatPanel from './panel';\nimport { ChatMessage } from '../../utils/types';\nimport { List } from 'immutable';\n\ninterface ChatBoard {\n  name?: string\n  messages: List<ChatMessage>\n  value: string\n  teacher?: boolean\n  mute?: boolean\n  roomCount?: number\n  sendMessage: (evt: any) => void\n  handleChange: (evt: any) => void\n}\n\nexport default function ChatBoard (props: ChatBoard) {\n  return (\n    <div className=\"chat-board\">\n      {props.name ? <div className=\"chat-roomname\">{props.name}{props.roomCount ? `(${props.roomCount})` : null }</div> : null}\n        <ChatPanel\n          messages={props.messages}\n          value={props.value}\n          sendMessage={props.sendMessage}\n          handleChange={props.handleChange} />\n    </div>\n  )\n}","import React from 'react';\nimport VideoPlayer from '../../components/video-player';\nimport MediaBoard from '../../components/mediaboard';\nimport ChatBoard from '../../components/chat/board';\nimport useStream from '../../hooks/use-streams';\nimport useChatText from '../../hooks/use-chat-text';\n\nexport default function OneToOne() {\n  const {\n    value,\n    messages,\n    sendMessage,\n    handleChange,    \n  } = useChatText();\n\n  const {teacher, students, onPlayerClick} = useStream();\n\n  return (\n    <div className=\"room-container\">\n      <MediaBoard />\n      <div className=\"live-board\">\n        <div className=\"video-board\">\n          {teacher ?\n            <VideoPlayer\n              role=\"teacher\"\n              streamID={teacher.streamID}\n              stream={teacher.stream}\n              domId={`${teacher.streamID}`}\n              id={`${teacher.streamID}`}\n              account={teacher.account}\n              handleClick={onPlayerClick}\n              video={teacher.video}\n              audio={teacher.audio}\n              local={teacher.local}\n              autoplay={true}\n              /> :\n            <VideoPlayer\n              role=\"teacher\"\n              account={'teacher'}\n              domId={'teacher'}\n              streamID={0}\n              video\n              audio\n              />}\n          {students[0] ?\n            <VideoPlayer\n              role=\"student\"\n              streamID={students[0].streamID}\n              stream={students[0].stream}\n              domId={`${students[0].streamID}`}\n              id={`${students[0].streamID}`}\n              handleClick={onPlayerClick}\n              account={students[0].account}\n              video={students[0].video}\n              audio={students[0].audio}\n              local={students[0].local}\n              autoplay={true}\n            /> :\n            <VideoPlayer\n              role=\"student\"\n              account={\"student\"}\n              domId={\"student\"}\n              streamID={0}\n              video={false}\n              audio={false}\n            />}\n        </div>\n        <ChatBoard\n          messages={messages}\n          value={value}\n          sendMessage={sendMessage}\n          handleChange={handleChange}\n        />\n      </div>\n    </div>\n  )\n}","import React, {useRef, useEffect} from 'react';\nimport VideoPlayer from '../../components/video-player';\n\nimport './big-class.scss';\nimport ChatBoard from '../../components/chat/board';\nimport MediaBoard from '../../components/mediaboard';\nimport useStream from '../../hooks/use-streams';\nimport useChatText from '../../hooks/use-chat-text';\nimport { AgoraElectronClient } from '../../utils/agora-electron-client';\nimport AgoraWebClient from '../../utils/agora-rtc-client';\nimport { useRoomState } from '../../containers/root-container';\nimport { roomStore } from '../../stores/room';\nimport { platform } from '../../utils/platform';\nimport { eduApi } from '../../services/edu-api';\nimport { globalStore } from '../../stores/global';\nimport { t } from '../../i18n';\n\nexport default function BigClass() {\n  const {\n    value,\n    messages,\n    sendMessage,\n    handleChange,\n    role,\n    roomName\n  } = useChatText();\n\n  const roomState = useRoomState();\n\n  const me = roomState.me;\n\n  const memberCount = roomState.course.memberCount;\n\n  const {teacher, currentHost, onPlayerClick} = useStream();\n\n  const rtmLock = useRef<boolean>(false);\n  const lock = useRef<boolean>(false);\n  \n  useEffect(() => {\n    rtmLock.current = false;\n    return () => {\n      rtmLock.current = true;\n      lock.current = true;\n    }\n  }, []);\n\n  const handleClick = (type: string) => {\n    if (rtmLock.current) return;\n\n    if (type === 'hands_up') {\n      if (roomStore.state.course.teacherId) {\n        eduApi.studentSendApply(roomStore.state.course.roomId)\n          .then((data: any) => {\n            console.log('hands_up fulfilled', data)\n          })\n          .catch((err: any) => {\n            console.warn(err)\n          })\n      }\n    }\n  \n    if (type === 'hands_up_end') {\n      rtmLock.current = true;\n      eduApi.studentStopCoVideo(roomStore.state.course.roomId)\n        .then((data: any) => {\n          console.log('hands_up_end success', data)\n        })\n        .catch((err: any) => {\n          console.warn(err)\n        })\n        .finally(() => {\n          rtmLock.current = false;\n        })\n    }\n  }\n\n  // TODO: handleClose\n  const closeLock = useRef<boolean>(false);\n\n  useEffect(() => {\n    return () => {\n      closeLock.current = true;\n    }\n  }, []);\n\n  const handleClose = (type: string, streamID: number) => {\n    if (type === 'close') {\n      if (!currentHost || closeLock.current) return;\n\n      const rtmClient = roomStore.rtmClient;\n      const rtcClient = roomStore.rtcClient;\n      const teacherUid = roomStore.state.course.teacherId;\n\n      console.log(\"close rtmClient: \", rtmClient, \", rtcClient: \", rtcClient, \", teacherUid: \", teacherUid, \", lock :\", closeLock.current);\n\n      if (currentHost.streamID === +me.uid && teacherUid) {\n        const quitClient = new Promise((resolve, reject) => {\n          if (platform === 'electron') {\n            const nativeClient = rtcClient as AgoraElectronClient;\n            const val = nativeClient.unpublish();\n            if (val >= 0) {\n              resolve();\n            } else {\n              console.warn('quit native client failed');\n              reject(val);\n            }\n          }\n          if (platform === 'web') {\n            const webClient = rtcClient as AgoraWebClient;\n            resolve(webClient.unpublishLocalStream());\n          }\n        });\n        closeLock.current = true;\n        rtmLock.current = true;\n        Promise.all([\n          eduApi.studentStopCoVideo(\n            roomStore.state.course.roomId\n          ),\n          quitClient\n        ]).then(() => {\n          globalStore.showToast({\n            type: 'close_youself_co_video',\n            message: t('toast.close_youself_co_video')\n          })\n          rtmLock.current = false;\n        }).catch((err: any) => {\n          rtmLock.current = false;\n          console.warn(err);\n          throw err;\n        }).finally(() => {\n          closeLock.current = false;\n        })\n      }\n\n      if (`${teacherUid}` && `${teacherUid}` === `${me.uid}`) {\n        rtmLock.current = true;\n        closeLock.current = true;\n        Promise.all([\n          eduApi.teacherCancelStudent(\n            roomStore.state.course.roomId,\n            roomStore.state.applyUser.userId,\n          )\n        ]).then(() => {\n          globalStore.showToast({\n            type: 'peer_hands_up',\n            message: t(\"toast.close_co_video\")\n          })\n          roomStore.updateApplyUser({\n            account: '',\n            userId: '',\n          })\n          rtmLock.current = false;\n        }).catch((err: any) => {\n          rtmLock.current = false;\n          console.warn(err);\n        }).finally(() => {\n          closeLock.current = false;\n        })\n      }\n    }\n  }\n  \n  return (\n    <div className=\"room-container\">\n      <div className=\"live-container\">\n        <MediaBoard\n          handleClick={handleClick}\n        >\n          <div className=\"video-container\">\n          {currentHost ? \n            <VideoPlayer\n              role=\"teacher\"\n              streamID={currentHost.streamID}\n              stream={currentHost.stream}\n              domId={`${currentHost.streamID}`}\n              id={`${currentHost.streamID}`}\n              account={currentHost.account}\n              handleClick={onPlayerClick}\n              close={me.role === 1 || +me.uid === currentHost.streamID}\n              handleClose={handleClose}\n              video={currentHost.video}\n              audio={currentHost.audio}\n              local={currentHost.local}\n              autoplay={Boolean(me.coVideo)}\n            /> :\n            null\n          }\n        </div>\n        </MediaBoard>\n      </div>\n      <div className=\"live-board\">\n        <div className=\"video-board\">\n          {teacher ?\n            <VideoPlayer\n              role=\"teacher\"\n              streamID={teacher.streamID}\n              stream={teacher.stream}\n              domId={`dom-${teacher.streamID}`}\n              id={`${teacher.streamID}`}\n              account={teacher.account}\n              handleClick={onPlayerClick}\n              audio={Boolean(teacher.audio)}\n              video={Boolean(teacher.video)}\n              local={Boolean(teacher.local)}\n              autoplay={Boolean(me.coVideo)}\n              /> :\n            <VideoPlayer\n              role=\"teacher\"\n              account={'teacher'}\n              streamID={0}\n              video={true}\n              audio={true}\n              />}\n        </div>\n        <ChatBoard\n          name={roomName}\n          teacher={role === 1}\n          messages={messages}\n          mute={Boolean(roomState.course.muteChat)}\n          value={value}\n          roomCount={memberCount}\n          sendMessage={sendMessage}\n          handleChange={handleChange} />\n      </div>\n    </div>\n  )\n}\n","import React from 'react';\nimport {t} from '../i18n';\n\nimport './404.scss';\nimport { useHistory } from 'react-router-dom';\n\nconst BasicLayout: React.FC<any> = ({children}) => {\n  return (\n    <div className=\"main-layout-container\">\n      {children}\n    </div>\n  )\n}\n\nexport const PageNotFound: React.FC<any> = () => {\n\n  const history = useHistory();\n\n  return (\n    <BasicLayout>\n      <div className=\"layout-content\">\n        <h1>404</h1>\n        <h2>{t('error.not_found')}</h2>\n        <a style={{\"cursor\": \"pointer\"}} onClick={() => {\n            history.push('/');\n        }}>{t('return.home')}</a>\n      </div>\n    </BasicLayout>\n  )\n}","import React, { useState } from 'react';\nimport '../classroom/room.scss';\nimport { isElectron } from '../../utils/platform';\nimport '../../components/nav.scss';\nimport { Tooltip } from '@material-ui/core';\nimport { t } from '../../i18n';\nimport { globalStore } from '../../stores/global';\nimport Log from '../../utils/LogUploader';\nimport { usePlatform } from '../../containers/platform-container';\nimport Icon from '../../components/icon';\n\nconst MenuNav = () => {\n\n  const [loading, setLoading] = useState<boolean>(false)\n\n  const {NavBtn} = usePlatform();\n\n  const handleClick = (type: string) => {\n    if (type === 'exit') {\n      globalStore.showDialog({\n        type: 'exitRoom',\n        message: t('toast.quit_room'),\n      });\n    } else if (type === 'uploadLog') {\n      setLoading(true)\n      Log.doUpload().then((resultCode: any) => {\n        globalStore.showDialog({\n          type: 'uploadLog',\n          message: t('toast.show_log_id', { reason: `${resultCode}` })\n        });\n      }).finally(() => {\n        setLoading(false)\n      })\n    }\n  }\n  return (\n    <div className={`nav-container menu-nav ${isElectron ? 'draggable' : ''}`}>\n      <div className=\"menu-nav-right\">\n        {/* <Tooltip title={t(\"icon.upload-log\")} placement=\"bottom\">\n          <div>\n            <Icon className={loading ? \"icon-loading\" : \"icon-upload\"} onClick={(evt: any) => {\n              handleClick('uploadLog')\n            }}></Icon>\n          </div>\n        </Tooltip> */}\n        <NavBtn />\n      </div>\n    </div>\n  )\n}\n\nexport function ReplayPageWrapper({ children }: any) {\n  return (\n    <>\n    {isElectron ? \n      <div className=\"replay-page-wrapper\">\n        <MenuNav />\n        {children}\n      </div>\n      : children\n    }\n    </>\n  );\n}\n\n","import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Your Website\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport function ConfigPage() {\n  const classes = useStyles();\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <form className={classes.form} noValidate>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"appID\"\n            label=\"Agora AppID\"\n            name=\"appID\"\n            autoFocus\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"Netless SDKToken\"\n            label=\"Netless SDKToken\"\n            id=\"sdkToken\"\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Send\n          </Button>\n          <Grid container>\n            <Grid item xs>\n              <Link href=\"https://github.com/agoraio-usecase/eEducation/issues/new\" target=\"_blank\" variant=\"body2\">\n                Feedback Github issues\n              </Link>\n            </Grid>\n            <Grid item>\n              <Link href=\"#\" variant=\"body2\">\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Box mt={8}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport CustomBrowserRouter from '../containers/custom-browser-router';\nimport ThemeContainer from '../containers/theme-container';\nimport Home from './home';\nimport DeviceTest from './device-test';\nimport { RoomPage } from './classroom';\nimport Loading from '../components/loading';\nimport Toast from '../components/toast';\nimport '../icons.scss';\nimport { PlatformContainer } from '../containers/platform-container';\nimport ReplayContainer from './replay/replay';\nimport AgoraReplayContainer from './replay/agora-replay';\nimport { RootProvider } from '../containers/root-container';\nimport SmallClass from './classroom/small-class';\nimport OneToOne from './classroom/one-to-one';\nimport BigClass from './classroom/big-class';\nimport { PageNotFound } from './404';\nimport RoomDialog from '../components/dialog';\nimport { ReplayPageWrapper } from './replay';\nimport { ConfigPage } from './config';\n\nexport default function () {\n  return (\n    <ThemeContainer>\n      <CustomBrowserRouter>\n        <PlatformContainer>\n        <RootProvider>\n          <Loading />\n          <Toast />\n          <RoomDialog />\n          <Route exact path=\"/device_test\">\n            <DeviceTest />\n          </Route>\n          <Route exact path=\"/classroom/one-to-one\">\n            <RoomPage >\n              <OneToOne />\n            </RoomPage>\n          </Route>\n          <Route exact path=\"/classroom/small-class\">\n            <RoomPage>\n              <SmallClass />\n            </RoomPage>\n          </Route>\n          <Route exact path=\"/classroom/big-class\">\n            <RoomPage>\n              <BigClass />\n            </RoomPage>\n          </Route>\n          <Route path=\"/replay/record/:recordId\">\n            <ReplayPageWrapper>\n              <ReplayContainer />\n            </ReplayPageWrapper>\n          </Route>\n          <Route path=\"/replay/agora_record/:recordId\">\n            <ReplayPageWrapper>\n              <AgoraReplayContainer />\n            </ReplayPageWrapper>\n          </Route>\n          <Route path=\"/config\">\n            <ConfigPage />\n          </Route>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n          {/* <Route path=\"/error\">\n            <ErrorPage />\n          </Route> */}\n          <Route exact path=\"/404\">\n            <PageNotFound />\n          </Route>\n        </RootProvider>\n        </PlatformContainer>\n      </CustomBrowserRouter>\n    </ThemeContainer>\n  )\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './pages/index';\nimport * as serviceWorker from './serviceWorker';\nimport TagManager from 'react-gtm-module';\nimport Eruda from 'eruda';\nimport UAParser from 'ua-parser-js';\nimport {isElectron} from './utils/platform';\n\nconst parser = new UAParser();\n\nconst userAgentInfo = parser.getResult();\n\nconst isMobile = () => {\n  return userAgentInfo.device.type === 'mobile';\n};\n\n// use gtm\nif (process.env.REACT_APP_AGORA_GTM_ID) {\n  !isElectron && TagManager.initialize({\n    gtmId: process.env.REACT_APP_AGORA_GTM_ID\n  })\n}\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\nif (isMobile()) {\n  const el = document.createElement('div');\n  document.body.appendChild(el);\n  \n  Eruda.init({\n    container: el,\n    tool: ['console', 'elements']\n  });\n}"],"sourceRoot":""}